[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "Leonard Lee",
    "section": "",
    "text": "Leonard Lee is an aspiring student of Data Analytics, and has been an infantry officer since 2013. When not honing his hand-eye coordination in the digital realm, he enjoys in-line skating and most sports."
  },
  {
    "objectID": "about.html#education",
    "href": "about.html#education",
    "title": "Leonard Lee",
    "section": "Education",
    "text": "Education\nUniversity of Glasgow, Scotland | United Kingdom\nBachelor of Science in Psychology | Sept 2014 - Sept 2018"
  },
  {
    "objectID": "about.html#experience",
    "href": "about.html#experience",
    "title": "Leonard Lee",
    "section": "Experience",
    "text": "Experience\nSingapore Armed Forces | Training Development Officer | April 2022 - present\nSingapore Armed Forces | Infantry Officer | July 2013 - present"
  },
  {
    "objectID": "hands-on_Ex/hands-on_Ex01/Hands-on_Ex01.html",
    "href": "hands-on_Ex/hands-on_Ex01/Hands-on_Ex01.html",
    "title": "Hands-On_Exercise 1",
    "section": "",
    "text": "The code chunk below uses p_load function of pacman package to check if tidyverse packages are installed in the computer. If they are, then they will be launched into R.\n\npacman::p_load(tidyverse, readr)\n\n\n\n\n\nexam_data &lt;- read_csv(\"data/Exam_data.csv\")\n\nRows: 322 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): ID, CLASS, GENDER, RACE\ndbl (3): ENGLISH, MATHS, SCIENCE\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message."
  },
  {
    "objectID": "hands-on_Ex/hands-on_Ex01/Hands-on_Ex01.html#install-and-launching-r-packages",
    "href": "hands-on_Ex/hands-on_Ex01/Hands-on_Ex01.html#install-and-launching-r-packages",
    "title": "Hands-On_Exercise 1",
    "section": "",
    "text": "The code chunk below uses p_load function of pacman package to check if tidyverse packages are installed in the computer. If they are, then they will be launched into R.\n\npacman::p_load(tidyverse, readr)"
  },
  {
    "objectID": "hands-on_Ex/hands-on_Ex01/Hands-on_Ex01.html#importing-the-data",
    "href": "hands-on_Ex/hands-on_Ex01/Hands-on_Ex01.html#importing-the-data",
    "title": "Hands-On_Exercise 1",
    "section": "",
    "text": "exam_data &lt;- read_csv(\"data/Exam_data.csv\")\n\nRows: 322 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): ID, CLASS, GENDER, RACE\ndbl (3): ENGLISH, MATHS, SCIENCE\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message."
  },
  {
    "objectID": "hands-on_Ex/hands-on_Ex02/Hands-on_Ex02.html",
    "href": "hands-on_Ex/hands-on_Ex02/Hands-on_Ex02.html",
    "title": "Hands-on_Ex02",
    "section": "",
    "text": "pacman::p_load(ggrepel, patchwork,\n               ggthemes, hrbrthemes,\n               tidyverse)"
  },
  {
    "objectID": "hands-on_Ex/hands-on_Ex02/Hands-on_Ex02.html#ggrepel",
    "href": "hands-on_Ex/hands-on_Ex02/Hands-on_Ex02.html#ggrepel",
    "title": "Hands-on_Ex02",
    "section": "1: ggrepel",
    "text": "1: ggrepel\n\nOriginalWith ggrepel\n\n\n\nggplot(data=exam_data, aes(x= MATHS, y=ENGLISH)) + geom_point() + geom_smooth(method=lm, size=0.5) +\ngeom_label(aes(label = ID), hjust = .5, vjust = -.5) + coord_cartesian(xlim=c(0,100), ylim=c(0,100)) + ggtitle(\"English scores versus Maths scores for Primary 3\")\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  geom_label_repel(aes(label = ID), \n                   fontface = \"bold\") +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  ggtitle(\"English scores versus Maths scores for Primary 3\")"
  },
  {
    "objectID": "hands-on_Ex/hands-on_Ex02/Hands-on_Ex02.html#ggplot-2-themes",
    "href": "hands-on_Ex/hands-on_Ex02/Hands-on_Ex02.html#ggplot-2-themes",
    "title": "Hands-on_Ex02",
    "section": "2: ggplot 2 themes",
    "text": "2: ggplot 2 themes\n\nOriginalwith ggplot theme\n\n\n\nggplot(data=exam_data, aes(x = MATHS)) + geom_histogram(bins=20, boundary = 100, color=\"grey25\", fill=\"grey90\") + theme_gray() + ggtitle(\"Distribution of Maths scores\")\n\n\n\n\n\n\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_economist()"
  },
  {
    "objectID": "hands-on_Ex/hands-on_Ex02/Hands-on_Ex02.html#hrbrthemes",
    "href": "hands-on_Ex/hands-on_Ex02/Hands-on_Ex02.html#hrbrthemes",
    "title": "Hands-on_Ex02",
    "section": "3: hrbrthemes",
    "text": "3: hrbrthemes\nggplot(data=exam_data, aes(x = MATHS)) + geom_histogram(bins=20, boundary = 100, color=“grey25”, fill=“grey90”) + ggtitle(“Distribution of Maths scores”) + theme_ipsum()\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_ipsum(axis_title_size = 18,\n              base_size = 15,\n              grid = \"Y\")"
  },
  {
    "objectID": "hands-on_Ex/hands-on_Ex02/Hands-on_Ex02.html#creating-individual-graphs",
    "href": "hands-on_Ex/hands-on_Ex02/Hands-on_Ex02.html#creating-individual-graphs",
    "title": "Hands-on_Ex02",
    "section": "4: Creating Individual Graphs",
    "text": "4: Creating Individual Graphs\n\np1p2p3\n\n\n\np1 &lt;- ggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") + \n  coord_cartesian(xlim=c(0,100)) +\n  ggtitle(\"Distribution of Maths scores\")\n\n\n\n\np2 &lt;- ggplot(data=exam_data, \n             aes(x = ENGLISH)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  coord_cartesian(xlim=c(0,100)) +\n  ggtitle(\"Distribution of English scores\")\n\n\n\n\np3 &lt;- ggplot(data=exam_data, \n             aes(x= MATHS, \n                 y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  ggtitle(\"English scores versus Maths scores for Primary 3\")"
  },
  {
    "objectID": "hands-on_Ex/hands-on_Ex02/Hands-on_Ex02.html#merging-graphs",
    "href": "hands-on_Ex/hands-on_Ex02/Hands-on_Ex02.html#merging-graphs",
    "title": "Hands-on_Ex02",
    "section": "5.1 Merging Graphs",
    "text": "5.1 Merging Graphs\n\nMerging p1 & p2Merging p1 p2 p3\n\n\n\np1 + p2\n\n\n\n\n\n\n\n(p1 / p2) | p3"
  },
  {
    "objectID": "hands-on_Ex/hands-on_Ex02/Hands-on_Ex02.html#modifying-composite-graph",
    "href": "hands-on_Ex/hands-on_Ex02/Hands-on_Ex02.html#modifying-composite-graph",
    "title": "Hands-on_Ex02",
    "section": "5.2 Modifying Composite Graph",
    "text": "5.2 Modifying Composite Graph\n\nAdd TagAdd insertComposite using patchwork and ggtheme\n\n\n\n((p1 / p2) | p3) + \n  plot_annotation(tag_levels = 'I')\n\n\n\n\n\n\n\np3 + inset_element(p2, \n                   left = 0.02, \n                   bottom = 0.7, \n                   right = 0.5, \n                   top = 1)\n\n\n\n\n\n\n\npatchwork &lt;- (p1 / p2) | p3\npatchwork & theme_economist()"
  },
  {
    "objectID": "hands-on_Ex/hands-on_Ex03/Hands-on_Ex03.html",
    "href": "hands-on_Ex/hands-on_Ex03/Hands-on_Ex03.html",
    "title": "Hands-on_Ex03",
    "section": "",
    "text": "{pacman::p_load(ggiraph, plotly,} patchwork, DT, tidyverse)}"
  },
  {
    "objectID": "hands-on_Ex/hands-on_Ex03/Hands-on_Ex03.html#creating-interactive-graph-using-ggiraph",
    "href": "hands-on_Ex/hands-on_Ex03/Hands-on_Ex03.html#creating-interactive-graph-using-ggiraph",
    "title": "Hands-on_Ex03",
    "section": "Creating interactive graph using ggiraph",
    "text": "Creating interactive graph using ggiraph\np &lt;- ggplot(data=exam_data, aes(x = MATHS)) + geom_dotplot_interactive( aes(tooltip = ID), stackgroups = TRUE, binwidth = 1, method = “histodot”) + scale_y_continuous(NULL, breaks = NULL) girafe( ggobj = p, width_svg = 6, height_svg = 6*0.618 )"
  },
  {
    "objectID": "hands-on_Ex/hands-on_Ex03/Hands-on_Ex03.html#displaying-multiple-information",
    "href": "hands-on_Ex/hands-on_Ex03/Hands-on_Ex03.html#displaying-multiple-information",
    "title": "Hands-on_Ex03",
    "section": "Displaying Multiple information",
    "text": "Displaying Multiple information\nexam_data\\(tooltip &lt;- c(paste0( \"Name = \", exam_data\\)ID,\n“Class =”, exam_data$CLASS))\np &lt;- ggplot(data=exam_data, aes(x = MATHS)) + geom_dotplot_interactive( aes(tooltip = exam_data$tooltip), stackgroups = TRUE, binwidth = 1, method = “histodot”) + scale_y_continuous(NULL,\nbreaks = NULL) girafe( ggobj = p, width_svg = 8, height_svg = 8*0.618 )"
  },
  {
    "objectID": "hands-on_Ex/hands-on_Ex03/Hands-on_Ex03.html#customising-tooltip-style",
    "href": "hands-on_Ex/hands-on_Ex03/Hands-on_Ex03.html#customising-tooltip-style",
    "title": "Hands-on_Ex03",
    "section": "Customising Tooltip Style",
    "text": "Customising Tooltip Style\ntooltip_css &lt;- “background-color:white; #&lt;&lt; font-style:bold; color:black;” #&lt;&lt;\np &lt;- ggplot(data=exam_data, aes(x = MATHS)) + geom_dotplot_interactive(\naes(tooltip = ID),\nstackgroups = TRUE,\nbinwidth = 1,\nmethod = “histodot”) +\nscale_y_continuous(NULL,\nbreaks = NULL) girafe(\nggobj = p,\nwidth_svg = 6,\nheight_svg = 6*0.618, options = list( #&lt;&lt; opts_tooltip( #&lt;&lt; css = tooltip_css)) #&lt;&lt; )\n\nDisplaying Statistics\ntooltip &lt;- function(y, ymax, accuracy = .01) { mean &lt;- scales::number(y, accuracy = accuracy) sem &lt;- scales::number(ymax - y, accuracy = accuracy) paste(“Mean maths scores:”, mean, “+/-”, sem) }\ngg_point &lt;- ggplot(data=exam_data, aes(x = RACE), ) + stat_summary(aes(y = MATHS, tooltip = after_stat(\ntooltip(y, ymax))),\nfun.data = “mean_se”, geom = GeomInteractiveCol,\nfill = “light blue” ) + stat_summary(aes(y = MATHS), fun.data = mean_se, geom = “errorbar”, width = 0.2, size = 0.2 )\ngirafe(ggobj = gg_point, width_svg = 8, height_svg = 8*0.618)\n\n\nHover Effect\np &lt;- ggplot(data=exam_data, aes(x = MATHS)) + geom_dotplot_interactive(\naes(data_id = CLASS),\nstackgroups = TRUE,\nbinwidth = 1,\nmethod = “histodot”) +\nscale_y_continuous(NULL,\nbreaks = NULL) girafe(\nggobj = p,\nwidth_svg = 6,\nheight_svg = 6*0.618\n)\n\n\nStyling Hover Effect\np &lt;- ggplot(data=exam_data, aes(x = MATHS)) + geom_dotplot_interactive(\naes(data_id = CLASS),\nstackgroups = TRUE,\nbinwidth = 1,\nmethod = “histodot”) +\nscale_y_continuous(NULL,\nbreaks = NULL) girafe(\nggobj = p,\nwidth_svg = 6,\nheight_svg = 6*0.618, options = list(\nopts_hover(css = “fill: #202020;”),\nopts_hover_inv(css = “opacity:0.2;”) )\n)\n\n\nCombining tooltip and hover\np &lt;- ggplot(data=exam_data, aes(x = MATHS)) + geom_dotplot_interactive(\naes(tooltip = CLASS, data_id = CLASS),\nstackgroups = TRUE,\nbinwidth = 1,\nmethod = “histodot”) +\nscale_y_continuous(NULL,\nbreaks = NULL) girafe(\nggobj = p,\nwidth_svg = 6,\nheight_svg = 6*0.618, options = list(\nopts_hover(css = “fill: #202020;”),\nopts_hover_inv(css = “opacity:0.2;”) )\n)\n\n\nClick effect (using onclick)\nexam_data\\(onclick &lt;- sprintf(\"window.open(\\\"%s%s\\\")\", \"https://www.moe.gov.sg/schoolfinder?journey=Primary%20school\", as.character(exam_data\\)ID))\np &lt;- ggplot(data=exam_data, aes(x = MATHS)) + geom_dotplot_interactive(\naes(onclick = onclick),\nstackgroups = TRUE,\nbinwidth = 1,\nmethod = “histodot”) +\nscale_y_continuous(NULL,\nbreaks = NULL) girafe(\nggobj = p,\nwidth_svg = 6,\nheight_svg = 6*0.618)"
  },
  {
    "objectID": "hands-on_Ex/hands-on_Ex03/Hands-on_Ex03.html#coordinated-multiple-views-with-ggiraph",
    "href": "hands-on_Ex/hands-on_Ex03/Hands-on_Ex03.html#coordinated-multiple-views-with-ggiraph",
    "title": "Hands-on_Ex03",
    "section": "Coordinated Multiple Views with ggiraph",
    "text": "Coordinated Multiple Views with ggiraph\nIn order to build a coordinated multiple views as shown in the example above, the following programming strategy will be used:\n\nAppropriate interactive functions of ggiraph will be used to create the multiple views.\npatchwork function of patchwork package will be used inside girafe function to create the interactive coordinated multiple views.\n\np1 &lt;- ggplot(data=exam_data, aes(x = MATHS)) + geom_dotplot_interactive(\naes(data_id = ID),\nstackgroups = TRUE,\nbinwidth = 1,\nmethod = “histodot”) +\ncoord_cartesian(xlim=c(0,100)) + scale_y_continuous(NULL,\nbreaks = NULL)\np2 &lt;- ggplot(data=exam_data, aes(x = ENGLISH)) + geom_dotplot_interactive(\naes(data_id = ID),\nstackgroups = TRUE,\nbinwidth = 1,\nmethod = “histodot”) + coord_cartesian(xlim=c(0,100)) + scale_y_continuous(NULL,\nbreaks = NULL)\ngirafe(code = print(p1 + p2), width_svg = 6, height_svg = 3, options = list( opts_hover(css = “fill: #202020;”), opts_hover_inv(css = “opacity:0.2;”) ) )"
  },
  {
    "objectID": "hands-on_Ex/hands-on_Ex03/Hands-on_Ex03.html#interactive-data-visualisation-plotly",
    "href": "hands-on_Ex/hands-on_Ex03/Hands-on_Ex03.html#interactive-data-visualisation-plotly",
    "title": "Hands-on_Ex03",
    "section": "Interactive Data Visualisation (Plotly)",
    "text": "Interactive Data Visualisation (Plotly)\nTwo methods; plot_ly() and ggplotly()\nplot_ly(data = exam_data, x = ~MATHS, y = ~ENGLISH)\n\nInteractive Scatter Plot (ggplotly())\np &lt;- ggplot(data=exam_data, aes(x = MATHS, y = ENGLISH)) + geom_point(size=1) + coord_cartesian(xlim=c(0,100), ylim=c(0,100)) ggplotly(p)"
  },
  {
    "objectID": "hands-on_Ex/hands-on_Ex03/Hands-on_Ex03.html#coordinated-multiple-view-with-plotly",
    "href": "hands-on_Ex/hands-on_Ex03/Hands-on_Ex03.html#coordinated-multiple-view-with-plotly",
    "title": "Hands-on_Ex03",
    "section": "Coordinated Multiple View with plotly",
    "text": "Coordinated Multiple View with plotly\nThe creation of a coordinated linked plot by using plotly involves three steps:\n\nhighlight_key() of plotly package is used as shared data.\ntwo scatterplots will be created by using ggplot2 functions.\nlastly, subplot() of plotly package is used to place them next to each other side-by-side.\n\nd &lt;- highlight_key(exam_data) p1 &lt;- ggplot(data=d, aes(x = MATHS, y = ENGLISH)) + geom_point(size=1) + coord_cartesian(xlim=c(0,100), ylim=c(0,100))\np2 &lt;- ggplot(data=d, aes(x = MATHS, y = SCIENCE)) + geom_point(size=1) + coord_cartesian(xlim=c(0,100), ylim=c(0,100)) subplot(ggplotly(p1), ggplotly(p2))"
  },
  {
    "objectID": "hands-on_Ex/hands-on_Ex03/Hands-on_Ex03.html#interactive-data-table---crosstalk-methods",
    "href": "hands-on_Ex/hands-on_Ex03/Hands-on_Ex03.html#interactive-data-table---crosstalk-methods",
    "title": "Hands-on_Ex03",
    "section": "Interactive Data Table - Crosstalk methods",
    "text": "Interactive Data Table - Crosstalk methods\n\nDT Package\n` DT::datatable(exam_data, class= “compact”)"
  },
  {
    "objectID": "hands-on_Ex/hands-on_Ex03/Hands-on_Ex03.html#linked-brushing-crosstalk",
    "href": "hands-on_Ex/hands-on_Ex03/Hands-on_Ex03.html#linked-brushing-crosstalk",
    "title": "Hands-on_Ex03",
    "section": "Linked Brushing (crosstalk)",
    "text": "Linked Brushing (crosstalk)\nd &lt;- highlight_key(exam_data) p &lt;- ggplot(d, aes(ENGLISH, MATHS)) + geom_point(size=1) + coord_cartesian(xlim=c(0,100), ylim=c(0,100))\ngg &lt;- highlight(ggplotly(p),\n“plotly_selected”)\ncrosstalk::bscols(gg,\nDT::datatable(d), widths = 5)"
  },
  {
    "objectID": "hands-on_Ex/hands-on_Ex03/Hands-on_Ex03.html#loading-packages",
    "href": "hands-on_Ex/hands-on_Ex03/Hands-on_Ex03.html#loading-packages",
    "title": "Hands-on_Ex03",
    "section": "Loading Packages",
    "text": "Loading Packages\npacman::p_load(readxl, gifski, gapminder, plotly, gganimate, tidyverse)"
  },
  {
    "objectID": "hands-on_Ex/hands-on_Ex03/Hands-on_Ex03.html#importing-data",
    "href": "hands-on_Ex/hands-on_Ex03/Hands-on_Ex03.html#importing-data",
    "title": "Hands-on_Ex03",
    "section": "Importing Data",
    "text": "Importing Data\ncol &lt;- c(“Country”, “Continent”) globalPop &lt;- read_xls(“data/GlobalPopulation.xls”, sheet=“Data”) %&gt;% mutate_each_(funs(factor(.)), col) %&gt;% mutate(Year = as.integer(Year))"
  },
  {
    "objectID": "hands-on_Ex/hands-on_Ex03/Hands-on_Ex03.html#animated-data-visualisation-gganimate-methods",
    "href": "hands-on_Ex/hands-on_Ex03/Hands-on_Ex03.html#animated-data-visualisation-gganimate-methods",
    "title": "Hands-on_Ex03",
    "section": "Animated Data Visualisation: gganimate methods",
    "text": "Animated Data Visualisation: gganimate methods\n\ntransition_*() defines how the data should be spread out and how it relates to itself across time.\nview_*() defines how the positional scales should change along the animation.\nshadow_*() defines how data from other points in time should be presented in the given point in time.\nenter_()/exit_() defines how new data should appear and how old data should disappear during the course of the animation.\nease_aes() defines how different aesthetics should be eased during transitions.\n\n\nStatic Population Bubble Plot\nggplot(globalPop, aes(x = Old, y = Young, size = Population, colour = Country)) + geom_point(alpha = 0.7, show.legend = FALSE) + scale_colour_manual(values = country_colors) + scale_size(range = c(2, 12)) + labs(title = ‘Year: {frame_time}’, x = ‘% Aged’, y = ‘% Young’)\n\n\nAnimated Bubble Plot\nggplot(globalPop, aes(x = Old, y = Young, size = Population, colour = Country)) + geom_point(alpha = 0.7, show.legend = FALSE) + scale_colour_manual(values = country_colors) + scale_size(range = c(2, 12)) + labs(title = ‘Year: {frame_time}’, x = ‘% Aged’, y = ‘% Young’) + transition_time(Year) +\nease_aes(‘linear’)"
  },
  {
    "objectID": "hands-on_Ex/hands-on_Ex03/Hands-on_Ex03.html#adv-plotly",
    "href": "hands-on_Ex/hands-on_Ex03/Hands-on_Ex03.html#adv-plotly",
    "title": "Hands-on_Ex03",
    "section": "ADV: plotly",
    "text": "ADV: plotly\nIn Plotly R package, both ggplotly() and plot_ly() support key frame animations through the frame argument/aesthetic. They also support an ids argument/aesthetic to ensure smooth transitions between objects with the same id (which helps facilitate object constancy).\n\nAnimated Bubble Plot: ggplotly() method\ngg &lt;- ggplot(globalPop, aes(x = Old, y = Young, size = Population, colour = Country)) + geom_point(aes(size = Population, frame = Year), alpha = 0.7, show.legend = FALSE) + scale_colour_manual(values = country_colors) + scale_size(range = c(2, 12)) + labs(x = ‘% Aged’, y = ‘% Young’)\nggplotly(gg)\n\n\nAnimated Bubble Plot: plot_ly() method\nbp &lt;- globalPop %&gt;% plot_ly(x = ~Old, y = ~Young, size = ~Population, color = ~Continent, frame = ~Year, text = ~Country, hoverinfo = “text”, type = ‘scatter’, mode = ‘markers’ ) bp"
  },
  {
    "objectID": "hands-on_Ex/hands-on_Ex04/Hands-on_Ex04.html",
    "href": "hands-on_Ex/hands-on_Ex04/Hands-on_Ex04.html",
    "title": "Hands-On Exercise 4",
    "section": "",
    "text": "Show me the good stuff\npacman::p_load(ggstatsplot, tidyverse)"
  },
  {
    "objectID": "hands-on_Ex/hands-on_Ex04/Hands-on_Ex04.html#two-sample-test",
    "href": "hands-on_Ex/hands-on_Ex04/Hands-on_Ex04.html#two-sample-test",
    "title": "Hands-On Exercise 4",
    "section": "4.1 Two-Sample Test",
    "text": "4.1 Two-Sample Test\n\n\nShow me the good stuff\nggbetweenstats(\n  data = exam_data,\n  x = GENDER, \n  y = MATHS,\n  type = \"np\",\n  messages = FALSE) +\n  theme_classic()\n\n\n\n\n\n\n4.2 One-Way ANOVA Test (difference of means)\n\n\nShow me the good stuff\nggbetweenstats(\n  data = exam_data,\n  x = RACE, \n  y = ENGLISH,\n  type = \"p\",\n  mean.ci = TRUE, \n  pairwise.comparisons = TRUE, \n  pairwise.display = \"s\",\n  p.adjust.method = \"fdr\",\n  messages = FALSE) +\n  theme_classic()"
  },
  {
    "objectID": "hands-on_Ex/hands-on_Ex05/Hands-on_Ex05.html",
    "href": "hands-on_Ex/hands-on_Ex05/Hands-on_Ex05.html",
    "title": "Hands-On Exercise 5",
    "section": "",
    "text": "Show me the good stuff\npacman::p_load(igraph, tidygraph, ggraph, \n               visNetwork, lubridate, clock,\n               tidyverse, graphlayouts)\n\n\n\n\n\n\n\nShow me the good stuff\nGAStech_nodes &lt;- read_csv(\"data/GAStech_email_node.csv\")\nGAStech_edges &lt;- read_csv(\"data/GAStech_email_edge-v2.csv\")\n\nglimpse(GAStech_edges)\n\n\nRows: 9,063\nColumns: 8\n$ source      &lt;dbl&gt; 43, 43, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 26, 26, 26…\n$ target      &lt;dbl&gt; 41, 40, 51, 52, 53, 45, 44, 46, 48, 49, 47, 54, 27, 28, 29…\n$ SentDate    &lt;chr&gt; \"6/1/2014\", \"6/1/2014\", \"6/1/2014\", \"6/1/2014\", \"6/1/2014\"…\n$ SentTime    &lt;time&gt; 08:39:00, 08:39:00, 08:58:00, 08:58:00, 08:58:00, 08:58:0…\n$ Subject     &lt;chr&gt; \"GT-SeismicProcessorPro Bug Report\", \"GT-SeismicProcessorP…\n$ MainSubject &lt;chr&gt; \"Work related\", \"Work related\", \"Work related\", \"Work rela…\n$ sourceLabel &lt;chr&gt; \"Sven.Flecha\", \"Sven.Flecha\", \"Kanon.Herrero\", \"Kanon.Herr…\n$ targetLabel &lt;chr&gt; \"Isak.Baza\", \"Lucas.Alcazar\", \"Felix.Resumir\", \"Hideki.Coc…"
  },
  {
    "objectID": "hands-on_Ex/hands-on_Ex05/Hands-on_Ex05.html#loading-the-packages",
    "href": "hands-on_Ex/hands-on_Ex05/Hands-on_Ex05.html#loading-the-packages",
    "title": "Hands-On Exercise 5",
    "section": "",
    "text": "Show me the good stuff\npacman::p_load(igraph, tidygraph, ggraph, \n               visNetwork, lubridate, clock,\n               tidyverse, graphlayouts)"
  },
  {
    "objectID": "hands-on_Ex/hands-on_Ex05/Hands-on_Ex05.html#importing-the-data",
    "href": "hands-on_Ex/hands-on_Ex05/Hands-on_Ex05.html#importing-the-data",
    "title": "Hands-On Exercise 5",
    "section": "",
    "text": "Show me the good stuff\nGAStech_nodes &lt;- read_csv(\"data/GAStech_email_node.csv\")\nGAStech_edges &lt;- read_csv(\"data/GAStech_email_edge-v2.csv\")\n\nglimpse(GAStech_edges)\n\n\nRows: 9,063\nColumns: 8\n$ source      &lt;dbl&gt; 43, 43, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 26, 26, 26…\n$ target      &lt;dbl&gt; 41, 40, 51, 52, 53, 45, 44, 46, 48, 49, 47, 54, 27, 28, 29…\n$ SentDate    &lt;chr&gt; \"6/1/2014\", \"6/1/2014\", \"6/1/2014\", \"6/1/2014\", \"6/1/2014\"…\n$ SentTime    &lt;time&gt; 08:39:00, 08:39:00, 08:58:00, 08:58:00, 08:58:00, 08:58:0…\n$ Subject     &lt;chr&gt; \"GT-SeismicProcessorPro Bug Report\", \"GT-SeismicProcessorP…\n$ MainSubject &lt;chr&gt; \"Work related\", \"Work related\", \"Work related\", \"Work rela…\n$ sourceLabel &lt;chr&gt; \"Sven.Flecha\", \"Sven.Flecha\", \"Kanon.Herrero\", \"Kanon.Herr…\n$ targetLabel &lt;chr&gt; \"Isak.Baza\", \"Lucas.Alcazar\", \"Felix.Resumir\", \"Hideki.Coc…"
  },
  {
    "objectID": "hands-on_Ex/hands-on_Ex05/Hands-on_Ex05.html#changing-date-time-formats",
    "href": "hands-on_Ex/hands-on_Ex05/Hands-on_Ex05.html#changing-date-time-formats",
    "title": "Hands-On Exercise 5",
    "section": "2.1 Changing Date & Time Formats",
    "text": "2.1 Changing Date & Time Formats\n\n\nShow me the good stuff\nGAStech_edges &lt;- GAStech_edges %&gt;%\n  mutate(SendDate = dmy(SentDate)) %&gt;%\n  mutate(Weekday = wday(SentDate,\n                        label = TRUE,\n                        abbr = FALSE))\nglimpse(GAStech_edges)\n\n\nRows: 9,063\nColumns: 10\n$ source      &lt;dbl&gt; 43, 43, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 26, 26, 26…\n$ target      &lt;dbl&gt; 41, 40, 51, 52, 53, 45, 44, 46, 48, 49, 47, 54, 27, 28, 29…\n$ SentDate    &lt;chr&gt; \"6/1/2014\", \"6/1/2014\", \"6/1/2014\", \"6/1/2014\", \"6/1/2014\"…\n$ SentTime    &lt;time&gt; 08:39:00, 08:39:00, 08:58:00, 08:58:00, 08:58:00, 08:58:0…\n$ Subject     &lt;chr&gt; \"GT-SeismicProcessorPro Bug Report\", \"GT-SeismicProcessorP…\n$ MainSubject &lt;chr&gt; \"Work related\", \"Work related\", \"Work related\", \"Work rela…\n$ sourceLabel &lt;chr&gt; \"Sven.Flecha\", \"Sven.Flecha\", \"Kanon.Herrero\", \"Kanon.Herr…\n$ targetLabel &lt;chr&gt; \"Isak.Baza\", \"Lucas.Alcazar\", \"Felix.Resumir\", \"Hideki.Coc…\n$ SendDate    &lt;date&gt; 2014-01-06, 2014-01-06, 2014-01-06, 2014-01-06, 2014-01-0…\n$ Weekday     &lt;ord&gt; Friday, Friday, Friday, Friday, Friday, Friday, Friday, Fr…"
  },
  {
    "objectID": "hands-on_Ex/hands-on_Ex05/Hands-on_Ex05.html#aggregating-attributes",
    "href": "hands-on_Ex/hands-on_Ex05/Hands-on_Ex05.html#aggregating-attributes",
    "title": "Hands-On Exercise 5",
    "section": "2.1 Aggregating Attributes",
    "text": "2.1 Aggregating Attributes\nThe following code aggregates the data by date, senders, receivers, main subject and day of the week, since the dataframe consists of individual email flow records, which are not visualisation-friendly.\n\n\nShow me the good stuff\nGAStech_edges_aggregated &lt;- GAStech_edges %&gt;%\n  filter(MainSubject == \"Work related\") %&gt;%\n  group_by(source, target, Weekday) %&gt;%\n    summarise(Weight = n()) %&gt;%\n  filter(source!=target) %&gt;%\n  filter(Weight &gt; 1) %&gt;%\n  ungroup()\n\nglimpse(GAStech_edges_aggregated)\n\n\nRows: 1,372\nColumns: 4\n$ source  &lt;dbl&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,…\n$ target  &lt;dbl&gt; 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 6,…\n$ Weekday &lt;ord&gt; Sunday, Monday, Tuesday, Wednesday, Friday, Sunday, Monday, Tu…\n$ Weight  &lt;int&gt; 5, 2, 3, 4, 6, 5, 2, 3, 4, 6, 5, 2, 3, 4, 6, 5, 2, 3, 4, 6, 5,…"
  },
  {
    "objectID": "hands-on_Ex/hands-on_Ex05/Hands-on_Ex05.html#using-tbl_graph",
    "href": "hands-on_Ex/hands-on_Ex05/Hands-on_Ex05.html#using-tbl_graph",
    "title": "Hands-On Exercise 5",
    "section": "3.1 Using tbl_graph()",
    "text": "3.1 Using tbl_graph()\n\n\nShow me the good stuff\nGAStech_graph &lt;- tbl_graph(nodes = GAStech_nodes,\n                           edges = GAStech_edges_aggregated, \n                           directed = TRUE)\n\nGAStech_graph\n\n\n# A tbl_graph: 54 nodes and 1372 edges\n#\n# A directed multigraph with 1 component\n#\n# A tibble: 54 × 4\n     id label               Department     Title                                \n  &lt;dbl&gt; &lt;chr&gt;               &lt;chr&gt;          &lt;chr&gt;                                \n1     1 Mat.Bramar          Administration Assistant to CEO                     \n2     2 Anda.Ribera         Administration Assistant to CFO                     \n3     3 Rachel.Pantanal     Administration Assistant to CIO                     \n4     4 Linda.Lagos         Administration Assistant to COO                     \n5     5 Ruscella.Mies.Haber Administration Assistant to Engineering Group Manag…\n6     6 Carla.Forluniau     Administration Assistant to IT Group Manager        \n# ℹ 48 more rows\n#\n# A tibble: 1,372 × 4\n   from    to Weekday Weight\n  &lt;int&gt; &lt;int&gt; &lt;ord&gt;    &lt;int&gt;\n1     1     2 Sunday       5\n2     1     2 Monday       2\n3     1     2 Tuesday      3\n# ℹ 1,369 more rows"
  },
  {
    "objectID": "hands-on_Ex/hands-on_Ex05/Hands-on_Ex05.html#using-activate-to-change-activate-object",
    "href": "hands-on_Ex/hands-on_Ex05/Hands-on_Ex05.html#using-activate-to-change-activate-object",
    "title": "Hands-On Exercise 5",
    "section": "3.2 Using activate() to change activate object",
    "text": "3.2 Using activate() to change activate object\nDataframe is activated by default, but using activate() function, we can change which one is active. We can also use arrange() to reorder rows in edge tibble.\n\n\nShow me the good stuff\nGAStech_graph %&gt;%\n  activate(edges) %&gt;%\n  arrange(desc(Weight))\n\n\n# A tbl_graph: 54 nodes and 1372 edges\n#\n# A directed multigraph with 1 component\n#\n# A tibble: 1,372 × 4\n   from    to Weekday  Weight\n  &lt;int&gt; &lt;int&gt; &lt;ord&gt;     &lt;int&gt;\n1    40    41 Saturday     13\n2    41    43 Monday       11\n3    35    31 Tuesday      10\n4    40    41 Monday       10\n5    40    43 Monday       10\n6    36    32 Sunday        9\n# ℹ 1,366 more rows\n#\n# A tibble: 54 × 4\n     id label           Department     Title           \n  &lt;dbl&gt; &lt;chr&gt;           &lt;chr&gt;          &lt;chr&gt;           \n1     1 Mat.Bramar      Administration Assistant to CEO\n2     2 Anda.Ribera     Administration Assistant to CFO\n3     3 Rachel.Pantanal Administration Assistant to CIO\n# ℹ 51 more rows"
  },
  {
    "objectID": "hands-on_Ex/hands-on_Ex05/Hands-on_Ex05.html#basic-network-graph",
    "href": "hands-on_Ex/hands-on_Ex05/Hands-on_Ex05.html#basic-network-graph",
    "title": "Hands-On Exercise 5",
    "section": "4.1 Basic Network Graph",
    "text": "4.1 Basic Network Graph\n\n\nShow me the good stuff\nggraph(GAStech_graph) +\n  geom_edge_link() +\n  geom_node_point() +\n  theme_graph(background = NA)\n\n\n\n\n\n\n\nShow me the good stuff\nth_foreground(\n  foreground = \"#F8F3E6\", \n  border = FALSE)\n\n\nList of 2\n $ panel.border    : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n $ strip.background:List of 5\n  ..$ fill         : chr \"#F8F3E6\"\n  ..$ colour       : chr \"#F8F3E6\"\n  ..$ linewidth    : NULL\n  ..$ linetype     : NULL\n  ..$ inherit.blank: logi FALSE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n - attr(*, \"class\")= chr [1:2] \"theme\" \"gg\"\n - attr(*, \"complete\")= logi FALSE\n - attr(*, \"validate\")= logi TRUE"
  },
  {
    "objectID": "hands-on_Ex/hands-on_Ex05/Hands-on_Ex05.html#themes-and-colours",
    "href": "hands-on_Ex/hands-on_Ex05/Hands-on_Ex05.html#themes-and-colours",
    "title": "Hands-On Exercise 5",
    "section": "4.2 Themes and Colours",
    "text": "4.2 Themes and Colours\n\n\nShow me the good stuff\ng &lt;- ggraph(\n  GAStech_graph\n  ) + \n  geom_edge_link(\n    aes(colour = 'grey50')\n  ) +\n  geom_node_point(\n    aes(colour = 'grey40'))\n\ng + theme_graph(background = 'grey10',\n                text_colour = 'white')"
  },
  {
    "objectID": "hands-on_Ex/hands-on_Ex05/Hands-on_Ex05.html#graph-layouts",
    "href": "hands-on_Ex/hands-on_Ex05/Hands-on_Ex05.html#graph-layouts",
    "title": "Hands-On Exercise 5",
    "section": "4.3 Graph Layouts",
    "text": "4.3 Graph Layouts\n\nFruchterman & Reingold layout\n\n\nShow me the good stuff\ng &lt;- ggraph(\n  GAStech_graph, \n    layout = \"fr\"\n  ) +\n  geom_edge_link(\n    aes()\n  ) +\n  geom_node_point(\n    aes())\n\ng + theme_graph()\n\n\n\n\n\n\n\nAdding Colours\n\n\nShow me the good stuff\ng &lt;- ggraph(\n    GAStech_graph, \n    layout = \"nicely\"\n  ) + \n  geom_edge_link(\n    aes()\n  ) +\n  geom_node_point(\n    aes(colour = Department, \n    size = 3))\n\ng + theme_graph()\n\n\n\n\n\n\n\nEdges Modification\n\n\nShow me the good stuff\ng &lt;- ggraph(GAStech_graph, \n            layout = \"nicely\") +\n  geom_edge_link(aes(width=Weight), \n                 alpha=0.2) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(colour = Department), \n                  size = 3)\n\ng + theme_graph()"
  },
  {
    "objectID": "hands-on_Ex/hands-on_Ex05/Hands-on_Ex05.html#facet-graphs",
    "href": "hands-on_Ex/hands-on_Ex05/Hands-on_Ex05.html#facet-graphs",
    "title": "Hands-On Exercise 5",
    "section": "5 Facet Graphs",
    "text": "5 Facet Graphs\n\n5.1 Edges\n\n\nShow me the good stuff\nset_graph_style()\n\ng &lt;- ggraph(GAStech_graph, \n            layout = \"nicely\") + \n  geom_edge_link(aes(width=Weight), \n                 alpha=0.2) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(colour = Department), \n                  size = 2)\n\ng + facet_edges(~Weekday)\n\n\n\n\n\n\n\n5.2 Framed Facet Graphs\n\n\nShow me the good stuff\nset_graph_style() \n\ng &lt;- ggraph(GAStech_graph, \n            layout = \"nicely\") + \n  geom_edge_link(aes(width=Weight), \n                 alpha=0.2) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(colour = Department), \n                  size = 2)\n  \ng + facet_edges(~Weekday) +\n  th_foreground(foreground = \"grey80\",  \n                border = TRUE) +\n  theme(legend.position = 'bottom')"
  },
  {
    "objectID": "hands-on_Ex/hands-on_Ex05/Hands-on_Ex05.html#facet-nodes",
    "href": "hands-on_Ex/hands-on_Ex05/Hands-on_Ex05.html#facet-nodes",
    "title": "Hands-On Exercise 5",
    "section": "6 Facet Nodes",
    "text": "6 Facet Nodes\n\n\nShow me the good stuff\nset_graph_style()\n\ng &lt;- ggraph(GAStech_graph, \n            layout = \"nicely\") + \n  geom_edge_link(aes(width=Weight), \n                 alpha=0.2) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(colour = Department), \n                  size = 2)\n  \ng + facet_nodes(~Department)+\n  th_foreground(foreground = \"grey80\",  \n                border = TRUE) +\n  theme(legend.position = 'bottom')"
  },
  {
    "objectID": "hands-on_Ex/hands-on_Ex05/Hands-on_Ex05.html#analysing-network-metrics",
    "href": "hands-on_Ex/hands-on_Ex05/Hands-on_Ex05.html#analysing-network-metrics",
    "title": "Hands-On Exercise 5",
    "section": "7 Analysing Network Metrics",
    "text": "7 Analysing Network Metrics\n\n7.1 Centrality Measures\n\nCentrality allows us to quantify the relationships within the network. It reports the connectivity of the node within a network, the complexity of a network, the clusters or sub-groups within a network.\nExamples of Centrality Measures are as follows:\nDegree: refers to the number of direct connections a node has. It is often interpreted in terms of the immediate risk of node for catching whatever is flowing through the network (such as a virus, or some information).\nThis is different from betweenness index, which smeasures the relative “weight” of importance of the node.\nBetweenness: a centrality measure of a vertex within a graph. It is a way of detecting the amount of influence a node has over the flow of information in a graph. It is often used to find nodes that serve as a bridge from one part of a graph to another.Vertices that occur on many shortest paths between other vertices have higher betweenness than those that do not.\nIn- and Out-degree: If the network is directed (meaning that ties have direction), then we usually define two separate measures of degree centrality, namely indegree and outdegree. Indegree is a count of the number of ties directed to the node, and outdegree is the number of ties that the node directs to others.\nFor positive relations such as friendship or advice, we normally interpret indegree as a form of popularity, and outdegree as gregariousness.\n\n\n\nShow me the good stuff\ngg &lt;- GAStech_graph %&gt;%\n  # Use tidyverse functions for tidygraph\n  mutate(betweenness_centrality = centrality_betweenness()) %&gt;%\n  ggraph(layout = \"fr\") + \n  geom_edge_link(aes(width=Weight), \n                 alpha=0.2) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(colour = Department,\n          # varying size of nodes by centrality measure            \n            size=betweenness_centrality))\ngg"
  },
  {
    "objectID": "hands-on_Ex/hands-on_Ex05/Hands-on_Ex05.html#visnetwork-interactive-graphs",
    "href": "hands-on_Ex/hands-on_Ex05/Hands-on_Ex05.html#visnetwork-interactive-graphs",
    "title": "Hands-On Exercise 5",
    "section": "8 Visnetwork Interactive Graphs",
    "text": "8 Visnetwork Interactive Graphs\n\nThe nodes list must include an “id” column, and the edge list must have “from” and “to” columns. The function also plots the labels for the nodes, using the names of the actors from the “label” column in the node list."
  },
  {
    "objectID": "hands-on_Ex/hands-on_Ex05/Hands-on_Ex05.html#preparation-1",
    "href": "hands-on_Ex/hands-on_Ex05/Hands-on_Ex05.html#preparation-1",
    "title": "Hands-On Exercise 5",
    "section": "8.1 Preparation",
    "text": "8.1 Preparation\n\n\nShow me the good stuff\nGAStech_edges_aggregated &lt;- GAStech_edges %&gt;%\n  left_join(GAStech_nodes, by = c(\"sourceLabel\" = \"label\")) %&gt;%\n  rename(from = id) %&gt;%\n  left_join(GAStech_nodes, by = c(\"targetLabel\" = \"label\")) %&gt;%\n  rename(to = id) %&gt;%\n  filter(MainSubject == \"Work related\") %&gt;%\n  group_by(from, to) %&gt;%\n    summarise(weight = n()) %&gt;%\n  filter(from!=to) %&gt;%\n  filter(weight &gt; 1) %&gt;%\n  ungroup()"
  },
  {
    "objectID": "hands-on_Ex/hands-on_Ex05/Hands-on_Ex05.html#graph-plotting",
    "href": "hands-on_Ex/hands-on_Ex05/Hands-on_Ex05.html#graph-plotting",
    "title": "Hands-On Exercise 5",
    "section": "8.2 Graph Plotting",
    "text": "8.2 Graph Plotting\n\n\nShow me the good stuff\nvisNetwork(GAStech_nodes,\n           GAStech_edges_aggregated) %&gt;%\n  visIgraphLayout(layout = \"layout_with_fr\")"
  },
  {
    "objectID": "hands-on_Ex/hands-on_Ex05/Hands-on_Ex05.html#colouring-groups",
    "href": "hands-on_Ex/hands-on_Ex05/Hands-on_Ex05.html#colouring-groups",
    "title": "Hands-On Exercise 5",
    "section": "8.3 Colouring Groups",
    "text": "8.3 Colouring Groups\n\n\nShow me the good stuff\nGAStech_nodes &lt;- GAStech_nodes %&gt;%\n  rename(group = Department) \n\nvisNetwork(GAStech_nodes,\n           GAStech_edges_aggregated) %&gt;%\n  visIgraphLayout(layout = \"layout_with_fr\") %&gt;%\n  visLegend() %&gt;%\n  visLayout(randomSeed = 123)"
  },
  {
    "objectID": "hands-on_Ex/hands-on_Ex05/Hands-on_Ex05.html#using-visedges-to-specify-curved-edges",
    "href": "hands-on_Ex/hands-on_Ex05/Hands-on_Ex05.html#using-visedges-to-specify-curved-edges",
    "title": "Hands-On Exercise 5",
    "section": "8.4 Using visEdges() to specify curved edges",
    "text": "8.4 Using visEdges() to specify curved edges\n\n\nShow me the good stuff\nvisNetwork(GAStech_nodes,\n           GAStech_edges_aggregated) %&gt;%\n  visIgraphLayout(layout = \"layout_with_fr\") %&gt;%\n  visEdges(arrows = \"to\", \n           smooth = list(enabled = TRUE, \n                         type = \"curvedCW\")) %&gt;%\n  visLegend() %&gt;%\n  visLayout(randomSeed = 123)"
  },
  {
    "objectID": "hands-on_Ex/hands-on_Ex05/Hands-on_Ex05.html#adding-interactive-menu-using-visoptions",
    "href": "hands-on_Ex/hands-on_Ex05/Hands-on_Ex05.html#adding-interactive-menu-using-visoptions",
    "title": "Hands-On Exercise 5",
    "section": "8.5 Adding interactive menu using visOptions()",
    "text": "8.5 Adding interactive menu using visOptions()\n\n\nShow me the good stuff\nvisNetwork(GAStech_nodes,\n           GAStech_edges_aggregated) %&gt;%\n  visIgraphLayout(layout = \"layout_with_fr\") %&gt;%\n  visOptions(highlightNearest = TRUE,\n             nodesIdSelection = TRUE) %&gt;%\n  visLegend() %&gt;%\n  visLayout(randomSeed = 123)"
  },
  {
    "objectID": "hands-on_Ex/hands-on_Ex06/Hands-on_Ex06.html",
    "href": "hands-on_Ex/hands-on_Ex06/Hands-on_Ex06.html",
    "title": "Hands-On Exercise 6",
    "section": "",
    "text": "All required packages for Hands on Exercise 6 are loaded together here.\n\n\nShow me the good stuff\npacman::p_load('plotly','tidyverse', 'corrplot', 'ggstatsplot', 'ggcorrplot', 'dplyr')\n\n\n\n\nShow me the good stuff\nrequire(devtools)\ninstall_version(\"ggtern\", version = \"3.4.1\", repos = \"http://cran.us.r-project.org\")\n\n\nvctrs (0.6.2  -&gt; 0.6.3 ) [CRAN]\nRcpp  (1.0.10 -&gt; 1.0.11) [CRAN]\n\n\nShow me the good stuff\nlibrary(ggtern)"
  },
  {
    "objectID": "hands-on_Ex/hands-on_Ex06/Hands-on_Ex06.html#importing-the-data",
    "href": "hands-on_Ex/hands-on_Ex06/Hands-on_Ex06.html#importing-the-data",
    "title": "Hands-On Exercise 6",
    "section": "2.1 Importing the Data",
    "text": "2.1 Importing the Data\n\n\nShow me the good stuff\npop_data &lt;- read_csv(\"data/respopagsex2000to2018_tidy.csv\")"
  },
  {
    "objectID": "hands-on_Ex/hands-on_Ex06/Hands-on_Ex06.html#preparing-the-data",
    "href": "hands-on_Ex/hands-on_Ex06/Hands-on_Ex06.html#preparing-the-data",
    "title": "Hands-On Exercise 6",
    "section": "2.2 Preparing the Data",
    "text": "2.2 Preparing the Data\n\n\nShow me the good stuff\n#Deriving young, economy active and old measures\n\nagpop_mutated &lt;- pop_data %&gt;%\n  mutate('Year' = as.character(Year))%&gt;%\n  spread(AG, Population) %&gt;%\n  mutate(YOUNG = rowSums(.[4:8])) %&gt;%\n  mutate(ACTIVE = rowSums(.[9:16])) %&gt;%\n  mutate(OLD = rowSums(.[17:21])) %&gt;%\n  mutate(TOTAL = rowSums(.[22:24])) %&gt;%\n  filter(Year == 2018) %&gt;%\n  filter(TOTAL &gt; 0)"
  },
  {
    "objectID": "hands-on_Ex/hands-on_Ex06/Hands-on_Ex06.html#using-plot_ly",
    "href": "hands-on_Ex/hands-on_Ex06/Hands-on_Ex06.html#using-plot_ly",
    "title": "Hands-On Exercise 6",
    "section": "Using plot_ly",
    "text": "Using plot_ly\n\n\nShow me the good stuff\n# reusable function for creating annotation object\nlabel &lt;- function(txt) {\n  list(\n    text = txt, \n    x = 0.1, y = 1,\n    ax = 0, ay = 0,\n    xref = \"paper\", yref = \"paper\", \n    align = \"center\",\n    font = list(family = \"serif\", size = 15, color = \"white\"),\n    bgcolor = \"#b3b3b3\", bordercolor = \"black\", borderwidth = 2\n  )\n}\n\n# reusable function for axis formatting\naxis &lt;- function(txt) {\n  list(\n    title = txt, tickformat = \".0%\", tickfont = list(size = 10)\n  )\n}\n\nternaryAxes &lt;- list(\n  aaxis = axis(\"Young\"), \n  baxis = axis(\"Active\"), \n  caxis = axis(\"Old\")\n)\n\n\nInitiating a plotly visualization\n\n\nShow me the good stuff\nplot_ly(agpop_mutated, a = ~YOUNG, b = ~ACTIVE, c = ~OLD, color = I(\"black\"), type = \"scatterternary\") %&gt;% layout(annotations = label(\"Ternary Markers\"), ternary = ternaryAxes )"
  },
  {
    "objectID": "hands-on_Ex/hands-on_Ex06/Hands-on_Ex06.html#importing-the-data-1",
    "href": "hands-on_Ex/hands-on_Ex06/Hands-on_Ex06.html#importing-the-data-1",
    "title": "Hands-On Exercise 6",
    "section": "Importing the Data",
    "text": "Importing the Data\n\n\nShow me the good stuff\nwine &lt;- read_csv(\"data/wine_quality.csv\")"
  },
  {
    "objectID": "hands-on_Ex/hands-on_Ex06/Hands-on_Ex06.html#using-pairs-function-of-r-graphics",
    "href": "hands-on_Ex/hands-on_Ex06/Hands-on_Ex06.html#using-pairs-function-of-r-graphics",
    "title": "Hands-On Exercise 6",
    "section": "Using pairs function of R Graphics",
    "text": "Using pairs function of R Graphics"
  },
  {
    "objectID": "hands-on_Ex/hands-on_Ex06/Hands-on_Ex06.html#basic-correlation-matrix",
    "href": "hands-on_Ex/hands-on_Ex06/Hands-on_Ex06.html#basic-correlation-matrix",
    "title": "Hands-On Exercise 6",
    "section": "Basic Correlation Matrix",
    "text": "Basic Correlation Matrix\n\nPairsLower CornerUpper CornerWith Correlation Coeff\n\n\n\n\nShow me the good stuff\npairs(wine[,1:11])\n\n\n\n\n\n\n\n\n\nShow me the good stuff\npairs(wine[,2:12], upper.panel = NULL)\n\n\n\n\n\n\n\n\n\nShow me the good stuff\npairs(wine[,2:12], lower.panel = NULL)\n\n\n\n\n\n\n\n\n\nShow me the good stuff\npanel.cor &lt;- function(x, y, digits=2, prefix=\"\", cex.cor, ...) {\nusr &lt;- par(\"usr\")\non.exit(par(usr))\npar(usr = c(0, 1, 0, 1))\nr &lt;- abs(cor(x, y, use=\"complete.obs\"))\ntxt &lt;- format(c(r, 0.123456789), digits=digits)[1]\ntxt &lt;- paste(prefix, txt, sep=\"\")\nif(missing(cex.cor)) cex.cor &lt;- 0.8/strwidth(txt)\ntext(0.5, 0.5, txt, cex = cex.cor * (1 + r) / 2)\n}\n\npairs(wine[,2:12], \n      upper.panel = panel.cor)"
  },
  {
    "objectID": "hands-on_Ex/hands-on_Ex06/Hands-on_Ex06.html#single-plot",
    "href": "hands-on_Ex/hands-on_Ex06/Hands-on_Ex06.html#single-plot",
    "title": "Hands-On Exercise 6",
    "section": "3.1 Single Plot",
    "text": "3.1 Single Plot"
  },
  {
    "objectID": "hands-on_Ex/hands-on_Ex06/Hands-on_Ex06.html#error-coding-the-file",
    "href": "hands-on_Ex/hands-on_Ex06/Hands-on_Ex06.html#error-coding-the-file",
    "title": "Hands-On Exercise 6",
    "section": "Error Coding the file",
    "text": "Error Coding the file\npanel-tabset ### Basic Plot\nggstatsplot::ggcorrmat(data = wine, cor.vars = 1:11)\n\nWith Title, Subtitles\nggstatsplot::ggcorrmat( data = wine, cor.vars = 1:11, ggcorrplot.args = list(outline.color = “black”, hc.order = TRUE, tl.cex = 10), title = “Correlogram for wine dataset”, subtitle = “Four pairs are not significant at p &lt; 0.05” )\n\nThings to learn from the code chunk above:\ncor.vars argument is used to compute the correlation matrix needed to build the corrgram. ggcorrplot.args argument provide additional (mostly aesthetic) arguments that will be passed to ggcorrplot::ggcorrplot function. The list should avoid any of the following arguments since they are already internally being used: corr, method, p.mat, sig.level, ggtheme, colors, lab, pch, legend.title, digits.\n\n\nThe sample sub-code chunk can be used to control specific component of the plot such as the font size of the x-axis, y-axis, and the statistical report.\n\n\n\nShow me the good stuff\nggplot.component = list( theme(text=element_text(size=5), axis.text.x = element_text(size = 8), axis.text.y = element_text(size = 8)))"
  },
  {
    "objectID": "hands-on_Ex/hands-on_Ex06/Hands-on_Ex06.html#using-corrplot-package",
    "href": "hands-on_Ex/hands-on_Ex06/Hands-on_Ex06.html#using-corrplot-package",
    "title": "Hands-On Exercise 6",
    "section": "using corrplot Package",
    "text": "using corrplot Package"
  },
  {
    "objectID": "hands-on_Ex/hands-on_Ex06/Hands-on_Ex06.html#plotting-a-corrgram",
    "href": "hands-on_Ex/hands-on_Ex06/Hands-on_Ex06.html#plotting-a-corrgram",
    "title": "Hands-On Exercise 6",
    "section": "4.1 Plotting a corrgram",
    "text": "4.1 Plotting a corrgram\n\nBasicVisual GeometricsLayoutLayout 2Mixed Layout\n\n\n\n\nShow me the good stuff\nwine.cor &lt;- cor(wine[, 1:11])\n\ncorrplot(wine.cor)\n\n\n\n\n\n\n\n\n\nShow me the good stuff\ncorrplot(wine.cor, \n         method = \"ellipse\") \n\n\n\n\n\n\n\n\n\nShow me the good stuff\ncorrplot(wine.cor, \n         method = \"ellipse\", \n         type=\"lower\")\n\n\n\n\n\n\n\n\n\nShow me the good stuff\ncorrplot(wine.cor, \n         method = \"ellipse\", \n         type=\"lower\",\n         diag = FALSE,\n         tl.col = \"black\")\n\n\n\n\n\n\n\n\n\nShow me the good stuff\ncorrplot.mixed(wine.cor, \n               lower = \"ellipse\", \n               upper = \"number\",\n               tl.pos = \"lt\",\n               diag = \"l\",\n               tl.col = \"black\")"
  },
  {
    "objectID": "hands-on_Ex/hands-on_Ex06/Hands-on_Ex06.html#combining-corrgram-with-the-significant-test",
    "href": "hands-on_Ex/hands-on_Ex06/Hands-on_Ex06.html#combining-corrgram-with-the-significant-test",
    "title": "Hands-On Exercise 6",
    "section": "Combining corrgram with the significant test",
    "text": "Combining corrgram with the significant test\n\n\nShow me the good stuff\nwine.sig = cor.mtest(wine.cor, conf.level= .95)\n\ncorrplot(wine.cor,\n         method = \"number\",\n         type = \"lower\",\n         diag = FALSE,\n         tl.col = \"black\",\n         tl.srt = 45,\n         p.mat = wine.sig$p,\n         sig.level = .05)"
  },
  {
    "objectID": "hands-on_Ex/hands-on_Ex06/Hands-on_Ex06.html#reorder-a-corrgram",
    "href": "hands-on_Ex/hands-on_Ex06/Hands-on_Ex06.html#reorder-a-corrgram",
    "title": "Hands-On Exercise 6",
    "section": "Reorder a corrgram",
    "text": "Reorder a corrgram\n\nCorrplothclust\n\n\n\n\nShow me the good stuff\ncorrplot.mixed(wine.cor, \n               lower = \"ellipse\", \n               upper = \"number\",\n               tl.pos = \"lt\",\n               diag = \"l\",\n               order=\"AOE\",\n               tl.col = \"black\")\n\n\n\n\n\n\n\n\n\nShow me the good stuff\ncorrplot(wine.cor, \n         method = \"ellipse\", \n         tl.pos = \"lt\",\n         tl.col = \"black\",\n         order=\"hclust\",\n         hclust.method = \"ward.D\",\n         addrect = 3)"
  },
  {
    "objectID": "hands-on_Ex/hands-on_Ex07/Hands-on_Ex07.html",
    "href": "hands-on_Ex/hands-on_Ex07/Hands-on_Ex07.html",
    "title": "Hands-On Exercise 7",
    "section": "",
    "text": "Show me the good stuff\npacman::p_load(scales, viridis, lubridate, ggthemes, gridExtra, readxl, knitr, data.table, CGPfunctions, ggHoriPlot, tidyverse)\n\n\n\n\n\n\n\nShow me the good stuff\nattacks &lt;- read_csv(\"data/eventlog.csv\")\n\nair &lt;- read_excel(\"data/arrivals_by_air.xlsx\")\n\nrice &lt;- read_csv(\"data/rice.csv\")\n\naverp &lt;- read_csv(\"data/AVERP.csv\") %&gt;%\n  mutate(Date = dmy(Date)) %&gt;%\n  rename(Consumer_items = 'Consumer Items')"
  },
  {
    "objectID": "hands-on_Ex/hands-on_Ex07/Hands-on_Ex07.html#loading-the-packages",
    "href": "hands-on_Ex/hands-on_Ex07/Hands-on_Ex07.html#loading-the-packages",
    "title": "Hands-On Exercise 7",
    "section": "",
    "text": "Show me the good stuff\npacman::p_load(scales, viridis, lubridate, ggthemes, gridExtra, readxl, knitr, data.table, CGPfunctions, ggHoriPlot, tidyverse)"
  },
  {
    "objectID": "hands-on_Ex/hands-on_Ex07/Hands-on_Ex07.html#importing-the-data",
    "href": "hands-on_Ex/hands-on_Ex07/Hands-on_Ex07.html#importing-the-data",
    "title": "Hands-On Exercise 7",
    "section": "",
    "text": "Show me the good stuff\nattacks &lt;- read_csv(\"data/eventlog.csv\")\n\nair &lt;- read_excel(\"data/arrivals_by_air.xlsx\")\n\nrice &lt;- read_csv(\"data/rice.csv\")\n\naverp &lt;- read_csv(\"data/AVERP.csv\") %&gt;%\n  mutate(Date = dmy(Date)) %&gt;%\n  rename(Consumer_items = 'Consumer Items')"
  },
  {
    "objectID": "hands-on_Ex/hands-on_Ex07/Hands-on_Ex07.html#error-coding",
    "href": "hands-on_Ex/hands-on_Ex07/Hands-on_Ex07.html#error-coding",
    "title": "Hands-On Exercise 7",
    "section": "Error Coding",
    "text": "Error Coding"
  },
  {
    "objectID": "hands-on_Ex/hands-on_Ex07/Hands-on_Ex07.html#examine-data",
    "href": "hands-on_Ex/hands-on_Ex07/Hands-on_Ex07.html#examine-data",
    "title": "Hands-On Exercise 7",
    "section": "2.1 Examine Data",
    "text": "2.1 Examine Data\nkable(head(attacks))"
  },
  {
    "objectID": "hands-on_Ex/hands-on_Ex07/Hands-on_Ex07.html#data-preparation",
    "href": "hands-on_Ex/hands-on_Ex07/Hands-on_Ex07.html#data-preparation",
    "title": "Hands-On Exercise 7",
    "section": "2.2 Data Preparation",
    "text": "2.2 Data Preparation\nmake_hr_wkday &lt;- function(ts, sc, tz) { real_times &lt;- ymd_hms(ts, tz = tz[1], quiet = TRUE) dt &lt;- data.table(source_country = sc, wkday = weekdays(real_times), hour = hour(real_times)) return(dt) }"
  },
  {
    "objectID": "hands-on_Ex/hands-on_Ex07/Hands-on_Ex07.html#building-the-heatmap",
    "href": "hands-on_Ex/hands-on_Ex07/Hands-on_Ex07.html#building-the-heatmap",
    "title": "Hands-On Exercise 7",
    "section": "2.3 Building the Heatmap",
    "text": "2.3 Building the Heatmap\ngrouped &lt;- attacks %&gt;% count(wkday, hour) %&gt;% ungroup() %&gt;% na.omit()\nggplot(grouped, aes(hour, wkday, fill = n)) + geom_tile(color = “white”, size = 0.1) + theme_tufte(base_family = “Helvetica”) + coord_equal() + scale_fill_gradient(name = “# of attacks”, low = “sky blue”, high = “dark blue”) + labs(x = NULL, y = NULL, title = “Attacks by weekday and time of day”) + theme(axis.ticks = element_blank(), plot.title = element_text(hjust = 0.5), legend.title = element_text(size = 8), legend.text = element_text(size = 6) )"
  },
  {
    "objectID": "hands-on_Ex/hands-on_Ex07/Hands-on_Ex07.html#id-top-4-countries-w-highest-number-of-attacks",
    "href": "hands-on_Ex/hands-on_Ex07/Hands-on_Ex07.html#id-top-4-countries-w-highest-number-of-attacks",
    "title": "Hands-On Exercise 7",
    "section": "3.1 ID top 4 countries w highest number of attacks",
    "text": "3.1 ID top 4 countries w highest number of attacks\nattacks_by_country &lt;- count( attacks, source_country) %&gt;% mutate(percent = percent(n/sum(n))) %&gt;% arrange(desc(n))"
  },
  {
    "objectID": "hands-on_Ex/hands-on_Ex07/Hands-on_Ex07.html#data-prep",
    "href": "hands-on_Ex/hands-on_Ex07/Hands-on_Ex07.html#data-prep",
    "title": "Hands-On Exercise 7",
    "section": "3.2 Data Prep",
    "text": "3.2 Data Prep\ntop4 &lt;- attacks_by_country$source_country[1:4] top4_attacks &lt;- attacks %&gt;% filter(source_country %in% top4) %&gt;% count(source_country, wkday, hour) %&gt;% ungroup() %&gt;% mutate(source_country = factor( source_country, levels = top4)) %&gt;% na.omit()\n\n3.3 Plotting\nggplot(top4_attacks, aes(hour, wkday, fill = n)) + geom_tile(color = “white”, size = 0.1) + theme_tufte(base_family = “Helvetica”) + coord_equal() + scale_fill_gradient(name = “# of attacks”, low = “sky blue”, high = “dark blue”) + facet_wrap(~source_country, ncol = 2) + labs(x = NULL, y = NULL, title = “Attacks on top 4 countries by weekday and time of day”) + theme(axis.ticks = element_blank(), axis.text.x = element_text(size = 7), plot.title = element_text(hjust = 0.5), legend.title = element_text(size = 8), legend.text = element_text(size = 6) )"
  },
  {
    "objectID": "hands-on_Ex/hands-on_Ex07/Hands-on_Ex07.html#error-coding-1",
    "href": "hands-on_Ex/hands-on_Ex07/Hands-on_Ex07.html#error-coding-1",
    "title": "Hands-On Exercise 7",
    "section": "Error Coding",
    "text": "Error Coding"
  },
  {
    "objectID": "hands-on_Ex/hands-on_Ex07/Hands-on_Ex07.html#extract-target-country",
    "href": "hands-on_Ex/hands-on_Ex07/Hands-on_Ex07.html#extract-target-country",
    "title": "Hands-On Exercise 7",
    "section": "4.1 Extract Target Country",
    "text": "4.1 Extract Target Country\nVietnam &lt;- air %&gt;% select(Vietnam, month, year) %&gt;% filter(year &gt;= 2010)"
  },
  {
    "objectID": "hands-on_Ex/hands-on_Ex07/Hands-on_Ex07.html#computing-year-avg-arrivals-by-month",
    "href": "hands-on_Ex/hands-on_Ex07/Hands-on_Ex07.html#computing-year-avg-arrivals-by-month",
    "title": "Hands-On Exercise 7",
    "section": "4.2 Computing Year AVG arrivals by month",
    "text": "4.2 Computing Year AVG arrivals by month\nhline.data &lt;- Vietnam %&gt;% group_by(month) %&gt;% summarise(avgvalue = mean(Vietnam))"
  },
  {
    "objectID": "hands-on_Ex/hands-on_Ex07/Hands-on_Ex07.html#plotting-cycle-plot",
    "href": "hands-on_Ex/hands-on_Ex07/Hands-on_Ex07.html#plotting-cycle-plot",
    "title": "Hands-On Exercise 7",
    "section": "4.3 Plotting Cycle Plot",
    "text": "4.3 Plotting Cycle Plot\nggplot() + geom_line(data=Vietnam, aes(x=year, y=Vietnam, group=month), colour=“black”) + geom_hline(aes(yintercept=avgvalue), data=hline.data, linetype=6, colour=“red”, size=0.5) + facet_grid(~month) + labs(axis.text.x = element_blank(), title = “Visitor arrivals from Vietnam by air, Jan 2010-Dec 2019”) + xlab(““) + ylab(”No. of Visitors”)"
  },
  {
    "objectID": "hands-on_Ex/hands-on_Ex07/Hands-on_Ex07.html#error-coding-2",
    "href": "hands-on_Ex/hands-on_Ex07/Hands-on_Ex07.html#error-coding-2",
    "title": "Hands-On Exercise 7",
    "section": "Error Coding",
    "text": "Error Coding\nrice %&gt;% mutate(Year = factor(Year)) %&gt;% filter(Year %in% c(1961, 1980)) %&gt;% newggslopegraph(Year, Yield, Country, Title = “Rice Yield of Top 11 Asian Counties”, SubTitle = “1961-1980”, Caption = “Prepared by: Dr. Kam Tin Seong”)\n\nFor effective data visualisation design, factor() is used convert the value type of Year field from numeric to factor."
  },
  {
    "objectID": "hands-on_Ex/hands-on_Ex08/data/geospatial/MPSZ-2019.html",
    "href": "hands-on_Ex/hands-on_Ex08/data/geospatial/MPSZ-2019.html",
    "title": "ISSS608-VAA",
    "section": "",
    "text": "&lt;!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’&gt;     dataset\n\n\n        0 0     false"
  },
  {
    "objectID": "hands-on_Ex/hands-on_Ex08/Hands-on_Ex08.html",
    "href": "hands-on_Ex/hands-on_Ex08/Hands-on_Ex08.html",
    "title": "Hands-On Exercise 8",
    "section": "",
    "text": "Show me the good stuff\npacman::p_load(sf, tmap, tidyverse, skimr)\n\n\n\n\n\n\nAspatial DataESRI Shapefile\n\n\n\n\nShow me the good stuff\npopdata &lt;- read_csv(\"data/aspatial/respopagesextod2011to2020.csv\")\n\n\n\n\nShow me the good stuff\nskim(popdata)\n\n\n\nData summary\n\n\nName\npopdata\n\n\nNumber of rows\n984656\n\n\nNumber of columns\n7\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n5\n\n\nnumeric\n2\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nPA\n0\n1\n4\n23\n0\n55\n0\n\n\nSZ\n0\n1\n4\n29\n0\n335\n0\n\n\nAG\n0\n1\n6\n11\n0\n19\n0\n\n\nSex\n0\n1\n5\n7\n0\n2\n0\n\n\nTOD\n0\n1\n6\n39\n0\n8\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nPop\n0\n1\n39.86\n132.25\n0\n0\n0\n10\n2860\n▇▁▁▁▁\n\n\nTime\n0\n1\n2015.51\n2.88\n2011\n2013\n2016\n2018\n2020\n▇▇▇▇▇\n\n\n\n\n\n\n\n\n\nShow me the good stuff\nmpsz &lt;- st_read(dsn = \"data/geospatial\", \n                layer = \"MP14_SUBZONE_WEB_PL\")\n\n\nReading layer `MP14_SUBZONE_WEB_PL' from data source \n  `C:\\LeonardLeeJZ\\ISSS608-VAA\\hands-on_Ex\\hands-on_Ex08\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\n\n\n\n\nShow me the good stuff\nskim(mpsz)\n\n\n\nData summary\n\n\nName\nmpsz\n\n\nNumber of rows\n323\n\n\nNumber of columns\n16\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n9\n\n\nDate\n1\n\n\nnumeric\n6\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nSUBZONE_N\n0\n1\n4\n29\n0\n323\n0\n\n\nSUBZONE_C\n0\n1\n6\n6\n0\n323\n0\n\n\nCA_IND\n0\n1\n1\n1\n0\n2\n0\n\n\nPLN_AREA_N\n0\n1\n4\n23\n0\n55\n0\n\n\nPLN_AREA_C\n0\n1\n2\n2\n0\n55\n0\n\n\nREGION_N\n0\n1\n11\n17\n0\n5\n0\n\n\nREGION_C\n0\n1\n2\n3\n0\n5\n0\n\n\nINC_CRC\n0\n1\n16\n16\n0\n323\n0\n\n\ngeometry\n0\n1\n642\n75093\n0\n323\n0\n\n\n\nVariable type: Date\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nmedian\nn_unique\n\n\n\n\nFMEL_UPD_D\n0\n1\n2014-12-05\n2014-12-05\n2014-12-05\n1\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nOBJECTID\n0\n1\n162.00\n93.39\n1.00\n81.50\n162.00\n242.50\n323.00\n▇▇▇▇▇\n\n\nSUBZONE_NO\n0\n1\n4.63\n3.23\n1.00\n2.00\n4.00\n6.50\n17.00\n▇▃▂▁▁\n\n\nX_ADDR\n0\n1\n27257.42\n7960.90\n5092.89\n21863.96\n28465.40\n31673.72\n50424.79\n▁▃▇▃▁\n\n\nY_ADDR\n0\n1\n36106.43\n5664.60\n19579.07\n31776.14\n35112.62\n39868.91\n49552.79\n▁▅▇▅▂\n\n\nSHAPE_Leng\n0\n1\n6524.39\n6995.82\n871.55\n3709.64\n5211.87\n6942.61\n68083.94\n▇▁▁▁▁\n\n\nSHAPE_Area\n0\n1\n2420881.68\n6566826.26\n39437.94\n628260.89\n1229894.42\n2106482.99\n69748298.79\n▇▁▁▁▁"
  },
  {
    "objectID": "hands-on_Ex/hands-on_Ex08/Hands-on_Ex08.html#loading-the-packages",
    "href": "hands-on_Ex/hands-on_Ex08/Hands-on_Ex08.html#loading-the-packages",
    "title": "Hands-On Exercise 8",
    "section": "",
    "text": "Show me the good stuff\npacman::p_load(sf, tmap, tidyverse, skimr)"
  },
  {
    "objectID": "hands-on_Ex/hands-on_Ex08/Hands-on_Ex08.html#importing-the-data",
    "href": "hands-on_Ex/hands-on_Ex08/Hands-on_Ex08.html#importing-the-data",
    "title": "Hands-On Exercise 8",
    "section": "",
    "text": "Aspatial DataESRI Shapefile\n\n\n\n\nShow me the good stuff\npopdata &lt;- read_csv(\"data/aspatial/respopagesextod2011to2020.csv\")\n\n\n\n\nShow me the good stuff\nskim(popdata)\n\n\n\nData summary\n\n\nName\npopdata\n\n\nNumber of rows\n984656\n\n\nNumber of columns\n7\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n5\n\n\nnumeric\n2\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nPA\n0\n1\n4\n23\n0\n55\n0\n\n\nSZ\n0\n1\n4\n29\n0\n335\n0\n\n\nAG\n0\n1\n6\n11\n0\n19\n0\n\n\nSex\n0\n1\n5\n7\n0\n2\n0\n\n\nTOD\n0\n1\n6\n39\n0\n8\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nPop\n0\n1\n39.86\n132.25\n0\n0\n0\n10\n2860\n▇▁▁▁▁\n\n\nTime\n0\n1\n2015.51\n2.88\n2011\n2013\n2016\n2018\n2020\n▇▇▇▇▇\n\n\n\n\n\n\n\n\n\nShow me the good stuff\nmpsz &lt;- st_read(dsn = \"data/geospatial\", \n                layer = \"MP14_SUBZONE_WEB_PL\")\n\n\nReading layer `MP14_SUBZONE_WEB_PL' from data source \n  `C:\\LeonardLeeJZ\\ISSS608-VAA\\hands-on_Ex\\hands-on_Ex08\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\n\n\n\n\nShow me the good stuff\nskim(mpsz)\n\n\n\nData summary\n\n\nName\nmpsz\n\n\nNumber of rows\n323\n\n\nNumber of columns\n16\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n9\n\n\nDate\n1\n\n\nnumeric\n6\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nSUBZONE_N\n0\n1\n4\n29\n0\n323\n0\n\n\nSUBZONE_C\n0\n1\n6\n6\n0\n323\n0\n\n\nCA_IND\n0\n1\n1\n1\n0\n2\n0\n\n\nPLN_AREA_N\n0\n1\n4\n23\n0\n55\n0\n\n\nPLN_AREA_C\n0\n1\n2\n2\n0\n55\n0\n\n\nREGION_N\n0\n1\n11\n17\n0\n5\n0\n\n\nREGION_C\n0\n1\n2\n3\n0\n5\n0\n\n\nINC_CRC\n0\n1\n16\n16\n0\n323\n0\n\n\ngeometry\n0\n1\n642\n75093\n0\n323\n0\n\n\n\nVariable type: Date\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nmedian\nn_unique\n\n\n\n\nFMEL_UPD_D\n0\n1\n2014-12-05\n2014-12-05\n2014-12-05\n1\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nOBJECTID\n0\n1\n162.00\n93.39\n1.00\n81.50\n162.00\n242.50\n323.00\n▇▇▇▇▇\n\n\nSUBZONE_NO\n0\n1\n4.63\n3.23\n1.00\n2.00\n4.00\n6.50\n17.00\n▇▃▂▁▁\n\n\nX_ADDR\n0\n1\n27257.42\n7960.90\n5092.89\n21863.96\n28465.40\n31673.72\n50424.79\n▁▃▇▃▁\n\n\nY_ADDR\n0\n1\n36106.43\n5664.60\n19579.07\n31776.14\n35112.62\n39868.91\n49552.79\n▁▅▇▅▂\n\n\nSHAPE_Leng\n0\n1\n6524.39\n6995.82\n871.55\n3709.64\n5211.87\n6942.61\n68083.94\n▇▁▁▁▁\n\n\nSHAPE_Area\n0\n1\n2420881.68\n6566826.26\n39437.94\n628260.89\n1229894.42\n2106482.99\n69748298.79\n▇▁▁▁▁"
  },
  {
    "objectID": "hands-on_Ex/hands-on_Ex08/Hands-on_Ex08.html#preparing-dataframe",
    "href": "hands-on_Ex/hands-on_Ex08/Hands-on_Ex08.html#preparing-dataframe",
    "title": "Hands-On Exercise 8",
    "section": "2.1 Preparing Dataframe",
    "text": "2.1 Preparing Dataframe\n\n\nShow me the good stuff\npopdata2020 &lt;- popdata %&gt;%\n  filter(Time == 2020) %&gt;%\n  group_by(PA, SZ, AG) %&gt;%\n  summarise(`POP` = sum(`Pop`)) %&gt;%\n  ungroup()%&gt;%\n  pivot_wider(names_from=AG, \n              values_from=POP) %&gt;%\n  mutate(YOUNG = rowSums(.[3:6])\n         +rowSums(.[12])) %&gt;%\nmutate(`ECONOMICALLY ACTIVE` = rowSums(.[7:11])+\nrowSums(.[13:15]))%&gt;%\nmutate(`AGED`=rowSums(.[16:21])) %&gt;%\nmutate(`TOTAL`=rowSums(.[3:21])) %&gt;%  \nmutate(`DEPENDENCY` = (`YOUNG` + `AGED`)\n/`ECONOMICALLY ACTIVE`) %&gt;%\n  select(`PA`, `SZ`, `YOUNG`, \n       `ECONOMICALLY ACTIVE`, `AGED`, \n       `TOTAL`, `DEPENDENCY`)"
  },
  {
    "objectID": "hands-on_Ex/hands-on_Ex08/Hands-on_Ex08.html#uppercase-standardisation",
    "href": "hands-on_Ex/hands-on_Ex08/Hands-on_Ex08.html#uppercase-standardisation",
    "title": "Hands-On Exercise 8",
    "section": "2.2 Uppercase Standardisation",
    "text": "2.2 Uppercase Standardisation\n\n\nShow me the good stuff\npopdata2020 &lt;- popdata2020 %&gt;%\n  mutate(PA = toupper(PA), \n         SZ = toupper(SZ)) %&gt;%\n  filter(`ECONOMICALLY ACTIVE` &gt; 0)"
  },
  {
    "objectID": "hands-on_Ex/hands-on_Ex08/Hands-on_Ex08.html#identifier-left-join",
    "href": "hands-on_Ex/hands-on_Ex08/Hands-on_Ex08.html#identifier-left-join",
    "title": "Hands-On Exercise 8",
    "section": "2.3 Identifier Left-join",
    "text": "2.3 Identifier Left-join\n\n\nShow me the good stuff\nmpsz_pop2020 &lt;- left_join(\n  mpsz, \n  popdata2020,\n  by = c(\"SUBZONE_N\" = \"SZ\"))"
  },
  {
    "objectID": "hands-on_Ex/hands-on_Ex08/Hands-on_Ex08.html#write-to-rds-file",
    "href": "hands-on_Ex/hands-on_Ex08/Hands-on_Ex08.html#write-to-rds-file",
    "title": "Hands-On Exercise 8",
    "section": "2.4 Write to rds file",
    "text": "2.4 Write to rds file\n\n\nShow me the good stuff\nwrite_rds(mpsz_pop2020, \"data/rds/mpszpop2020.rds\")"
  },
  {
    "objectID": "hands-on_Ex/hands-on_Ex08/Hands-on_Ex08.html#exploring-tmap-elements",
    "href": "hands-on_Ex/hands-on_Ex08/Hands-on_Ex08.html#exploring-tmap-elements",
    "title": "Hands-On Exercise 8",
    "section": "3.2 Exploring tmap elements",
    "text": "3.2 Exploring tmap elements\n\n\nShow me the good stuff\ntm_shape(mpsz_pop2020)+\n  tm_fill(\n    \"DEPENDENCY\", \n    style = \"quantile\", \n    palette = \"Purples\",\n    title = \"Dependency ratio\"\n  ) +\n  tm_layout(\n    main.title = \"Distribution of Dependency Ratio by planning subzone\",\n    main.title.position = \"center\",\n    main.title.size = 1.2,\n    legend.height = 0.45, \n    legend.width = 0.3,\n    frame = FALSE,\n    bg.color = \"#F8F3E6\"\n  ) +\n  tm_borders(alpha = 0.3) +\n  tm_compass(\n    type=\"8star\", \n    size = 1\n  ) +\n  tm_scale_bar() +\n  tm_grid(alpha =0.2) +\n  tm_credits(\n    \"Source: Planning Sub-zone boundary from URA\\n and Population data from Department of Statistics DOS\", \n   position = c(\"left\", \"bottom\")\n  )"
  },
  {
    "objectID": "hands-on_Ex/hands-on_Ex08/Hands-on_Ex08.html#custom-breaks",
    "href": "hands-on_Ex/hands-on_Ex08/Hands-on_Ex08.html#custom-breaks",
    "title": "Hands-On Exercise 8",
    "section": "3.2.1 Custom Breaks",
    "text": "3.2.1 Custom Breaks\n\n\nShow me the good stuff\ntm_shape(mpsz_pop2020)+\n  tm_fill(\n    \"DEPENDENCY\",\n    breaks = c(0, 0.60, 0.70, 0.80, 0.90, 1.00)\n  ) +\n  tm_borders(alpha = 0.5)"
  },
  {
    "objectID": "hands-on_Ex/hands-on_Ex08/Hands-on_Ex08.html#assiging-rcolorbrewer-palettes",
    "href": "hands-on_Ex/hands-on_Ex08/Hands-on_Ex08.html#assiging-rcolorbrewer-palettes",
    "title": "Hands-On Exercise 8",
    "section": "3.2.2 Assiging RcolorBrewer palettes",
    "text": "3.2.2 Assiging RcolorBrewer palettes\n\n\nShow me the good stuff\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n = 6,\n          style = \"quantile\",\n          # Use '-' to reverse color\n          palette = \"-Purples\"\n  ) +\n  tm_borders(alpha = 0.5)"
  },
  {
    "objectID": "hands-on_Ex/hands-on_Ex08/Hands-on_Ex08.html#map-legends",
    "href": "hands-on_Ex/hands-on_Ex08/Hands-on_Ex08.html#map-legends",
    "title": "Hands-On Exercise 8",
    "section": "3.2.3 Map Legends",
    "text": "3.2.3 Map Legends\n\n\nShow me the good stuff\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\", \n          style = \"jenks\", \n          palette = \"Purples\", \n          legend.hist = TRUE, \n          legend.is.portrait = TRUE,\n          legend.hist.z = 0.1) +\n  tm_layout(main.title = \"Distribution of Dependency Ratio by planning subzone \\n(Jenks classification)\",\n            main.title.position = \"center\",\n            main.title.size = 1,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            legend.outside = FALSE,\n            legend.position = c(\"right\", \"bottom\"),\n            frame = FALSE,\n             bg.color = \"white\") +\n  tm_borders(alpha = 0.5)"
  },
  {
    "objectID": "hands-on_Ex/hands-on_Ex08/Hands-on_Ex08.html#map-styles",
    "href": "hands-on_Ex/hands-on_Ex08/Hands-on_Ex08.html#map-styles",
    "title": "Hands-On Exercise 8",
    "section": "3.2.4 Map Styles",
    "text": "3.2.4 Map Styles\n\n\nShow me the good stuff\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\", \n          style = \"quantile\", \n          palette = \"-Greens\") +\n  tm_borders(alpha = 0.5) +\n  tmap_style(\"classic\")"
  },
  {
    "objectID": "hands-on_Ex/hands-on_Ex08/Hands-on_Ex08.html#cartographic-elements",
    "href": "hands-on_Ex/hands-on_Ex08/Hands-on_Ex08.html#cartographic-elements",
    "title": "Hands-On Exercise 8",
    "section": "3.2.5 Cartographic Elements",
    "text": "3.2.5 Cartographic Elements\n\n\nShow me the good stuff\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\", \n          style = \"quantile\", \n          palette = \"Blues\",\n          title = \"No. of persons\") +\n  tm_layout(main.title = \"Distribution of Dependency Ratio \\nby planning subzone\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            frame = FALSE,\n            bg.color = \"#F8F3E6\" ) +\n  tm_borders(alpha = 0.5) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar(width = 0.15) +\n  tm_grid(lwd = 0.1, alpha = 0.2) +\n  tm_credits(\"Source: Planning Sub-zone boundary from Urban Redevelopment Authorithy (URA)\\n and Population data from Department of Statistics DOS\", \n             position = c(\"left\", \"bottom\"))"
  },
  {
    "objectID": "hands-on_Ex/hands-on_Ex08/Hands-on_Ex08.html#assigning-multiple-values",
    "href": "hands-on_Ex/hands-on_Ex08/Hands-on_Ex08.html#assigning-multiple-values",
    "title": "Hands-On Exercise 8",
    "section": "4.1 Assigning Multiple Values",
    "text": "4.1 Assigning Multiple Values\n\n\nShow me the good stuff\ntm_shape(mpsz_pop2020)+\n  tm_fill(c(\"YOUNG\", \"AGED\"),\n          style = c(\"equal\", \"quantile\"), \n          palette = list(\"Blues\", \"Purples\") \n  ) +\n  tm_layout(legend.position = c(\"right\", \"bottom\"),\n            bg.color = \"white\",\n            frame = FALSE) +\n  tm_borders(alpha = 0.5) +\n  tmap_style(\"white\")"
  },
  {
    "objectID": "hands-on_Ex/hands-on_Ex08/Hands-on_Ex08.html#facet_map-argument",
    "href": "hands-on_Ex/hands-on_Ex08/Hands-on_Ex08.html#facet_map-argument",
    "title": "Hands-On Exercise 8",
    "section": "4.2 facet_map() Argument",
    "text": "4.2 facet_map() Argument\n\n\nShow me the good stuff\ntm_shape(mpsz_pop2020) +\n  tm_fill(\"DEPENDENCY\",\n          style = \"quantile\",\n          palette = \"Purples\",\n          thres.poly = 0) + \n  tm_facets(by=\"REGION_N\", \n            free.coords=TRUE, \n            drop.shapes=TRUE) +\n  tm_layout(legend.show = FALSE,\n            title.position = c(\"center\", \"center\"), \n            title.size = 20,\n            bg.color = \"white\") +\n  tm_borders(alpha = 0.5)"
  },
  {
    "objectID": "hands-on_Ex/hands-on_Ex08/Hands-on_Ex08.html#multiple-maps-using-tm_arrange",
    "href": "hands-on_Ex/hands-on_Ex08/Hands-on_Ex08.html#multiple-maps-using-tm_arrange",
    "title": "Hands-On Exercise 8",
    "section": "4.3 Multiple Maps using tm_arrange()",
    "text": "4.3 Multiple Maps using tm_arrange()\n\n\nShow me the good stuff\nyoungmap &lt;- tm_shape(mpsz_pop2020)+ \n  tm_polygons(\"YOUNG\", \n              style = \"quantile\", \n              palette = \"Blues\")\n\nagedmap &lt;- tm_shape(mpsz_pop2020)+ \n  tm_polygons(\"AGED\", \n              style = \"quantile\", \n              palette = \"Purples\")\n\ntmap_arrange(youngmap, agedmap, asp=1, ncol=2)"
  },
  {
    "objectID": "in-class_Ex/In-class_Ex01/In-class_Ex01.html",
    "href": "in-class_Ex/In-class_Ex01/In-class_Ex01.html",
    "title": "In-class Exercise 1",
    "section": "",
    "text": "Note\n\n\n\n\n\nRefer to Tableau Public Space for In-class_Ex01 here:\nIn-Class_Ex01"
  },
  {
    "objectID": "in-class_Ex/In-class_Ex01/In-class_Ex01.html#tableau-introduction",
    "href": "in-class_Ex/In-class_Ex01/In-class_Ex01.html#tableau-introduction",
    "title": "In-class Exercise 1",
    "section": "",
    "text": "Note\n\n\n\n\n\nRefer to Tableau Public Space for In-class_Ex01 here:\nIn-Class_Ex01"
  },
  {
    "objectID": "in-class_Ex/In-class_Ex03/In-class_Ex03.html",
    "href": "in-class_Ex/In-class_Ex03/In-class_Ex03.html",
    "title": "In-class Exercise 3",
    "section": "",
    "text": "Note\n\n\n\n\n\nRefer to Tableau Public Space for In-class_Ex03 here:\nIn-Class_Ex03\n\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\n\n\nRefer to Tableau Public Space for In-class_Ex03b here:\nIn-Class_Ex03b"
  },
  {
    "objectID": "in-class_Ex/In-class_Ex03/In-class_Ex03.html#interactivity-in-visual-analytics-principles-and-methods",
    "href": "in-class_Ex/In-class_Ex03/In-class_Ex03.html#interactivity-in-visual-analytics-principles-and-methods",
    "title": "In-class Exercise 3",
    "section": "",
    "text": "Note\n\n\n\n\n\nRefer to Tableau Public Space for In-class_Ex03 here:\nIn-Class_Ex03\n\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\n\n\nRefer to Tableau Public Space for In-class_Ex03b here:\nIn-Class_Ex03b"
  },
  {
    "objectID": "in-class_Ex/In-class_Ex04/In-class_Ex04.html",
    "href": "in-class_Ex/In-class_Ex04/In-class_Ex04.html",
    "title": "In-Class Exercise 4",
    "section": "",
    "text": "Load Packages\n\npacman::p_load(rstatix, gt, patchwork, webshot2, tidyverse)\n\n#Importing the data\n\nexam_data4 &lt;- read_csv(\"data/Exam_data.csv\")\n\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\nggplot(exam_data4,\n       aes(sample=ENGLISH)) +\n  stat_qq() +\n  stat_qq_line()\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nWe can see that the points deviate significantly from the straight diagonal line. This is a clear indication that the set of data is not normally distributed.\n\n\n##Combining Statistical Results and\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\nqq &lt;- ggplot(exam_data4,\n       aes(sample=ENGLISH)) +\n  stat_qq() +\n  stat_qq_line()\n\nsw_t &lt;- exam_data4 %&gt;%\n  shapiro_test(ENGLISH) %&gt;%\n  gt()\n\ntmp &lt;- tempfile(fileext = '.png')\ngtsave(sw_t, tmp)\ntable_png &lt;- png::readPNG(tmp, native = TRUE)\n\nqq + table_png"
  },
  {
    "objectID": "in-class_Ex/In-class_Ex05/In-class_Ex05.html",
    "href": "in-class_Ex/In-class_Ex05/In-class_Ex05.html",
    "title": "In-Class Exercise 05",
    "section": "",
    "text": "Show me the good stuff\npacman::p_load(igraph, tidygraph, ggraph, \n               visNetwork, lubridate, clock,\n               tidyverse, graphlayouts, jsonlite)\n\n\n\n\n\n\n\nShow me the good stuff\nMC1 &lt;- fromJSON(\"data/MC1.json\")\nGAStech_nodes &lt;- read_csv(\"data/GAStech_email_node.csv\")\nGAStech_edges &lt;- read_csv(\"data/GAStech_email_edge-v2.csv\")\n\n\n\n\nShow me the good stuff\nMC1_nodes &lt;- as_tibble(MC1$nodes) %&gt;%\n  select(id, type, country) #using select function to reorganise into desired order of columns\n\n\n\n\nShow me the good stuff\nMC1_edges &lt;- as_tibble(MC1$links) %&gt;%\n  select(source, target, type, weight, key)\n\n\n\n\n\n\n\nShow me the good stuff\nglimpse(GAStech_edges)\n\n\nRows: 9,063\nColumns: 8\n$ source      &lt;dbl&gt; 43, 43, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 26, 26, 26…\n$ target      &lt;dbl&gt; 41, 40, 51, 52, 53, 45, 44, 46, 48, 49, 47, 54, 27, 28, 29…\n$ SentDate    &lt;chr&gt; \"6/1/2014\", \"6/1/2014\", \"6/1/2014\", \"6/1/2014\", \"6/1/2014\"…\n$ SentTime    &lt;time&gt; 08:39:00, 08:39:00, 08:58:00, 08:58:00, 08:58:00, 08:58:0…\n$ Subject     &lt;chr&gt; \"GT-SeismicProcessorPro Bug Report\", \"GT-SeismicProcessorP…\n$ MainSubject &lt;chr&gt; \"Work related\", \"Work related\", \"Work related\", \"Work rela…\n$ sourceLabel &lt;chr&gt; \"Sven.Flecha\", \"Sven.Flecha\", \"Kanon.Herrero\", \"Kanon.Herr…\n$ targetLabel &lt;chr&gt; \"Isak.Baza\", \"Lucas.Alcazar\", \"Felix.Resumir\", \"Hideki.Coc…\n\n\n\n\n\n\n\nShow me the good stuff\nGAStech_edges &lt;- GAStech_edges %&gt;%\n  mutate(SendDate = dmy(SentDate)) %&gt;%\n  mutate(Weekday = wday(SentDate,\n                        label = TRUE,\n                        abbr = FALSE))\n\n\nglimpse(GAStech_edges) #Review data\n\n\nRows: 9,063\nColumns: 10\n$ source      &lt;dbl&gt; 43, 43, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 26, 26, 26…\n$ target      &lt;dbl&gt; 41, 40, 51, 52, 53, 45, 44, 46, 48, 49, 47, 54, 27, 28, 29…\n$ SentDate    &lt;chr&gt; \"6/1/2014\", \"6/1/2014\", \"6/1/2014\", \"6/1/2014\", \"6/1/2014\"…\n$ SentTime    &lt;time&gt; 08:39:00, 08:39:00, 08:58:00, 08:58:00, 08:58:00, 08:58:0…\n$ Subject     &lt;chr&gt; \"GT-SeismicProcessorPro Bug Report\", \"GT-SeismicProcessorP…\n$ MainSubject &lt;chr&gt; \"Work related\", \"Work related\", \"Work related\", \"Work rela…\n$ sourceLabel &lt;chr&gt; \"Sven.Flecha\", \"Sven.Flecha\", \"Kanon.Herrero\", \"Kanon.Herr…\n$ targetLabel &lt;chr&gt; \"Isak.Baza\", \"Lucas.Alcazar\", \"Felix.Resumir\", \"Hideki.Coc…\n$ SendDate    &lt;date&gt; 2014-01-06, 2014-01-06, 2014-01-06, 2014-01-06, 2014-01-0…\n$ Weekday     &lt;ord&gt; Friday, Friday, Friday, Friday, Friday, Friday, Friday, Fr…\n\n\n\n\n\n\n\nShow me the good stuff\nGAStech_edges_aggregated &lt;- GAStech_edges %&gt;%\n  filter(MainSubject == \"Work related\") %&gt;%\n  group_by(source, target, Weekday) %&gt;%\n    summarise(Weight = n()) %&gt;%\n  filter(source!=target) %&gt;%\n  filter(Weight &gt; 1) %&gt;%\n  ungroup()\n\nglimpse(GAStech_edges_aggregated)\n\n\nRows: 1,372\nColumns: 4\n$ source  &lt;dbl&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,…\n$ target  &lt;dbl&gt; 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 6,…\n$ Weekday &lt;ord&gt; Sunday, Monday, Tuesday, Wednesday, Friday, Sunday, Monday, Tu…\n$ Weight  &lt;int&gt; 5, 2, 3, 4, 6, 5, 2, 3, 4, 6, 5, 2, 3, 4, 6, 5, 2, 3, 4, 6, 5,…"
  },
  {
    "objectID": "in-class_Ex/In-class_Ex05/In-class_Ex05.html#load-the-packages",
    "href": "in-class_Ex/In-class_Ex05/In-class_Ex05.html#load-the-packages",
    "title": "In-Class Exercise 05",
    "section": "",
    "text": "Show me the good stuff\npacman::p_load(igraph, tidygraph, ggraph, \n               visNetwork, lubridate, clock,\n               tidyverse, graphlayouts, jsonlite)"
  },
  {
    "objectID": "in-class_Ex/In-class_Ex05/In-class_Ex05.html#import-the-data",
    "href": "in-class_Ex/In-class_Ex05/In-class_Ex05.html#import-the-data",
    "title": "In-Class Exercise 05",
    "section": "",
    "text": "Show me the good stuff\nMC1 &lt;- fromJSON(\"data/MC1.json\")\nGAStech_nodes &lt;- read_csv(\"data/GAStech_email_node.csv\")\nGAStech_edges &lt;- read_csv(\"data/GAStech_email_edge-v2.csv\")\n\n\n\n\nShow me the good stuff\nMC1_nodes &lt;- as_tibble(MC1$nodes) %&gt;%\n  select(id, type, country) #using select function to reorganise into desired order of columns\n\n\n\n\nShow me the good stuff\nMC1_edges &lt;- as_tibble(MC1$links) %&gt;%\n  select(source, target, type, weight, key)"
  },
  {
    "objectID": "in-class_Ex/In-class_Ex05/In-class_Ex05.html#review-the-imported-data",
    "href": "in-class_Ex/In-class_Ex05/In-class_Ex05.html#review-the-imported-data",
    "title": "In-Class Exercise 05",
    "section": "",
    "text": "Show me the good stuff\nglimpse(GAStech_edges)\n\n\nRows: 9,063\nColumns: 8\n$ source      &lt;dbl&gt; 43, 43, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 26, 26, 26…\n$ target      &lt;dbl&gt; 41, 40, 51, 52, 53, 45, 44, 46, 48, 49, 47, 54, 27, 28, 29…\n$ SentDate    &lt;chr&gt; \"6/1/2014\", \"6/1/2014\", \"6/1/2014\", \"6/1/2014\", \"6/1/2014\"…\n$ SentTime    &lt;time&gt; 08:39:00, 08:39:00, 08:58:00, 08:58:00, 08:58:00, 08:58:0…\n$ Subject     &lt;chr&gt; \"GT-SeismicProcessorPro Bug Report\", \"GT-SeismicProcessorP…\n$ MainSubject &lt;chr&gt; \"Work related\", \"Work related\", \"Work related\", \"Work rela…\n$ sourceLabel &lt;chr&gt; \"Sven.Flecha\", \"Sven.Flecha\", \"Kanon.Herrero\", \"Kanon.Herr…\n$ targetLabel &lt;chr&gt; \"Isak.Baza\", \"Lucas.Alcazar\", \"Felix.Resumir\", \"Hideki.Coc…"
  },
  {
    "objectID": "in-class_Ex/In-class_Ex05/In-class_Ex05.html#wrangling-time",
    "href": "in-class_Ex/In-class_Ex05/In-class_Ex05.html#wrangling-time",
    "title": "In-Class Exercise 05",
    "section": "",
    "text": "Show me the good stuff\nGAStech_edges &lt;- GAStech_edges %&gt;%\n  mutate(SendDate = dmy(SentDate)) %&gt;%\n  mutate(Weekday = wday(SentDate,\n                        label = TRUE,\n                        abbr = FALSE))\n\n\nglimpse(GAStech_edges) #Review data\n\n\nRows: 9,063\nColumns: 10\n$ source      &lt;dbl&gt; 43, 43, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 26, 26, 26…\n$ target      &lt;dbl&gt; 41, 40, 51, 52, 53, 45, 44, 46, 48, 49, 47, 54, 27, 28, 29…\n$ SentDate    &lt;chr&gt; \"6/1/2014\", \"6/1/2014\", \"6/1/2014\", \"6/1/2014\", \"6/1/2014\"…\n$ SentTime    &lt;time&gt; 08:39:00, 08:39:00, 08:58:00, 08:58:00, 08:58:00, 08:58:0…\n$ Subject     &lt;chr&gt; \"GT-SeismicProcessorPro Bug Report\", \"GT-SeismicProcessorP…\n$ MainSubject &lt;chr&gt; \"Work related\", \"Work related\", \"Work related\", \"Work rela…\n$ sourceLabel &lt;chr&gt; \"Sven.Flecha\", \"Sven.Flecha\", \"Kanon.Herrero\", \"Kanon.Herr…\n$ targetLabel &lt;chr&gt; \"Isak.Baza\", \"Lucas.Alcazar\", \"Felix.Resumir\", \"Hideki.Coc…\n$ SendDate    &lt;date&gt; 2014-01-06, 2014-01-06, 2014-01-06, 2014-01-06, 2014-01-0…\n$ Weekday     &lt;ord&gt; Friday, Friday, Friday, Friday, Friday, Friday, Friday, Fr…"
  },
  {
    "objectID": "in-class_Ex/In-class_Ex05/In-class_Ex05.html#wrangling-attributes",
    "href": "in-class_Ex/In-class_Ex05/In-class_Ex05.html#wrangling-attributes",
    "title": "In-Class Exercise 05",
    "section": "",
    "text": "Show me the good stuff\nGAStech_edges_aggregated &lt;- GAStech_edges %&gt;%\n  filter(MainSubject == \"Work related\") %&gt;%\n  group_by(source, target, Weekday) %&gt;%\n    summarise(Weight = n()) %&gt;%\n  filter(source!=target) %&gt;%\n  filter(Weight &gt; 1) %&gt;%\n  ungroup()\n\nglimpse(GAStech_edges_aggregated)\n\n\nRows: 1,372\nColumns: 4\n$ source  &lt;dbl&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,…\n$ target  &lt;dbl&gt; 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 6,…\n$ Weekday &lt;ord&gt; Sunday, Monday, Tuesday, Wednesday, Friday, Sunday, Monday, Tu…\n$ Weight  &lt;int&gt; 5, 2, 3, 4, 6, 5, 2, 3, 4, 6, 5, 2, 3, 4, 6, 5, 2, 3, 4, 6, 5,…"
  },
  {
    "objectID": "in-class_Ex/In-class_Ex05/In-class_Ex05.html#build-tidygraph-data-model-using-tbl_graph",
    "href": "in-class_Ex/In-class_Ex05/In-class_Ex05.html#build-tidygraph-data-model-using-tbl_graph",
    "title": "In-Class Exercise 05",
    "section": "Build tidygraph data model using tbl_graph()",
    "text": "Build tidygraph data model using tbl_graph()\n\n\nShow me the good stuff\nGAStech_graph &lt;- tbl_graph(nodes = GAStech_nodes,\n                           edges = GAStech_edges_aggregated, \n                           directed = TRUE)\nGAStech_graph #Review Graph\n\n\n# A tbl_graph: 54 nodes and 1372 edges\n#\n# A directed multigraph with 1 component\n#\n# A tibble: 54 × 4\n     id label               Department     Title                                \n  &lt;dbl&gt; &lt;chr&gt;               &lt;chr&gt;          &lt;chr&gt;                                \n1     1 Mat.Bramar          Administration Assistant to CEO                     \n2     2 Anda.Ribera         Administration Assistant to CFO                     \n3     3 Rachel.Pantanal     Administration Assistant to CIO                     \n4     4 Linda.Lagos         Administration Assistant to COO                     \n5     5 Ruscella.Mies.Haber Administration Assistant to Engineering Group Manag…\n6     6 Carla.Forluniau     Administration Assistant to IT Group Manager        \n# ℹ 48 more rows\n#\n# A tibble: 1,372 × 4\n   from    to Weekday Weight\n  &lt;int&gt; &lt;int&gt; &lt;ord&gt;    &lt;int&gt;\n1     1     2 Sunday       5\n2     1     2 Monday       2\n3     1     2 Tuesday      3\n# ℹ 1,369 more rows"
  },
  {
    "objectID": "in-class_Ex/In-class_Ex05/In-class_Ex05.html#change-the-active-object",
    "href": "in-class_Ex/In-class_Ex05/In-class_Ex05.html#change-the-active-object",
    "title": "In-Class Exercise 05",
    "section": "Change the Active Object",
    "text": "Change the Active Object\n\n\nShow me the good stuff\nGAStech_graph %&gt;%\n  activate(edges) %&gt;%\n  arrange(desc(Weight))\n\n\n# A tbl_graph: 54 nodes and 1372 edges\n#\n# A directed multigraph with 1 component\n#\n# A tibble: 1,372 × 4\n   from    to Weekday  Weight\n  &lt;int&gt; &lt;int&gt; &lt;ord&gt;     &lt;int&gt;\n1    40    41 Saturday     13\n2    41    43 Monday       11\n3    35    31 Tuesday      10\n4    40    41 Monday       10\n5    40    43 Monday       10\n6    36    32 Sunday        9\n# ℹ 1,366 more rows\n#\n# A tibble: 54 × 4\n     id label           Department     Title           \n  &lt;dbl&gt; &lt;chr&gt;           &lt;chr&gt;          &lt;chr&gt;           \n1     1 Mat.Bramar      Administration Assistant to CEO\n2     2 Anda.Ribera     Administration Assistant to CFO\n3     3 Rachel.Pantanal Administration Assistant to CIO\n# ℹ 51 more rows"
  },
  {
    "objectID": "in-class_Ex/In-class_Ex05/In-class_Ex05.html#plotting-a-basic-network-graph",
    "href": "in-class_Ex/In-class_Ex05/In-class_Ex05.html#plotting-a-basic-network-graph",
    "title": "In-Class Exercise 05",
    "section": "Plotting a basic network graph",
    "text": "Plotting a basic network graph\n\n\nShow me the good stuff\nggraph(GAStech_graph) +\n  geom_edge_link() +\n  geom_node_point()\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\n\n\nThe basic plotting function is ggraph(), which takes the data to be used for the graph and the type of layout desired. Both of the arguments for ggraph() are built around igraph. Therefore, ggraph() can use either an igraph object or a tbl_graph object."
  },
  {
    "objectID": "in-class_Ex/In-class_Ex05/In-class_Ex05.html#changing-the-default-network-graph-theme",
    "href": "in-class_Ex/In-class_Ex05/In-class_Ex05.html#changing-the-default-network-graph-theme",
    "title": "In-Class Exercise 05",
    "section": "Changing the default network graph theme",
    "text": "Changing the default network graph theme\n\n\nShow me the good stuff\ng &lt;- ggraph(GAStech_graph) + \n  geom_edge_link(aes()) +\n  geom_node_point(aes())\n\ng + theme_graph()"
  },
  {
    "objectID": "in-class_Ex/In-class_Ex05/In-class_Ex05.html#changing-the-coloring-of-the-plot",
    "href": "in-class_Ex/In-class_Ex05/In-class_Ex05.html#changing-the-coloring-of-the-plot",
    "title": "In-Class Exercise 05",
    "section": "Changing the coloring of the plot",
    "text": "Changing the coloring of the plot\n\n\nShow me the good stuff\ng &lt;- ggraph(GAStech_graph) + \n  geom_edge_link(aes(colour = 'grey50')) +\n  geom_node_point(aes(colour = 'grey40'))\n\ng + theme_graph(background = 'grey10',\n                text_colour = 'white')"
  },
  {
    "objectID": "in-class_Ex/In-class_Ex05/In-class_Ex05.html#many-models",
    "href": "in-class_Ex/In-class_Ex05/In-class_Ex05.html#many-models",
    "title": "In-Class Exercise 05",
    "section": "Many models",
    "text": "Many models"
  },
  {
    "objectID": "in-class_Ex/In-class_Ex05/In-class_Ex05.html#fruchterman-and-reingold-layout",
    "href": "in-class_Ex/In-class_Ex05/In-class_Ex05.html#fruchterman-and-reingold-layout",
    "title": "In-Class Exercise 05",
    "section": "Fruchterman and Reingold layout",
    "text": "Fruchterman and Reingold layout\n\n\nShow me the good stuff\ng &lt;- ggraph(GAStech_graph, \n            layout = \"fr\") +\n  geom_edge_link(aes()) +\n  geom_node_point(aes())\n\ng + theme_graph()"
  },
  {
    "objectID": "in-class_Ex/In-class_Ex05/In-class_Ex05.html#modifying-network-nodes",
    "href": "in-class_Ex/In-class_Ex05/In-class_Ex05.html#modifying-network-nodes",
    "title": "In-Class Exercise 05",
    "section": "Modifying Network Nodes",
    "text": "Modifying Network Nodes\n\n\nShow me the good stuff\ng &lt;- ggraph(GAStech_graph, \n            layout = \"nicely\") + \n  geom_edge_link(aes()) +\n  geom_node_point(aes(colour = Department, \n                      size = 3))\n\ng + theme_graph()\n\n\n\n\n\n\ngeom_node_point is equivalent in functionality to geo_point of ggplot2. It allows for simple plotting of nodes in different shapes, colours and sizes. In the codes chnuks above colour and size are used."
  },
  {
    "objectID": "in-class_Ex/In-class_Ex05/In-class_Ex05.html#modifying-edges",
    "href": "in-class_Ex/In-class_Ex05/In-class_Ex05.html#modifying-edges",
    "title": "In-Class Exercise 05",
    "section": "Modifying Edges",
    "text": "Modifying Edges\n\n\nShow me the good stuff\ng &lt;- ggraph(GAStech_graph, \n            layout = \"nicely\") +\n  geom_edge_link(aes(width=Weight), \n                 alpha=0.2) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(colour = Department), \n                  size = 3)\n\ng + theme_graph()"
  },
  {
    "objectID": "in-class_Ex/In-class_Ex05/In-class_Ex05.html#working-with-facet_edges",
    "href": "in-class_Ex/In-class_Ex05/In-class_Ex05.html#working-with-facet_edges",
    "title": "In-Class Exercise 05",
    "section": "Working with facet_edges()",
    "text": "Working with facet_edges()\n\nDefaultShift LegendAdd Frame\n\n\n\n\nShow me the good stuff\nset_graph_style()\n\ng &lt;- ggraph(GAStech_graph, \n            layout = \"nicely\") + \n  geom_edge_link(aes(width=Weight), \n                 alpha=0.2) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(colour = Department), \n                  size = 2)\n\ng + facet_edges(~Weekday)\n\n\n\n\n\n\n\n\n\nShow me the good stuff\nset_graph_style()\n\ng &lt;- ggraph(GAStech_graph, \n            layout = \"nicely\") + \n  geom_edge_link(aes(width=Weight), \n                 alpha=0.2) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(colour = Department), \n                  size = 2) +\n  theme(legend.position = 'bottom')\n  \ng + facet_edges(~Weekday)\n\n\n\n\n\n\n\n\n\nShow me the good stuff\nset_graph_style() \n\ng &lt;- ggraph(GAStech_graph, \n            layout = \"nicely\") + \n  geom_edge_link(aes(width=Weight), \n                 alpha=0.2) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(colour = Department), \n                  size = 2)\n  \ng + facet_edges(~Weekday) +\n  th_foreground(foreground = \"grey80\",  \n                border = TRUE) +\n  theme(legend.position = 'bottom')"
  },
  {
    "objectID": "in-class_Ex/In-class_Ex05/In-class_Ex05.html#working-with-facet_nodes",
    "href": "in-class_Ex/In-class_Ex05/In-class_Ex05.html#working-with-facet_nodes",
    "title": "In-Class Exercise 05",
    "section": "Working with facet_nodes()",
    "text": "Working with facet_nodes()\n\n\nShow me the good stuff\nset_graph_style()\n\ng &lt;- ggraph(GAStech_graph, \n            layout = \"nicely\") + \n  geom_edge_link(aes(width=Weight), \n                 alpha=0.2) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(colour = Department), \n                  size = 2)\n  \ng + facet_nodes(~Department)+\n  th_foreground(foreground = \"grey80\",  \n                border = TRUE) +\n  theme(legend.position = 'bottom')"
  },
  {
    "objectID": "in-class_Ex/In-class_Ex05/In-class_Ex05.html#computing-centrality-indices",
    "href": "in-class_Ex/In-class_Ex05/In-class_Ex05.html#computing-centrality-indices",
    "title": "In-Class Exercise 05",
    "section": "Computing centrality indices",
    "text": "Computing centrality indices\nCentrality measures are a collection of statistical indices use to describe the relative important of the actors are to a network. There are four well-known centrality measures, namely: degree, betweenness, closeness and eigenvector.\n\n\nShow me the good stuff\ng &lt;- GAStech_graph %&gt;%\n  mutate(betweenness_centrality = centrality_betweenness()) %&gt;%\n  ggraph(layout = \"fr\") + \n  geom_edge_link(aes(width=Weight), \n                 alpha=0.2) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(colour = Department,\n            size=betweenness_centrality))\ng + theme_graph()"
  },
  {
    "objectID": "in-class_Ex/In-class_Ex05/In-class_Ex05.html#visualising-network-metrics",
    "href": "in-class_Ex/In-class_Ex05/In-class_Ex05.html#visualising-network-metrics",
    "title": "In-Class Exercise 05",
    "section": "Visualising network metrics",
    "text": "Visualising network metrics\n\n\nShow me the good stuff\ng &lt;- GAStech_graph %&gt;%\n  ggraph(layout = \"fr\") + \n  geom_edge_link(aes(width=Weight), \n                 alpha=0.2) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(colour = Department, \n                      size = centrality_betweenness()))\ng + theme_graph()"
  },
  {
    "objectID": "in-class_Ex/In-class_Ex05/In-class_Ex05.html#visualising-community",
    "href": "in-class_Ex/In-class_Ex05/In-class_Ex05.html#visualising-community",
    "title": "In-Class Exercise 05",
    "section": "Visualising Community",
    "text": "Visualising Community\n\n\nShow me the good stuff\ng &lt;- GAStech_graph %&gt;%\n  mutate(community = as.factor(group_edge_betweenness(weights = Weight, directed = TRUE))) %&gt;%\n  ggraph(layout = \"fr\") + \n  geom_edge_link(aes(width=Weight), \n                 alpha=0.2) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(colour = community))  \n\ng + theme_graph()"
  },
  {
    "objectID": "in-class_Ex/In-class_Ex05/In-class_Ex05.html#data-prep",
    "href": "in-class_Ex/In-class_Ex05/In-class_Ex05.html#data-prep",
    "title": "In-Class Exercise 05",
    "section": "Data Prep",
    "text": "Data Prep\n\n\nShow me the good stuff\nGAStech_edges_aggregated &lt;- GAStech_edges %&gt;%\n  left_join(GAStech_nodes, by = c(\"sourceLabel\" = \"label\")) %&gt;%\n  rename(from = id) %&gt;%\n  left_join(GAStech_nodes, by = c(\"targetLabel\" = \"label\")) %&gt;%\n  rename(to = id) %&gt;%\n  filter(MainSubject == \"Work related\") %&gt;%\n  group_by(from, to) %&gt;%\n    summarise(weight = n()) %&gt;%\n  filter(from!=to) %&gt;%\n  filter(weight &gt; 1) %&gt;%\n  ungroup()"
  },
  {
    "objectID": "in-class_Ex/In-class_Ex05/In-class_Ex05.html#plotting-the-first-interactive-network-graph",
    "href": "in-class_Ex/In-class_Ex05/In-class_Ex05.html#plotting-the-first-interactive-network-graph",
    "title": "In-Class Exercise 05",
    "section": "Plotting the first interactive network graph",
    "text": "Plotting the first interactive network graph\n\n\nShow me the good stuff\nvisNetwork(GAStech_nodes, \n           GAStech_edges_aggregated)"
  },
  {
    "objectID": "in-class_Ex/In-class_Ex05/In-class_Ex05.html#working-with-layout",
    "href": "in-class_Ex/In-class_Ex05/In-class_Ex05.html#working-with-layout",
    "title": "In-Class Exercise 05",
    "section": "Working with layout",
    "text": "Working with layout\n\n\nShow me the good stuff\nvisNetwork(GAStech_nodes,\n           GAStech_edges_aggregated) %&gt;%\n  visIgraphLayout(layout = \"layout_with_fr\")"
  },
  {
    "objectID": "in-class_Ex/In-class_Ex05/In-class_Ex05.html#working-with-visual-attributes---nodes",
    "href": "in-class_Ex/In-class_Ex05/In-class_Ex05.html#working-with-visual-attributes---nodes",
    "title": "In-Class Exercise 05",
    "section": "Working with visual attributes - Nodes",
    "text": "Working with visual attributes - Nodes\nvisNetwork() looks for a field called “group” in the nodes object and colour the nodes according to the values of the group field.\nThe code chunk below rename Department field to group.\n\n\nShow me the good stuff\nGAStech_nodes &lt;- GAStech_nodes %&gt;%\n  rename(group = Department) \n\n\nWhen we rerun the code chunk below, visNetwork shades the nodes by assigning unique colour to each category in the group field.\n\n\nShow me the good stuff\nvisNetwork(GAStech_nodes,\n           GAStech_edges_aggregated) %&gt;%\n  visIgraphLayout(layout = \"layout_with_fr\") %&gt;%\n  visLegend() %&gt;%\n  visLayout(randomSeed = 123)"
  },
  {
    "objectID": "in-class_Ex/In-class_Ex05/In-class_Ex05.html#working-with-visual-attributes---edges",
    "href": "in-class_Ex/In-class_Ex05/In-class_Ex05.html#working-with-visual-attributes---edges",
    "title": "In-Class Exercise 05",
    "section": "Working with visual attributes - Edges",
    "text": "Working with visual attributes - Edges\nIn the code run below visEdges() is used to symbolise the edges. - The argument arrows is used to define where to place the arrow. - The smooth argument is used to plot the edges using a smooth curve.\n\n\nShow me the good stuff\nvisNetwork(GAStech_nodes,\n           GAStech_edges_aggregated) %&gt;%\n  visIgraphLayout(layout = \"layout_with_fr\") %&gt;%\n  visEdges(arrows = \"to\", \n           smooth = list(enabled = TRUE, \n                         type = \"curvedCW\")) %&gt;%\n  visLegend() %&gt;%\n  visLayout(randomSeed = 123)"
  },
  {
    "objectID": "in-class_Ex/In-class_Ex05/In-class_Ex05.html#interactivity",
    "href": "in-class_Ex/In-class_Ex05/In-class_Ex05.html#interactivity",
    "title": "In-Class Exercise 05",
    "section": "Interactivity",
    "text": "Interactivity\n\n\nShow me the good stuff\nvisNetwork(GAStech_nodes,\n           GAStech_edges_aggregated) %&gt;%\n  visIgraphLayout(layout = \"layout_with_fr\") %&gt;%\n  visOptions(highlightNearest = TRUE,\n             nodesIdSelection = TRUE) %&gt;%\n  visLegend() %&gt;%\n  visLayout(randomSeed = 123)"
  },
  {
    "objectID": "in-class_Ex/in-class_Ex08/data/MPSZ-2019.html",
    "href": "in-class_Ex/in-class_Ex08/data/MPSZ-2019.html",
    "title": "ISSS608-VAA",
    "section": "",
    "text": "&lt;!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’&gt;     dataset\n\n\n        0 0     false"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "ISSS608-VAA",
    "section": "",
    "text": "Welcome to ISSS608 Visual Analytics and Applications. In this website, you will find Leonard Lee’s coursework prepared for this course."
  },
  {
    "objectID": "take-home_Ex/Data Exploration/data_exploration.html",
    "href": "take-home_Ex/Data Exploration/data_exploration.html",
    "title": "Data Exploration",
    "section": "",
    "text": "pacman::p_load(igraph, tidygraph, ggraph, \n               visNetwork, lubridate, clock,\n               tidyverse, graphlayouts, jsonlite)\n``{r} MC2 &lt;- fromJSON(“data/mc2_challenge_graph.json”)\n``\n``{r} MC2_nodes &lt;- as_tibble(MC2$nodes) %&gt;% select(id,shpcountry, rcvcountry) #using select function to reorganise into desired order of columns\nMC2_edges &lt;- as_tibble(MC2$links) %&gt;% select(source, target, valueofgoods_omu, valueofgoodsusd, weightkg, hscode, arrivaldate) ``"
  },
  {
    "objectID": "take-home_Ex/Data Exploration/data_exploration.html#remove-all-duplicate-rows",
    "href": "take-home_Ex/Data Exploration/data_exploration.html#remove-all-duplicate-rows",
    "title": "Data Exploration",
    "section": "Remove all duplicate rows",
    "text": "Remove all duplicate rows\n``{r} MC2_edges &lt;- MC2_edges %&gt;% distinct() MC2_nodes &lt;- MC2_nodes %&gt;% distinct()\n{r} MC2_edges &lt;- MC2_edges %&gt;% mutate(Month = month(arrivaldate, label = TRUE, abbr = FALSE))"
  },
  {
    "objectID": "take-home_Ex/Data Exploration/data_exploration.html#check-for-na-in-from-and-to",
    "href": "take-home_Ex/Data Exploration/data_exploration.html#check-for-na-in-from-and-to",
    "title": "Data Exploration",
    "section": "Check for NA in from and to",
    "text": "Check for NA in from and to\n{r} MC2_edges &lt;- MC2_edges[complete.cases(MC2_edges[, c(\"source\", \"target\")]), ]"
  },
  {
    "objectID": "take-home_Ex/Data Exploration/data_exploration.html#carp",
    "href": "take-home_Ex/Data Exploration/data_exploration.html#carp",
    "title": "Data Exploration",
    "section": "Carp",
    "text": "Carp\n``{r} carp_nodes &lt;- as_tibble(carp$nodes) %&gt;% select(id,shpcountry, rcvcountry) #using select function to reorganise into desired order of columns\ncarp_edges &lt;- as_tibble(carp$links) %&gt;% select(source, target, valueofgoods_omu, weightkg, hscode, arrivaldate)"
  },
  {
    "objectID": "take-home_Ex/Data Exploration/data_exploration.html#visualise-carp",
    "href": "take-home_Ex/Data Exploration/data_exploration.html#visualise-carp",
    "title": "Data Exploration",
    "section": "Visualise Carp",
    "text": "Visualise Carp\n``{r}\nid1 &lt;- carp_edges_aggregated %&gt;% select(source) %&gt;% rename(id = source) id2 &lt;- carp_edges_aggregated %&gt;% select(target) %&gt;% rename(id = target) carp_nodes_extract &lt;- rbind(id1, id2) %&gt;% distinct()\n``\n``{r} carp_graph &lt;- tbl_graph(nodes = carp_nodes_extract, edges = carp_edges_aggregated, directed = TRUE)\n``\n`{r} ggraph(carp_graph, layout = “fr”) + geom_edge_link(aes()) + geom_node_point(aes()) + theme_graph()\n``"
  },
  {
    "objectID": "take-home_Ex/Data Exploration/data_exploration.html#c_mac",
    "href": "take-home_Ex/Data Exploration/data_exploration.html#c_mac",
    "title": "Data Exploration",
    "section": "C_mac",
    "text": "C_mac\n``{r} cmac_nodes &lt;- as_tibble(c_mac$nodes) %&gt;% select(id,shpcountry, rcvcountry) #using select function to reorganise into desired order of columns\ncmac_edges &lt;- as_tibble(c_mac$links) %&gt;% select(source, target, valueofgoods_omu, weightkg, hscode, arrivaldate)"
  },
  {
    "objectID": "take-home_Ex/Data Exploration/data_exploration.html#visualise-c_mac",
    "href": "take-home_Ex/Data Exploration/data_exploration.html#visualise-c_mac",
    "title": "Data Exploration",
    "section": "Visualise C_Mac",
    "text": "Visualise C_Mac\n``{r}\nid1 &lt;- cmac_edges_aggregated %&gt;% select(source) %&gt;% rename(id = source) id2 &lt;- cmac_edges_aggregated %&gt;% select(target) %&gt;% rename(id = target) cmac_nodes_extract &lt;- rbind(id1, id2) %&gt;% distinct() ``\n``{r} cmac_graph &lt;- tbl_graph(nodes = cmac_nodes_extract, edges = cmac_edges_aggregated, directed = TRUE)\n``\n{r} ggraph(cmac_graph,        layout = \"fr\") +   geom_edge_link(aes()) +   geom_node_point(aes()) +   theme_graph()"
  },
  {
    "objectID": "take-home_Ex/Data Exploration/data_exploration.html#cod",
    "href": "take-home_Ex/Data Exploration/data_exploration.html#cod",
    "title": "Data Exploration",
    "section": "Cod",
    "text": "Cod\n``{r} cod_nodes &lt;- as_tibble(cod$nodes) %&gt;% select(id,shpcountry, rcvcountry) #using select function to reorganise into desired order of columns\ncod_edges &lt;- as_tibble(cod$links) %&gt;% select(source, target, valueofgoods_omu, weightkg, hscode, arrivaldate)"
  },
  {
    "objectID": "take-home_Ex/Data Exploration/data_exploration.html#visualise-cod",
    "href": "take-home_Ex/Data Exploration/data_exploration.html#visualise-cod",
    "title": "Data Exploration",
    "section": "Visualise Cod",
    "text": "Visualise Cod\n``{r}\nid1 &lt;- cod_edges_aggregated %&gt;% select(source) %&gt;% rename(id = source) id2 &lt;- cod_edges_aggregated %&gt;% select(target) %&gt;% rename(id = target) cod_nodes_extract &lt;- rbind(id1, id2) %&gt;% distinct()\n``\n``{r} cod_graph &lt;- tbl_graph(nodes = cod_nodes_extract, edges = cod_edges_aggregated, directed = TRUE)\n``\n``{r} ggraph(cod_graph, layout = “fr”) + geom_edge_link(aes()) + geom_node_point(aes()) + theme_graph()\n``"
  },
  {
    "objectID": "take-home_Ex/Data Exploration/data_exploration.html#catfish",
    "href": "take-home_Ex/Data Exploration/data_exploration.html#catfish",
    "title": "Data Exploration",
    "section": "Catfish",
    "text": "Catfish\nCatfish sus, no weight data (underreporting/overreporting is a trait of illegal fishing?)\n``{r} catfish_nodes &lt;- as_tibble(catfish$nodes) %&gt;% select(id,shpcountry, rcvcountry) #using select function to reorganise into desired order of columns\ncatfish_edges &lt;- as_tibble(catfish$links) %&gt;% select(source, target, valueofgoods_omu, hscode, arrivaldate)"
  },
  {
    "objectID": "take-home_Ex/Data Exploration/data_exploration.html#visualise-catfish",
    "href": "take-home_Ex/Data Exploration/data_exploration.html#visualise-catfish",
    "title": "Data Exploration",
    "section": "Visualise Catfish",
    "text": "Visualise Catfish\n``{r}\nid1 &lt;- catfish_edges_aggregated %&gt;% select(source) %&gt;% rename(id = source) id2 &lt;- catfish_edges_aggregated %&gt;% select(target) %&gt;% rename(id = target) catfish_nodes_extract &lt;- rbind(id1, id2) %&gt;% distinct()\n``\n``{r} catfish_graph &lt;- tbl_graph(nodes = catfish_nodes_extract, edges = catfish_edges_aggregated, directed = TRUE)\n``\n``{r} ggraph(catfish_graph, layout = “fr”) + geom_edge_link(aes()) + geom_node_point(aes()) + theme_graph()\n``"
  },
  {
    "objectID": "take-home_Ex/Data Exploration/data_exploration.html#herring",
    "href": "take-home_Ex/Data Exploration/data_exploration.html#herring",
    "title": "Data Exploration",
    "section": "Herring",
    "text": "Herring\n``{r} herring_nodes &lt;- as_tibble(herring$nodes) %&gt;% select(id,shpcountry, rcvcountry) #using select function to reorganise into desired order of columns\nherring_edges &lt;- as_tibble(herring$links) %&gt;% select(source, target, valueofgoods_omu, weightkg, hscode, arrivaldate)"
  },
  {
    "objectID": "take-home_Ex/Data Exploration/data_exploration.html#visualise-herring",
    "href": "take-home_Ex/Data Exploration/data_exploration.html#visualise-herring",
    "title": "Data Exploration",
    "section": "Visualise Herring",
    "text": "Visualise Herring\n``{r}\nid1 &lt;- herring_edges_aggregated %&gt;% select(source) %&gt;% rename(id = source) id2 &lt;- herring_edges_aggregated %&gt;% select(target) %&gt;% rename(id = target) herring_nodes_extract &lt;- rbind(id1, id2) %&gt;% distinct()\n``\n``{r} herring_graph &lt;- tbl_graph(nodes = herring_nodes_extract, edges = herring_edges_aggregated, directed = TRUE)\n``\n``{r} ggraph(herring_graph, layout = “fr”) + geom_edge_link(aes()) + geom_node_point(aes()) + theme_graph()\n``"
  },
  {
    "objectID": "take-home_Ex/Data Exploration/data_exploration.html#lichen",
    "href": "take-home_Ex/Data Exploration/data_exploration.html#lichen",
    "title": "Data Exploration",
    "section": "Lichen",
    "text": "Lichen\n``{r} lichen_node &lt;- as_tibble(lichen$nodes) %&gt;% select(id,shpcountry, rcvcountry) #using select function to reorganise into desired order of columns\nlichen_edges &lt;- as_tibble(lichen$links) %&gt;% select(source, target, valueofgoods_omu, weightkg, hscode, arrivaldate)"
  },
  {
    "objectID": "take-home_Ex/Data Exploration/data_exploration.html#visualise-lichen",
    "href": "take-home_Ex/Data Exploration/data_exploration.html#visualise-lichen",
    "title": "Data Exploration",
    "section": "Visualise Lichen",
    "text": "Visualise Lichen\n``{r}\nid1 &lt;- lichen_edges_aggregated %&gt;% select(source) %&gt;% rename(id = source) id2 &lt;- lichen_edges_aggregated %&gt;% select(target) %&gt;% rename(id = target) lichen_nodes_extract &lt;- rbind(id1, id2) %&gt;% distinct()\n``\n``{r} lichen_graph &lt;- tbl_graph(nodes = lichen_nodes_extract, edges = lichen_edges_aggregated, directed = TRUE)\n``\n``{r} ggraph(lichen_graph, layout = “fr”) + geom_edge_link(aes()) + geom_node_point(aes()) + theme_graph()\n``"
  },
  {
    "objectID": "take-home_Ex/Data Exploration/data_exploration.html#mac",
    "href": "take-home_Ex/Data Exploration/data_exploration.html#mac",
    "title": "Data Exploration",
    "section": "Mac",
    "text": "Mac\n``{r} mac_nodes &lt;- as_tibble(mac$nodes) %&gt;% select(id,shpcountry, rcvcountry) #using select function to reorganise into desired order of columns\nmac_edges &lt;- as_tibble(mac$links) %&gt;% select(source, target, valueofgoods_omu, hscode, arrivaldate)"
  },
  {
    "objectID": "take-home_Ex/Data Exploration/data_exploration.html#visualise-mac",
    "href": "take-home_Ex/Data Exploration/data_exploration.html#visualise-mac",
    "title": "Data Exploration",
    "section": "Visualise Mac",
    "text": "Visualise Mac\n``{r}\nid1 &lt;- mac_edges_aggregated %&gt;% select(source) %&gt;% rename(id = source) id2 &lt;- mac_edges_aggregated %&gt;% select(target) %&gt;% rename(id = target) mac_nodes_extract &lt;- rbind(id1, id2) %&gt;% distinct()\n``\n``{r} mac_graph &lt;- tbl_graph(nodes = mac_nodes_extract, edges = mac_edges_aggregated, directed = TRUE)\n``\n``{r} ggraph(mac_graph, layout = “fr”) + geom_edge_link(aes()) + geom_node_point(aes()) + theme_graph()\n``"
  },
  {
    "objectID": "take-home_Ex/Data Exploration/data_exploration.html#pollock",
    "href": "take-home_Ex/Data Exploration/data_exploration.html#pollock",
    "title": "Data Exploration",
    "section": "Pollock",
    "text": "Pollock\n``{r} pol_nodes &lt;- as_tibble(pol$nodes) %&gt;% select(id,shpcountry, rcvcountry) #using select function to reorganise into desired order of columns\npol_edges &lt;- as_tibble(pol$links) %&gt;% select(source, target, valueofgoods_omu, weightkg, hscode, arrivaldate)"
  },
  {
    "objectID": "take-home_Ex/Data Exploration/data_exploration.html#visualise-pollock",
    "href": "take-home_Ex/Data Exploration/data_exploration.html#visualise-pollock",
    "title": "Data Exploration",
    "section": "Visualise Pollock",
    "text": "Visualise Pollock\n``{r}\nid1 &lt;- pol_edges_aggregated %&gt;% select(source) %&gt;% rename(id = source) id2 &lt;- pol_edges_aggregated %&gt;% select(target) %&gt;% rename(id = target) pol_nodes_extract &lt;- rbind(id1, id2) %&gt;% distinct()\n``\n``{r} pol_graph &lt;- tbl_graph(nodes = pol_nodes_extract, edges = pol_edges_aggregated, directed = TRUE)\n``\n{r} ggraph(pol_graph,        layout = \"fr\") +   geom_edge_link(aes()) +   geom_node_point(aes()) +   theme_graph()"
  },
  {
    "objectID": "take-home_Ex/Data Exploration/data_exploration.html#sal-wgl",
    "href": "take-home_Ex/Data Exploration/data_exploration.html#sal-wgl",
    "title": "Data Exploration",
    "section": "Sal WGL",
    "text": "Sal WGL\n``{r} salw_nodes &lt;- as_tibble(sal_wgl$nodes) %&gt;% select(id,shpcountry, rcvcountry) #using select function to reorganise into desired order of columns\nsalw_edges &lt;- as_tibble(sal_wgl$links) %&gt;% select(source, target, valueofgoods_omu, weightkg, hscode, arrivaldate)"
  },
  {
    "objectID": "take-home_Ex/Data Exploration/data_exploration.html#visualise-sal-wgl",
    "href": "take-home_Ex/Data Exploration/data_exploration.html#visualise-sal-wgl",
    "title": "Data Exploration",
    "section": "Visualise Sal WGL",
    "text": "Visualise Sal WGL\n``{r}\nid1 &lt;- salw_edges_aggregated %&gt;% select(source) %&gt;% rename(id = source) id2 &lt;- salw_edges_aggregated %&gt;% select(target) %&gt;% rename(id = target) sal_wgl_nodes_extract &lt;- rbind(id1, id2) %&gt;% distinct()\n``\n``{r} sal_wgl_graph &lt;- tbl_graph(nodes = sal_wgl_nodes_extract, edges = salw_edges_aggregated, directed = TRUE)\n``\n``{r} ggraph(sal_wgl_graph, layout = “fr”) + geom_edge_link(aes()) + geom_node_point(aes()) + theme_graph()\n``"
  },
  {
    "objectID": "take-home_Ex/Data Exploration/data_exploration.html#salmon",
    "href": "take-home_Ex/Data Exploration/data_exploration.html#salmon",
    "title": "Data Exploration",
    "section": "Salmon",
    "text": "Salmon\n``{r} salmon_nodes &lt;- as_tibble(salmon$nodes) %&gt;% select(id,shpcountry, rcvcountry) #using select function to reorganise into desired order of columns\nsalmon_edges &lt;- as_tibble(salmon$links) %&gt;% select(source, target, valueofgoods_omu, weightkg, hscode, arrivaldate)"
  },
  {
    "objectID": "take-home_Ex/Data Exploration/data_exploration.html#visualise-salmon",
    "href": "take-home_Ex/Data Exploration/data_exploration.html#visualise-salmon",
    "title": "Data Exploration",
    "section": "Visualise Salmon",
    "text": "Visualise Salmon\n``{r}\nid1 &lt;- salmon_edges_aggregated %&gt;% select(source) %&gt;% rename(id = source) id2 &lt;- salmon_edges_aggregated %&gt;% select(target) %&gt;% rename(id = target) salmon_nodes_extract &lt;- rbind(id1, id2) %&gt;% distinct()\n``\n``{r} salmon_graph &lt;- tbl_graph(nodes = salmon_nodes_extract, edges = salmon_edges_aggregated, directed = TRUE)\n``\n``{r} ggraph(salmon_graph, layout = “fr”) + geom_edge_link(aes()) + geom_node_point(aes()) + theme_graph()\n``"
  },
  {
    "objectID": "take-home_Ex/Data Exploration/data_exploration.html#shark",
    "href": "take-home_Ex/Data Exploration/data_exploration.html#shark",
    "title": "Data Exploration",
    "section": "Shark",
    "text": "Shark\n``{r} shark_nodes &lt;- as_tibble(shark$nodes) %&gt;% select(id,shpcountry, rcvcountry) #using select function to reorganise into desired order of columns\nshark_edges &lt;- as_tibble(shark$links) %&gt;% select(source, target, valueofgoods_omu, weightkg, hscode, arrivaldate)"
  },
  {
    "objectID": "take-home_Ex/Data Exploration/data_exploration.html#tuna",
    "href": "take-home_Ex/Data Exploration/data_exploration.html#tuna",
    "title": "Data Exploration",
    "section": "Tuna",
    "text": "Tuna\n``{r} tuna_nodes &lt;- as_tibble(tuna$nodes) %&gt;% select(id,shpcountry, rcvcountry) #using select function to reorganise into desired order of columns\ntuna_edges &lt;- as_tibble(tuna$links) %&gt;% select(source, target, valueofgoods_omu, hscode, arrivaldate)"
  },
  {
    "objectID": "take-home_Ex/Data Exploration/data_exploration.html#visualise-tuna",
    "href": "take-home_Ex/Data Exploration/data_exploration.html#visualise-tuna",
    "title": "Data Exploration",
    "section": "Visualise Tuna",
    "text": "Visualise Tuna\n``{r}\nid1 &lt;- tuna_edges %&gt;% select(source) %&gt;% rename(id = source) id2 &lt;- tuna_edges %&gt;% select(target) %&gt;% rename(id = target) tuna_nodes_extract &lt;- rbind(id1, id2) %&gt;% distinct()\n``\n``{r} tuna_graph &lt;- tbl_graph(nodes = tuna_nodes_extract, edges = tuna_edges, directed = TRUE)\n``\n``{r} ggraph(tuna_graph, layout = “fr”) + geom_edge_link(aes()) + geom_node_point(aes()) + theme_graph()\n``\nall_edges&lt;- c(“carp_edges”, “c_mac_edges”, “cod_edges”, “catfish_edges”, “herring_edges”, “lichen_edges”, “mac_edges”, “pol_edges”, “salmon_edges”, “sal_wgl_edges”, “shark_edges”, “tuna_edges”) # Add more dataset names as needed\nunique_hscodes &lt;- character() # Initialize an empty vector to store unique hs codes\nfor (all_edges in all_edges) { dataset &lt;- get(all_edges) # Extract the dataset\nunique_hscodes &lt;- unique(c(unique_hscodes, dataset$HS_Code)) # Extract unique hs codes and append to the vector }"
  },
  {
    "objectID": "take-home_Ex/Data Exploration/data_exploration.html#remove-all-rows-with-hs_codes-irrelevant-to-bundles",
    "href": "take-home_Ex/Data Exploration/data_exploration.html#remove-all-rows-with-hs_codes-irrelevant-to-bundles",
    "title": "Data Exploration",
    "section": "Remove all rows with HS_codes irrelevant to bundles",
    "text": "Remove all rows with HS_codes irrelevant to bundles\nfiltered_MC2_edges &lt;- MC2_edges[MC2_edges$HS_Code %in% unique_hscodes, ]"
  },
  {
    "objectID": "take-home_Ex/Data Exploration/data_exploration.html#aggregate",
    "href": "take-home_Ex/Data Exploration/data_exploration.html#aggregate",
    "title": "Data Exploration",
    "section": "Aggregate",
    "text": "Aggregate\n``{r} MC2_edges_aggregated &lt;- filtered_MC2_edges %&gt;% group_by(source,target) %&gt;% summarise(Value_OMU_Total = sum(Value_OMU, na.rm = TRUE), Value_USD_Total = sum(Value_USD, na.rm = TRUE), Count = n(), Average_OMU = mean(Value_OMU, na.rm = TRUE), Average_USD = mean(Value_USD, na.rm = TRUE), Total_Weight_KG = sum(Weight_KG, na.rm = TRUE), Average_Weight_KG = mean(Weight_KG, na.rm = TRUE)) %&gt;% ungroup()\n``"
  },
  {
    "objectID": "take-home_Ex/Data Exploration/data_exploration.html#exploring-cut-points-to-focus-dataset",
    "href": "take-home_Ex/Data Exploration/data_exploration.html#exploring-cut-points-to-focus-dataset",
    "title": "Data Exploration",
    "section": "Exploring cut-points to focus dataset",
    "text": "Exploring cut-points to focus dataset\n#::: panel-tabset ## Mean and Median\nmean_links &lt;- mean(MC2_edges_aggregated\\(Count) median_links &lt;- median(MC2_edges_aggregated\\)Count)\nprint(mean_links) print(median_links)"
  },
  {
    "objectID": "take-home_Ex/Data Exploration/data_exploration.html#boxplot-distribution",
    "href": "take-home_Ex/Data Exploration/data_exploration.html#boxplot-distribution",
    "title": "Data Exploration",
    "section": "Boxplot Distribution",
    "text": "Boxplot Distribution\nggplot(MC2_edges_aggregated, aes(y = Count)) + geom_boxplot(fill = “steelblue”, color = “black”) + labs(y = “Count”, title = “Boxplot of Count”)"
  },
  {
    "objectID": "take-home_Ex/Data Exploration/data_exploration.html#boxplot-zoomed",
    "href": "take-home_Ex/Data Exploration/data_exploration.html#boxplot-zoomed",
    "title": "Data Exploration",
    "section": "Boxplot (zoomed)",
    "text": "Boxplot (zoomed)\nggplot(MC2_edges_aggregated, aes(y = Count)) + geom_boxplot(fill = “steelblue”, color = “black”) + labs(y = “Count”, title = “Boxplot of Count”) + ylim(0, 50)\n#:::\n\nBased on the boxplots, we see that the data is bottom heavy, which is consistent with the median score of 2. Given that we are interested in abnormal data (large counts), we will filter the bulk of the data by the mean value(19.8) to focus our examination of links above this connection threshold."
  },
  {
    "objectID": "take-home_Ex/Data Exploration/data_exploration.html#filter-at-cut-point-19.8",
    "href": "take-home_Ex/Data Exploration/data_exploration.html#filter-at-cut-point-19.8",
    "title": "Data Exploration",
    "section": "Filter at cut-point 19.8",
    "text": "Filter at cut-point 19.8\nfiltered_dataset &lt;- subset(MC2_edges_aggregated, Count &gt; 19.8)"
  },
  {
    "objectID": "take-home_Ex/Data Exploration/data_exploration.html#create-graph",
    "href": "take-home_Ex/Data Exploration/data_exploration.html#create-graph",
    "title": "Data Exploration",
    "section": "Create Graph",
    "text": "Create Graph\nMC2d_filtered &lt;- distinct(filtered_dataset)\nid1 &lt;- MC2d_filtered %&gt;% select(source) %&gt;% rename(id = source) id2 &lt;- MC2d_filtered %&gt;% select(target) %&gt;% rename(id = target) mc2_nodes_extracted &lt;- rbind(id1, id2) %&gt;% distinct()\nmc2_graph &lt;- tbl_graph(nodes = mc2_nodes_extracted, edges = MC2d_filtered, directed = TRUE)\nggraph(mc2_graph, layout = “fr”) + geom_edge_link(aes()) + geom_node_point(aes()) + theme_graph()\nFilter further to remove orphan nodes\nChubMC2_edges &lt;- MC2_edges %&gt;% filter(HS_Code %in% c_mac_edges$HS_Code)\nChubMC2_edges\\(Arrival_Date &lt;- as.Date(ChubMC2_edges\\)Arrival_Date)\nyearly_datasets &lt;- split(ChubMC2_edges, format(ChubMC2_edges$Arrival_Date, “%Y”))\ndataset_2028 &lt;- yearly_datasets[[“2028”]]\ndataset_2029 &lt;- yearly_datasets[[“2029”]]\ndataset_2030 &lt;- yearly_datasets[[“2030”]]\ndataset_2031 &lt;- yearly_datasets[[“2031”]]\ndataset_2032 &lt;- yearly_datasets[[“2032”]]\ndataset_2033 &lt;- yearly_datasets[[“2033”]]\ndataset_2034 &lt;- yearly_datasets[[“2034”]]\nAgg_2028 &lt;- dataset_2028 %&gt;% group_by(source,target) %&gt;% summarise(Value_OMU_Total = sum(Value_OMU, na.rm = TRUE), Value_USD_Total = sum(Value_USD, na.rm = TRUE), Count = n(), Average_OMU = mean(Value_OMU, na.rm = TRUE), Average_USD = mean(Value_USD, na.rm = TRUE), Total_Weight_KG = sum(Weight_KG, na.rm = TRUE), Average_Weight_KG = mean(Weight_KG, na.rm = TRUE)) %&gt;% ungroup()\nAgg_2029 &lt;- dataset_2029 %&gt;% group_by(source,target) %&gt;% summarise(Value_OMU_Total = sum(Value_OMU, na.rm = TRUE), Value_USD_Total = sum(Value_USD, na.rm = TRUE), Count = n(), Average_OMU = mean(Value_OMU, na.rm = TRUE), Average_USD = mean(Value_USD, na.rm = TRUE), Total_Weight_KG = sum(Weight_KG, na.rm = TRUE), Average_Weight_KG = mean(Weight_KG, na.rm = TRUE)) %&gt;% ungroup()\nAgg_2030 &lt;- dataset_2030 %&gt;% group_by(source,target) %&gt;% summarise(Value_OMU_Total = sum(Value_OMU, na.rm = TRUE), Value_USD_Total = sum(Value_USD, na.rm = TRUE), Count = n(), Average_OMU = mean(Value_OMU, na.rm = TRUE), Average_USD = mean(Value_USD, na.rm = TRUE), Total_Weight_KG = sum(Weight_KG, na.rm = TRUE), Average_Weight_KG = mean(Weight_KG, na.rm = TRUE)) %&gt;% ungroup()\nAgg_2031 &lt;- dataset_2031 %&gt;% group_by(source,target) %&gt;% summarise(Value_OMU_Total = sum(Value_OMU, na.rm = TRUE), Value_USD_Total = sum(Value_USD, na.rm = TRUE), Count = n(), Average_OMU = mean(Value_OMU, na.rm = TRUE), Average_USD = mean(Value_USD, na.rm = TRUE), Total_Weight_KG = sum(Weight_KG, na.rm = TRUE), Average_Weight_KG = mean(Weight_KG, na.rm = TRUE)) %&gt;% ungroup()\nAgg_2032 &lt;- dataset_2032 %&gt;% group_by(source,target) %&gt;% summarise(Value_OMU_Total = sum(Value_OMU, na.rm = TRUE), Value_USD_Total = sum(Value_USD, na.rm = TRUE), Count = n(), Average_OMU = mean(Value_OMU, na.rm = TRUE), Average_USD = mean(Value_USD, na.rm = TRUE), Total_Weight_KG = sum(Weight_KG, na.rm = TRUE), Average_Weight_KG = mean(Weight_KG, na.rm = TRUE)) %&gt;% ungroup()\n``{r} Agg_2033 &lt;- dataset_2033 %&gt;% group_by(source,target) %&gt;% summarise(Value_OMU_Total = sum(Value_OMU, na.rm = TRUE), Value_USD_Total = sum(Value_USD, na.rm = TRUE), Count = n(), Average_OMU = mean(Value_OMU, na.rm = TRUE), Average_USD = mean(Value_USD, na.rm = TRUE), Total_Weight_KG = sum(Weight_KG, na.rm = TRUE), Average_Weight_KG = mean(Weight_KG, na.rm = TRUE)) %&gt;% ungroup()\n{r} Agg_2034 &lt;- dataset_2034 %&gt;% group_by(source,target) %&gt;% summarise(Value_OMU_Total = sum(Value_OMU, na.rm = TRUE), Value_USD_Total = sum(Value_USD, na.rm = TRUE), Count = n(), Average_OMU = mean(Value_OMU, na.rm = TRUE), Average_USD = mean(Value_USD, na.rm = TRUE), Total_Weight_KG = sum(Weight_KG, na.rm = TRUE), Average_Weight_KG = mean(Weight_KG, na.rm = TRUE)) %&gt;% ungroup()\n{r}\nggplot(Agg_2028, aes(y = Count)) + geom_boxplot(fill = “steelblue”, color = “black”) + labs(y = “Count”, title = “Boxplot of Count”) ``\n``{r} threshold &lt;- quantile(Agg_2028$Count, probs = 0.99)"
  },
  {
    "objectID": "take-home_Ex/take-home_Ex01/take-home_Ex01.html",
    "href": "take-home_Ex/take-home_Ex01/take-home_Ex01.html",
    "title": "Take-Home Exercise 1",
    "section": "",
    "text": "City of Engagement, with a total population of 50,000, is a small city located at Country of Nowhere. The city serves as a service centre of an agriculture region surrounding the city. The main agriculture of the region is fruit farms and vineyards. The local council of the city is in the process of preparing the Local Plan 2023. A sample survey of 1000 representative residents had been conducted to collect data related to their household demographic and spending patterns, among other things. The city aims to use the data to assist with their major community revitalization efforts, including how to allocate a very large city renewal grant they have recently received."
  },
  {
    "objectID": "take-home_Ex/take-home_Ex01/take-home_Ex01.html#financial-dataset-summary",
    "href": "take-home_Ex/take-home_Ex01/take-home_Ex01.html#financial-dataset-summary",
    "title": "Take-Home Exercise 1",
    "section": "3.1 Financial Dataset Summary",
    "text": "3.1 Financial Dataset Summary\n\n\nShow me the good stuff\nHmisc::describe(Fdata)\n\n\nFdata \n\n 4  Variables      1513636  Observations\n--------------------------------------------------------------------------------\nparticipantId \n       n  missing distinct     Info     Mean      Gmd      .05      .10 \n 1513636        0     1011        1    480.9    341.2       43       86 \n     .25      .50      .75      .90      .95 \n     222      464      726      918      967 \n\nlowest :    0    1    2    3    4, highest: 1006 1007 1008 1009 1010\n--------------------------------------------------------------------------------\ntimestamp \n                  n             missing            distinct                Info \n            1513636                   0               87366                   1 \n               Mean                 Gmd                 .05                 .10 \n2022-08-26 05:00:48            10684501 2022-03-14 14:00:00 2022-03-31 07:20:00 \n                .25                 .50                 .75                 .90 \n2022-05-24 13:25:00 2022-08-25 15:00:00 2022-11-27 07:25:00 2023-01-22 10:20:00 \n                .95 \n2023-02-09 20:10:00 \n\nlowest : 2022-03-01 00:00:00 2022-03-01 04:50:00 2022-03-01 05:30:00 2022-03-01 05:40:00 2022-03-01 05:45:00\nhighest: 2023-02-28 23:35:00 2023-02-28 23:40:00 2023-02-28 23:45:00 2023-02-28 23:50:00 2023-02-28 23:55:00\n--------------------------------------------------------------------------------\ncategory \n       n  missing distinct \n 1513636        0        6 \n                                                                      \nValue           Education           Food     Recreation RentAdjustment\nFrequency            3319         790051         296013            131\nProportion          0.002          0.522          0.196          0.000\n                                        \nValue             Shelter           Wage\nFrequency           11463         412659\nProportion          0.008          0.273\n--------------------------------------------------------------------------------\namount \n       n  missing distinct     Info     Mean      Gmd      .05      .10 \n 1513636        0     6690    0.981    20.05    66.15  -21.050  -15.182 \n     .25      .50      .75      .90      .95 \n  -5.594   -4.000   21.598  107.467  159.561 \n\nlowest : -1562.73 -1556.36 -1499.25 -1475.67 -1458.69\nhighest: 4059.86  4069.45  4078.12  4085.39  4096.53 \n--------------------------------------------------------------------------------"
  },
  {
    "objectID": "take-home_Ex/take-home_Ex01/take-home_Ex01.html#joviality-dataset-summary",
    "href": "take-home_Ex/take-home_Ex01/take-home_Ex01.html#joviality-dataset-summary",
    "title": "Take-Home Exercise 1",
    "section": "3.2 Joviality Dataset Summary",
    "text": "3.2 Joviality Dataset Summary\n\n\nShow me the good stuff\nHmisc::describe(Jdata)\n\n\nJdata \n\n 7  Variables      1011  Observations\n--------------------------------------------------------------------------------\nparticipantId \n       n  missing distinct     Info     Mean      Gmd      .05      .10 \n    1011        0     1011        1      505    337.3     50.5    101.0 \n     .25      .50      .75      .90      .95 \n   252.5    505.0    757.5    909.0    959.5 \n\nlowest :    0    1    2    3    4, highest: 1006 1007 1008 1009 1010\n--------------------------------------------------------------------------------\nhouseholdSize \n       n  missing distinct     Info     Mean      Gmd \n    1011        0        3    0.886    1.964   0.8635 \n                            \nValue          1     2     3\nFrequency    337   373   301\nProportion 0.333 0.369 0.298\n\nFor the frequency table, variable is rounded to the nearest 0.02\n--------------------------------------------------------------------------------\nhaveKids \n       n  missing distinct \n    1011        0        2 \n                      \nValue      FALSE  TRUE\nFrequency    710   301\nProportion 0.702 0.298\n--------------------------------------------------------------------------------\nage \n       n  missing distinct     Info     Mean      Gmd      .05      .10 \n    1011        0       43    0.999    39.07     14.3       20       22 \n     .25      .50      .75      .90      .95 \n      29       39       50       56       58 \n\nlowest : 18 19 20 21 22, highest: 56 57 58 59 60\n--------------------------------------------------------------------------------\neducationLevel \n       n  missing distinct \n    1011        0        4 \n                                                                      \nValue                Bachelors            Graduate HighSchoolOrCollege\nFrequency                  232                 170                 525\nProportion               0.229               0.168               0.519\n                              \nValue                      Low\nFrequency                   84\nProportion               0.083\n--------------------------------------------------------------------------------\ninterestGroup \n       n  missing distinct \n    1011        0       10 \n                                                                      \nValue          A     B     C     D     E     F     G     H     I     J\nFrequency    102    91   102    96    83   106   108   111    96   116\nProportion 0.101 0.090 0.101 0.095 0.082 0.105 0.107 0.110 0.095 0.115\n--------------------------------------------------------------------------------\njoviality \n       n  missing distinct     Info     Mean      Gmd      .05      .10 \n    1011        0     1011        1   0.4938   0.3364  0.05642  0.10871 \n     .25      .50      .75      .90      .95 \n 0.24007  0.47754  0.74682  0.90645  0.96024 \n\nlowest : 0.000204  0.000265  0.000985  0.0013658 0.0016267\nhighest: 0.992602  0.997605  0.997671  0.998644  0.999234 \n--------------------------------------------------------------------------------"
  },
  {
    "objectID": "take-home_Ex/take-home_Ex01/take-home_Ex01.html#correcting-demographic-data-format-jdata",
    "href": "take-home_Ex/take-home_Ex01/take-home_Ex01.html#correcting-demographic-data-format-jdata",
    "title": "Take-Home Exercise 1",
    "section": "3.3 Correcting Demographic Data Format [Jdata]",
    "text": "3.3 Correcting Demographic Data Format [Jdata]\n\n\n\n\n\n\nNote\n\n\n\n\n\n\nparticipantId is currently classified as  instead of nominal, and is cast to  class using as.character().\neducationLevel is currently classified as  categorical data, and is cast as factor type using the ordered() function, in accordance to its inherent hierarchy.\nhouseholdSize and interestGroup are classified as  and  respectively despite being categorical in nature. The two variables are cast as factors using as.factor()\n\n\n\n\n\n\nShow me the good stuff\nJdata_new &lt;- Jdata %&gt;%\n  #change PariticipantId to &lt;chr&gt;\n  mutate(participantId = as.character(Jdata$participantId),\n         \n  #update educationaLevel with ordinal scale\n  educationLevel = ordered(Jdata$educationLevel, levels = c(\"Graduate\", \"Bachelors\", \"HighSchoolOrCollege\", \"Low\")),\n  \n  # Cast householdSize and interestGroup as factors\n  householdSize = as.factor(Jdata$householdSize),\n  interestGroup = as.factor(Jdata$interestGroup)\n  )"
  },
  {
    "objectID": "take-home_Ex/take-home_Ex01/take-home_Ex01.html#correcting-financial-data-format-fdata",
    "href": "take-home_Ex/take-home_Ex01/take-home_Ex01.html#correcting-financial-data-format-fdata",
    "title": "Take-Home Exercise 1",
    "section": "3.4.1 Correcting Financial Data Format [Fdata]",
    "text": "3.4.1 Correcting Financial Data Format [Fdata]\n\n\n\n\n\n\nNote\n\n\n\n\n\n\nparticipantId is currently classified as  instead of nominal, and is cast to  class using as.character().\ncategory is classified as , and is cast as factor using as.factor()\n\n\n\n\n\n\nShow me the good stuff\nFdata_new &lt;- Fdata %&gt;%\n  #change PariticipantId to &lt;chr&gt;\n  mutate(participantId = as.character(Fdata$participantId),\n         \n  #Extract Year-Month from timestamp\n  YMDate = paste0(year(timestamp), \"-\", sprintf(\"%02d\", month(timestamp))),\n         \n  # Cast householdSize and interestGroup as factors\n  category = as.factor(Fdata$category),\n  \n  # Round amount to 2dp\n  amount = as.integer(round(amount, digits = 2))\n  ) %&gt;%\n  \n  # remove original timestamp column\n  select(-timestamp) %&gt;%\n  \n  #sort by ParticipantId\n  arrange(participantId)"
  },
  {
    "objectID": "take-home_Ex/take-home_Ex01/take-home_Ex01.html#pivoting-financial-data-fdata_new",
    "href": "take-home_Ex/take-home_Ex01/take-home_Ex01.html#pivoting-financial-data-fdata_new",
    "title": "Take-Home Exercise 1",
    "section": "3.4.2 Pivoting Financial Data [Fdata_new]",
    "text": "3.4.2 Pivoting Financial Data [Fdata_new]\n\n\nShow me the good stuff\nPivot_Fdata &lt;- Fdata_new %&gt;%\n               #Define row groups\n               group_by(participantId, YMDate) %&gt;%\n  \n               # Sum total amount per category for each month\n               summarise(Education = sum(amount[category == \"Education\"]),\n                         Food = sum(amount[category == \"Food\"]),\n                         Shelter = sum(amount[category == \"Shelter\"]),\n                         Recreation = sum(amount[category == \"Recreation\"]),\n                         RentAdjmt = sum(amount[category == \"RentAdjustment\"]),\n                         Wage = sum(amount[category == \"Wage\"])) %&gt;%\n                ungroup()\n  \nhead(Pivot_Fdata, n = 3)\n\n\n# A tibble: 3 × 8\n  participantId YMDate  Education  Food Shelter Recreation RentAdjmt  Wage\n  &lt;chr&gt;         &lt;chr&gt;       &lt;int&gt; &lt;int&gt;   &lt;int&gt;      &lt;int&gt;     &lt;int&gt; &lt;int&gt;\n1 0             2022-03       -76  -259   -1108       -335         0 11902\n2 0             2022-04       -38  -255    -554       -213         0  8610\n3 0             2022-05       -38  -257    -554       -368         0  9020"
  },
  {
    "objectID": "take-home_Ex/take-home_Ex01/take-home_Ex01.html#examining-demographic-data-groups",
    "href": "take-home_Ex/take-home_Ex01/take-home_Ex01.html#examining-demographic-data-groups",
    "title": "Take-Home Exercise 1",
    "section": "4.1 Examining Demographic Data Groups",
    "text": "4.1 Examining Demographic Data Groups\n\n4.1.1 Age Groups\nThrough a dotplot, we see that age distribution across the participants is spread between 18 to 60, with minor fluctuations.\n\n\nShow me the good stuff\n# Computing min and max age to annotate plot\nmin_age &lt;- min(Joined_data$age)\nmax_age &lt;- max(Joined_data$age)\n\n\ndem_age &lt;- ggplot(Joined_data, aes(x = age)) +\n  geom_dotplot(binwidth = 1,\n               stackratio = 1.2,\n               stackdir = \"up\",\n               fill = \"#00BF7D\", #&lt; Fill colour same as bar charts\n               color = NA,\n               dotsize = 0.6) +\n  labs(title = \"Age\",\n       x = NULL,\n       y = NULL)\n\ndem_age2 &lt;-dem_age + \n            annotate(geom = \"text\", x = min_age, y = 0.83,\n            label = paste0(\"Youngest:\\n\", min_age)) + #&lt; add text annotation to show age range\n            annotate(geom = \"text\", x = max_age, y = 0.83,\n            label = paste0(\"Oldest:\\n\", max_age)) +\n            theme(axis.text.y = element_blank(), #&lt; remove unnecessary elements from plot\n            panel.grid.major = element_blank())\ndem_age2\n\n\n\n\n\n\nParticipants are further grouped by age into four categories, each encompassing approximately 10 years of age range:\n18-29, 30-39, 40-49, 50-60\n\n\n\n4.1.2 Grouping Participants by Age\n\nCodeDistribution Barchart\n\n\n\n\nShow me the good stuff\nJoined_data$ageGroup &lt;- as.factor(cut(Joined_data$age,\n                                        breaks = c(0,29,39,49,60),\n                                        labels = c(\"18-29\", \"30-39\", \"40-49\", \"50-60\")))\n\n\n\n\n\n\nShow me the good stuff\n# Barchart of ageGroup\ndem_agegrp&lt;- ggplot(Joined_data, aes(x = ageGroup, fill = ageGroup)) +\n            geom_bar() +\n            labs(title = \"Even Distribution of Participants across Age Groups\", #&lt; Linebreak added to title so it does not get truncated\n                  x = \"Age Group\",\n                  y = NULL) +\n            geom_text(stat = \"count\",\n                      aes(label = after_stat(count)),\n                      vjust = -1) +\n            ylim(0,400) + #&lt; Same y-axis limits for both age and wage plots to standardise\n            theme(text = element_text(size = 12))\n\ndem_agegrp\n\n\n\n\n\n\n\n\n\n\n4.1.3 Household Size\n\n\nShow me the good stuff\n# Calculate proportion of household sizes\nproportion &lt;- Joined_data %&gt;%\n  count(householdSize) %&gt;%\n  mutate(prop = n / sum(n))\n\n# Create pie chart\npie_chart &lt;- ggplot(proportion, aes(x = \"\", y = prop, fill = householdSize)) +\n  geom_bar(stat = \"identity\", color = \"black\") +\n  coord_polar(\"y\", start = 0) +\n  geom_text(aes(label = percent(prop)), position = position_stack(vjust = 0.5)) +\n  scale_y_continuous(labels = percent_format()) +\n  labs(fill = \"Household Size\") +\n  ggtitle(\"Proportion of Household Sizes\") +\n  theme_void() +\n  theme(legend.position = \"right\")\n\n# Display pie chart\npie_chart\n\n\n\n\n\n\nHere, we see that there is a relatively even proportion of household sizes throughout the surveyed participants, with household size of 2 being slightly more prevalent."
  },
  {
    "objectID": "take-home_Ex/take-home_Ex01/take-home_Ex01.html#joviality",
    "href": "take-home_Ex/take-home_Ex01/take-home_Ex01.html#joviality",
    "title": "Take-Home Exercise 1",
    "section": "5.1 Joviality",
    "text": "5.1 Joviality\nThe survey returned a range of Joviality scores between 0 and 1, and it is assumed that 1 is the maximum score to which one is most Jovial (or happy), and 0 is conversely the minimum score to which indicates the lowest possible state of happiness at the time of survey.\n\nNormality Testing and Distribution\n\nNormality TestingDistribution\n\n\n\n\nShow me the good stuff\nqq &lt;- ggplot(Joined_data, \n       aes(sample=joviality)) +\n  stat_qq() +\n  stat_qq_line()\n\nsw_t &lt;- Joined_data %&gt;%\n  shapiro_test(joviality) %&gt;%\n  gt()\n\ntmp &lt;- tempfile(fileext = '.png')\ngtsave(sw_t, tmp)\ntable_png &lt;- png::readPNG(tmp, native = TRUE)\n\nqq + table_png\n\n\n\n\n\nThe qqplot compares the distribution of the data against the expected normal distribution. As the points deviate significantly from the line, the qqplot suggests that the data is not normally distributed.\nThe Shapiro-Wilk test is a widely used method to test for normality. As p &lt; 0.05, there is sufficient statistical power to reject the null hypothesis that the data is normally distributed.\n\n\n\n\nShow me the good stuff\nmean_j &lt;- mean(Joined_data$joviality)\nmed_j &lt;- median(Joined_data$joviality)\nstd_j &lt;- sd(Joined_data$joviality)\n\nggplot(Joined_data, aes(x = joviality)) + \n      geom_histogram(aes(y = ..density..),\n                    binwidth = 0.05, \n                    fill = \"#CCFF99\",\n                    color = \"grey\") +\n      stat_function(fun = dnorm,\n                args = list(mean = mean_j,\n                            sd = std_j),\n                col = \"skyblue\",\n                linewidth = 1) +\n      geom_vline(aes(xintercept = mean_j),\n                colour=\"#4d5887\", linewidth = 0.8, linetype = \"dashed\") +\n      annotate(geom = \"text\", x = mean_j + 0.12, y = 1.4,\n                  label = paste0(\"Mean Joviality: \", round((mean_j),2)),\n                  color = \"#4d5887\") +\n      geom_vline(aes(xintercept = med_j),\n                colour=\"grey20\", linewidth = 0.8, linetype = \"dashed\") +\n      annotate(geom = \"text\", x = med_j - 0.13, y = 1.5,\n                  label = paste0(\"Median Joviality: \", round((med_j),2)),\n                  color = \"grey20\") +\n      scale_x_continuous(breaks = scales::pretty_breaks(n = 10)) +\n      labs(title = \"Distribution of Participants' Joviality Scores\") +\n      theme(axis.text.y = element_blank(),\n            axis.title.y = element_blank(),\n            panel.grid.major = element_blank())"
  },
  {
    "objectID": "take-home_Ex/take-home_Ex01/take-home_Ex01.html#collinearity-check",
    "href": "take-home_Ex/take-home_Ex01/take-home_Ex01.html#collinearity-check",
    "title": "Take-Home Exercise 1",
    "section": "Collinearity Check",
    "text": "Collinearity Check\n\nThe variables householdSize and haveKids cause aliasing when run together, therefore two separate collinearity checks are run using each at a time.\n\n\nhouseholdSizehaveKidsModel 1 Visualisation\n\n\n\n\nShow me the good stuff\n# Load the car package\nlibrary(car)\n\n# Fit the linear regression model\nmodel &lt;- lm(joviality ~ Education + Food + Recreation + \n              Shelter + Wage + RentAdjmt + householdSize + age + educationLevel + interestGroup, data = Joined_data)\n\nsummary(model)\n\n\n\nCall:\nlm(formula = joviality ~ Education + Food + Recreation + Shelter + \n    Wage + RentAdjmt + householdSize + age + educationLevel + \n    interestGroup, data = Joined_data)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-0.5659 -0.1675 -0.0186  0.1547  0.9198 \n\nCoefficients:\n                   Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)       5.359e-01  4.611e-02  11.623  &lt; 2e-16 ***\nEducation        -6.120e-04  3.385e-04  -1.808  0.07092 .  \nFood             -9.295e-04  1.092e-04  -8.515  &lt; 2e-16 ***\nRecreation       -6.234e-04  4.810e-05 -12.960  &lt; 2e-16 ***\nShelter           6.775e-04  4.738e-05  14.300  &lt; 2e-16 ***\nWage             -6.876e-05  4.217e-06 -16.306  &lt; 2e-16 ***\nRentAdjmt         2.609e-03  2.859e-04   9.125  &lt; 2e-16 ***\nhouseholdSize2    2.782e-01  2.322e-02  11.984  &lt; 2e-16 ***\nhouseholdSize3    2.593e-01  3.240e-02   8.002  3.4e-15 ***\nage              -1.174e-03  5.763e-04  -2.037  0.04191 *  \neducationLevel.L -2.713e-01  2.563e-02 -10.585  &lt; 2e-16 ***\neducationLevel.Q  3.047e-02  1.777e-02   1.715  0.08674 .  \neducationLevel.C  4.646e-02  1.421e-02   3.269  0.00111 ** \ninterestGroupB    1.286e-02  3.263e-02   0.394  0.69354    \ninterestGroupC    5.876e-02  3.175e-02   1.851  0.06450 .  \ninterestGroupD    6.739e-03  3.232e-02   0.209  0.83488    \ninterestGroupE    4.198e-02  3.347e-02   1.254  0.21004    \ninterestGroupF    6.389e-03  3.148e-02   0.203  0.83922    \ninterestGroupG    5.862e-02  3.148e-02   1.862  0.06290 .  \ninterestGroupH   -1.497e-02  3.103e-02  -0.483  0.62954    \ninterestGroupI    7.354e-02  3.225e-02   2.280  0.02282 *  \ninterestGroupJ    2.276e-02  3.075e-02   0.740  0.45938    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.2253 on 989 degrees of freedom\nMultiple R-squared:  0.4146,    Adjusted R-squared:  0.4021 \nF-statistic: 33.35 on 21 and 989 DF,  p-value: &lt; 2.2e-16\n\n\nShow me the good stuff\n# Calculate the VIFs using the vif() function\nvif_values &lt;- vif(model)\n\n# Print the VIFs\nprint(vif_values)\n\n\n                   GVIF Df GVIF^(1/(2*Df))\nEducation      2.908455  1        1.705419\nFood           3.217499  1        1.793739\nRecreation     2.026892  1        1.423690\nShelter        4.497444  1        2.120718\nWage           1.751992  1        1.323628\nRentAdjmt      1.082507  1        1.040436\nhouseholdSize  5.687538  2        1.544298\nage            1.013009  1        1.006484\neducationLevel 2.043000  3        1.126449\ninterestGroup  1.121875  9        1.006409\n\n\n\n\n\n\nShow me the good stuff\n# Load the car package\nlibrary(car)\n\n# Fit the linear regression model\nmodel2 &lt;- lm(joviality ~ Education + Food + Recreation + \n              Shelter + Wage + RentAdjmt + haveKids + age + educationLevel + interestGroup, data = Joined_data)\n\nsummary(model2)\n\n\n\nCall:\nlm(formula = joviality ~ Education + Food + Recreation + Shelter + \n    Wage + RentAdjmt + haveKids + age + educationLevel + interestGroup, \n    data = Joined_data)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-0.56878 -0.17546 -0.00286  0.16902  0.60775 \n\nCoefficients:\n                   Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)       7.151e-01  4.665e-02  15.328  &lt; 2e-16 ***\nEducation        -9.051e-04  3.611e-04  -2.507   0.0124 *  \nFood             -2.016e-04  9.702e-05  -2.078   0.0380 *  \nRecreation       -5.279e-04  5.074e-05 -10.404  &lt; 2e-16 ***\nShelter           3.130e-04  3.886e-05   8.056 2.25e-15 ***\nWage             -6.377e-05  4.488e-06 -14.208  &lt; 2e-16 ***\nRentAdjmt         2.127e-03  3.028e-04   7.025 3.99e-12 ***\nhaveKidsTRUE      4.370e-02  2.882e-02   1.516   0.1298    \nage              -1.365e-03  6.162e-04  -2.216   0.0269 *  \neducationLevel.L -2.366e-01  2.724e-02  -8.687  &lt; 2e-16 ***\neducationLevel.Q  2.275e-02  1.899e-02   1.198   0.2314    \neducationLevel.C  2.781e-02  1.511e-02   1.840   0.0660 .  \ninterestGroupB    5.587e-03  3.489e-02   0.160   0.8728    \ninterestGroupC    4.290e-02  3.393e-02   1.264   0.2064    \ninterestGroupD    2.610e-03  3.457e-02   0.076   0.9398    \ninterestGroupE    4.234e-02  3.580e-02   1.183   0.2372    \ninterestGroupF   -7.587e-03  3.365e-02  -0.225   0.8217    \ninterestGroupG    4.723e-02  3.366e-02   1.403   0.1608    \ninterestGroupH   -1.364e-02  3.319e-02  -0.411   0.6811    \ninterestGroupI    5.149e-02  3.444e-02   1.495   0.1353    \ninterestGroupJ    2.821e-02  3.288e-02   0.858   0.3912    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.241 on 990 degrees of freedom\nMultiple R-squared:  0.3295,    Adjusted R-squared:  0.316 \nF-statistic: 24.33 on 20 and 990 DF,  p-value: &lt; 2.2e-16\n\n\nShow me the good stuff\n# Calculate the VIFs using the vif() function\nvif_values2 &lt;- vif(model)\n\n# Print the VIFs\nprint(vif_values2)\n\n\n                   GVIF Df GVIF^(1/(2*Df))\nEducation      2.908455  1        1.705419\nFood           3.217499  1        1.793739\nRecreation     2.026892  1        1.423690\nShelter        4.497444  1        2.120718\nWage           1.751992  1        1.323628\nRentAdjmt      1.082507  1        1.040436\nhouseholdSize  5.687538  2        1.544298\nage            1.013009  1        1.006484\neducationLevel 2.043000  3        1.126449\ninterestGroup  1.121875  9        1.006409\n\n\n\n\n\n\nShow me the good stuff\n# create plot\nmodel1V &lt;- lm(joviality ~ Education + Food + Recreation + \n              Shelter + Wage + RentAdjmt + householdSize + haveKids + age + educationLevel + interestGroup, data = Joined_data)\n\ncheck_c &lt;- check_collinearity(model1V)\nplot(check_c)\n\n\n\n\n\nShow me the good stuff\n# rotate x-axis labels\npar(las=2) #doesn't work to rotate labels\n\n\n\n\n\n\nBased on the collinearity checks, we observe that the highest scoring variable (householdSize) scored at 5.69, suggesting moderate correlation between householdSize and joviality, which means they may share some common variance but are not highly correlated to cause multicollinearity."
  },
  {
    "objectID": "take-home_Ex/take-home_Ex01/take-home_Ex01.html#financial-variables",
    "href": "take-home_Ex/take-home_Ex01/take-home_Ex01.html#financial-variables",
    "title": "Take-Home Exercise 1",
    "section": "5.2 Financial Variables",
    "text": "5.2 Financial Variables\n\nCut Wage and Expense Proportion into Categories based on Quantiles\nFor insights involving Financial Variables, the participants will be grouped by income level, as well as the proportion of their income (Wage) being spent (Expense_Prop).\n\n\nShow me the good stuff\ndescribe(Joined_data$Wage) #to assess best cut points for income levels\n\n\nJoined_data$Wage \n       n  missing distinct     Info     Mean      Gmd      .05      .10 \n    1011        0      984        1     4044     2162     1947     2169 \n     .25      .50      .75      .90      .95 \n    2551     3388     4781     6574     8428 \n\nlowest : 1882    1888.5  1892.83 1896.17 1896.5 \nhighest: 14493.7 14681.2 14912.3 17619.9 17622.8\n\n\n\n\nShow me the good stuff\ndescribe(Joined_data$Expense_Prop) #to assess best cut points for income levels\n\n\nJoined_data$Expense_Prop \n       n  missing distinct     Info     Mean      Gmd      .05      .10 \n    1011        0     1011        1    36.54    26.32    2.196    5.549 \n     .25      .50      .75      .90      .95 \n  18.854   33.714   53.571   69.468   76.885 \n\nlowest : 1.19863 1.21166 1.23352 1.45849 1.45884\nhighest: 89.507  90.5418 91.4664 94.9011 96.6968\n\n\n\nBased on the distribution described above, the cut points values matching 25th, 50th and 90th percentile are used to group participants by income level and expense proportion:\nBottom 25th Percentile -&gt; Low Income 26th to 50th Percentile -&gt; Low-Middle Income 50th to 90th Percentile -&gt; Middle-High Income Top 10th Percentile -&gt; High Income\nBottom 25th Percentile -&gt; Low Proportion 26th to 50th Percentile -&gt; Low-Middle Proportion 50th to 90th Percentile -&gt; Middle-High Proportion Top 10th Percentile -&gt; High Proportion\n\n\n\n5.2.1 Grouping Participants by Income Levels\n\nCodeDistribution Barchart\n\n\n\n\nShow me the good stuff\n# Define the breaks for the three bins\nbreaks &lt;- c(0, 2551, 3388, 6574, Inf)\n\n# Bin the Wage variable into three categories using cut()\nincome_levels &lt;- cut(Joined_data$Wage, breaks, labels = c(\"Low\", \"Low-Middle\", \"Middle-High\", \"High\"))\n\n# Add the income levels as a new column in the dataset\nJoined_data$Income_Level &lt;- income_levels\n\n\n\n\n\n\nShow me the good stuff\n# Barchart of Income Level\ndem_incomelvl&lt;- ggplot(Joined_data, aes(x = Income_Level, fill = Income_Level)) +\n            geom_bar() +\n            labs(title = \"High Distribution of \\nParticipants in Middle-High Income Level\", #&lt; Linebreak added \n                  x = \"Income Level\",\n                  y = NULL) +\n            geom_text(stat = \"count\",\n                      aes(label = after_stat(count)),\n                      vjust = -1) +\n            ylim(0,500) + \n            theme(text = element_text(size = 12))\n\ndem_incomelvl\n\n\n\n\n\n\n\n\n\n\n5.2.2 Grouping Participants by Expense Proportion Category\n\nCodeDistribution Barchart\n\n\n\n\nShow me the good stuff\n# Define the breaks for the three bins\nbreaks &lt;- c(0, 18.854, 33.714, 69.468, Inf)\n\n# Bin the Wage variable into three categories using cut()\nExpense_PropC &lt;- cut(Joined_data$Expense_Prop, breaks, labels = c(\"Low\", \"Low-Middle\", \"Middle-High\", \"High\"))\n\n# Add the income levels as a new column in the dataset\nJoined_data$Expense_PropCat &lt;- Expense_PropC\n\n\n\n\n\n\nShow me the good stuff\n# Barchart of Income Level\ndem_Exp_PropC&lt;- ggplot(Joined_data, aes(x = Expense_PropCat, fill = Expense_PropCat)) +\n            geom_bar() +\n            labs(title = \"High Distribution of \\nParticipants in Middle-High Expense Proportion Cat\", #&lt; Linebreak added \n                  x = \"Expense Prop Cat\",\n                  y = NULL) +\n            geom_text(stat = \"count\",\n                      aes(label = after_stat(count)),\n                      vjust = -1) +\n            ylim(0,500) + \n            theme(text = element_text(size = 12))\n\ndem_Exp_PropC"
  },
  {
    "objectID": "take-home_Ex/take-home_Ex01/take-home_Ex01.html#association-testing-chi-squared-test",
    "href": "take-home_Ex/take-home_Ex01/take-home_Ex01.html#association-testing-chi-squared-test",
    "title": "Take-Home Exercise 1",
    "section": "5.3 Association Testing (Chi-Squared Test)",
    "text": "5.3 Association Testing (Chi-Squared Test)\n\nOf the variables tested, only Education Level is significantly associated with Expense Proportion Category (p &lt;0.05).\nWe therefore reject the null hypothesis that there is no association between the variables.\n\n\nChildrenEducation LevelsInterest GroupIncome Level\n\n\n\n\nShow me the good stuff\nset.seed(1234)\ntest_kids &lt;- ggbarstats(Joined_data,\n                          x = haveKids, y = Expense_PropCat, \n                        bf.message = FALSE)+\n            labs(title = \"Constant Proportion of Children Across Expense Proportion Categories\",\n                 x = \"Expense Proportion Category\") +\n            theme(plot.background = element_rect(fill=\"#F8F3E6\",colour=\"#F8F3E6\"))\ntest_kids\n\n\n\n\n\n\n\n\n\nShow me the good stuff\nset.seed(1234)\ntest_edlvl &lt;- ggbarstats(Joined_data,\n                          x = educationLevel, y = Expense_PropCat,\n                          bf.message = FALSE) +\n            labs(title = \"Large Proportion of Low Expense Proportion Category are Higher Educated\",\n                 x = \"Expense Proportion Category\") +\n            theme(plot.background = element_rect(fill=\"#F8F3E6\",colour=\"#F8F3E6\"))\ntest_edlvl\n\n\n\n\n\n\n\n\n\nShow me the good stuff\nset.seed(1234)\ntest_age &lt;- ggbarstats(Joined_data,\n                          x = ageGroup, y = Expense_PropCat,\n                          bf.message = FALSE) +\n            labs(title = \"Even Proportion of Expense Proportion Category Across Age Groups\",\n                 x = \"Expense Proportion Category\") +\n            theme(plot.background = element_rect(fill=\"#F8F3E6\",colour=\"#F8F3E6\"))\ntest_age\n\n\n\n\n\n\n\n\n\nShow me the good stuff\nset.seed(1234)\ntest_inclvl &lt;- ggbarstats(Joined_data,\n                          x = Income_Level, y = Expense_PropCat,\n                          bf.message = FALSE) +\n            labs(title = \"High Income Level Earners Exclusively Within Low and Low Middle \\n Expense Proportion Categories\",\n                 x = \"Expense Proportion Category\") +\n            theme(plot.background = element_rect(fill=\"#F8F3E6\",colour=\"#F8F3E6\"))\ntest_inclvl\n\n\n\n\n\n\n\n\n\n5.4 Comparison of mean Joviality Scores (ANOVA)\nA non-parametric Kruskal-Wallis one-way ANOVA test is conducted to determine if there is a significant difference in mean joviality score between the following factors. We test for the null hypothesis that there is no difference in mean between the variable factors, at confidence level of 0.05.\n\nIncome LevelsAge GroupsEducation LevelsHousehold SizeInterest Groups\n\n\n\n\nShow me the good stuff\nggbetweenstats(Joined_data, x= Income_Level, y= joviality) +\n  labs(x = \"Income Level\", y = \"Joviality Score\")\n\n\n\n\n\nAs p is less than 0.05, we reject the null hypothesis that there is no significant difference in means across income groups.\n\n\n\n\nShow me the good stuff\nggbetweenstats(Joined_data, x= ageGroup, y= joviality) +\n  labs(x = \"Age Group\", y = \"Joviality Score\")\n\n\n\n\n\nAn interesting insight can be gleaned from this comparison of means- as a significantly higher mean joviality score is observed in both Middle and Lower income groups, while the lowest mean score is observed in the High income group.\n\n\n\n\nShow me the good stuff\nggbetweenstats(Joined_data, x= educationLevel, y= joviality) +\n  labs(x = \"Education Level\", y = \"Joviality Score\")\n\n\n\n\n\nThrough comparison of mean joviality scores across education levels, the null hypothesis is that there is no difference between means. As p &gt; 0.05, we accept the null hypothesis.\n\n\n\n\nShow me the good stuff\nggbetweenstats(Joined_data, x= householdSize, y= joviality) +\n  labs(x = \"Household Size\", y = \"Joviality Score\")\n\n\n\n\n\n\n\n\n\nShow me the good stuff\nggbetweenstats(Joined_data, x = interestGroup, y = joviality) +\n  scale_color_manual(values = viridis(length(levels(Joined_data$interestGroup)))) +\n  labs(x = \"Interest Group\", y = \"Joviality Score\")\n\n\n\n\n\n\n\n\n\nInsights\n\nA significantly higher mean joviality score is observed in both Middle and Lower income groups, while the lowest mean score is observed in the High income group.\nP-value is &gt;0.05 for all variables except for Income Group, with marginal difference between means within the variables."
  },
  {
    "objectID": "take-home_Ex/take-home_Ex01/take-home_Ex01.html#wage-across-education-levels",
    "href": "take-home_Ex/take-home_Ex01/take-home_Ex01.html#wage-across-education-levels",
    "title": "Take-Home Exercise 1",
    "section": "5.5 Wage across Education Levels",
    "text": "5.5 Wage across Education Levels\n\nInteractive Density PlotRidgeplotRaincloud Plot (sans dotplot)\n\n\n\n\nShow me the good stuff\n# prepare the data\nJoined_data$education_group &lt;- factor(Joined_data$educationLevel, \n                                 levels = c(\"Low\", \"HighSchoolOrCollege\", \"Bachelors\", \"Graduate\"), \n                                 labels = c(\"Low education\", \"High School or College\", \"Bachelor's Degree\", \"Graduate Degree\"))\n\n\n# create the ggplot object\n\np &lt;- ggplot(Joined_data, aes(x = Wage, fill = education_group)) +\n  geom_density(alpha = 0.6) +\n  labs(x = \"Wage ($)\") +\n  labs(title = 'Wage Distribution across Education Levels', fill = 'Education Level') +\n  theme(axis.text.y = element_blank(), axis.title.y = element_blank())\n\n\n\n# convert to interactive plot\nggplotly(p)\n\n\n\n\n\n\n\n\n\n\nShow me the good stuff\np2 &lt;- ggplot(Joined_data, aes(y = education_group, x = Wage, fill = education_group)) +\n  geom_density_ridges(alpha = 0.6, scale = 0.9) +\n  scale_x_continuous(limits = c(0, 20000)) +\n  labs(x = \"Wage ($)\", y = \"\", fill = 'Education Level') +\n  labs(title = 'Wage Distribution across Education Levels') +\n  theme(axis.text.y = element_blank(), axis.title.y = element_blank())\n\np2\n\n\n\n\n\n\n\n\n\nShow me the good stuff\nJoined_data %&gt;%\n  ggplot(aes(x = education_group, y = Wage, fill = education_group)) +\n  stat_halfeye(adjust = 0.5, justification = -0.2, .width = 0, point_colour = NA) +\n  geom_boxplot(position = position_nudge(x = 0.3), width = 0.2, outlier.color = NA, alpha = 0.5) +\n  stat_dots(side = \"left\", justification = 1.1, binwidth = 0.25, size = 0.5) +\n  scale_fill_manual(values = c(\"#F8766D\", \"#00BFC4\", \"#FFC200\", \"#C77CFF\")) +\n  theme_minimal() +\n  theme(axis.text.y = element_blank(), axis.title.y = element_blank(), legend.position = \"top\") +\n  labs(title = 'Wage Distribution across Education Levels', x = \"Education Level\", y = \"\", fill = \"Education Level\") +\n  coord_flip() +\n  lims(y = c(0, 10000))\n\n\n\n\n\nFor Visualisation ease, values &gt; 10,000 for Wage have been obscured through limiting of the graph’s axis.\n\n\n\n\nIt is observed that the mean wage/income for participants is higher when they have been educated to a further extent, as observed in Visualisation, where the boxplot depicts increasing mean values as education level increases."
  },
  {
    "objectID": "take-home_Ex/take-home_Ex01/take-home_Ex01.html#have-kidsjoviality",
    "href": "take-home_Ex/take-home_Ex01/take-home_Ex01.html#have-kidsjoviality",
    "title": "Take-Home Exercise 1",
    "section": "5.6 Have Kids/Joviality",
    "text": "5.6 Have Kids/Joviality\n\n\nAnimated Plot Depicting Uncertainty\n\n\nShow me the good stuff\nggplot(data = Joined_data, \n       aes(x = factor(haveKids), y = joviality)) +\n  geom_point(position = position_jitter(\n    height = 0.3, width = 0.05), \n    size = 0.4, color = \"#0072B2\", alpha = 1/2) +\n  geom_hpline(data = sampler(25, group = haveKids), height = 0.6, color = \"#D55E00\") +\n  theme_bw() + \n  # `.draw` is a generated column indicating the sample draw\n  transition_states(.draw, 1, 3) +\n  labs(x = \"Have Children?\",\n       y = \"Joviality\",\n       title = \"Joviality by Having Children\")\n\n\n\n\n\n\n\nBoxplot Comparison\n\n\nShow me the good stuff\np &lt;- ggplot(Joined_data, aes(x = haveKids, y = joviality, fill = haveKids)) +\n  geom_boxplot() +\n  labs(x = \"Have Kids\",\n       y = \"Joviality\",\n       title = \"Comparison of Joviality Scores by whether Participant has Children\")\n\nggplotly(p, tooltip = c(\"y\", \"group_mean\", \"group_median\", \"lower\", \"upper\")) %&gt;%\n  layout(xaxis = list(title = \"Have Children\"),\n         yaxis = list(title = \"Joviality Score\"),\n         showlegend = FALSE)\n\n\n\n\n\n\n\n\n\nThe plot highlights the uncertainty associated with comparing joviality with the variable of having children, this is supported by the boxplot, which depicts relatively equal mean scores for joviality between participants with and without children. This indicates that there is no significant inclination observed between the two different states (having children or not).\n\n\n5.7 EPC/Have Kids/Education Level/Joviality\n\n\nShow me the good stuff\nExpP &lt;- ggplot(Joined_data, aes(x = Expense_PropCat, y = joviality, fill = Expense_PropCat)) + \n  geom_boxplot() + \n  facet_grid(haveKids~educationLevel) +\n  theme_bw() + \n  scale_y_continuous(breaks = scales::pretty_breaks(n=3)) + \n  theme(panel.spacing = unit(1, 'lines'),\n        axis.text.x = element_blank(),\n        axis.ticks.x = element_blank()) +\n  labs(x = \" \",\n       y = \"Joviality\",\n       fill = \"Expense Proportion \\n Category\")\n\n# Make into interactive diagram to show Statistics  \nggplotly(ExpP)\n\n\n\n\n\n\n\n\nParticipants who spent a high proportion of their income record the highest mean joviality score across all categories observed in the plot.\nHowever, in less educated groups (High School or College, Low Education), joviality scores are higher when participants spend a low proportion of their income."
  },
  {
    "objectID": "take-home_Ex/take-home_Ex01/take-home_Ex01.html#spending-streams-and-joviality",
    "href": "take-home_Ex/take-home_Ex01/take-home_Ex01.html#spending-streams-and-joviality",
    "title": "Take-Home Exercise 1",
    "section": "Spending Streams and Joviality",
    "text": "Spending Streams and Joviality\n\n\nShow me the good stuff\n# Calculate the correlation coefficients between joviality and the types of expenses\ncorrelation_matrix &lt;- cor(Joined_data[c(\"Shelter\", \"Education\", \"Food\", \"Recreation\", \"joviality\")])\n\n# Check the correlation matrix\ncorrelation_matrix\n\n\n                Shelter   Education       Food Recreation    joviality\nShelter     1.000000000 -0.09978659  0.6833510  0.6425394  0.008609283\nEducation  -0.099786592  1.00000000 -0.2411865 -0.1013488 -0.076523516\nFood        0.683351024 -0.24118654  1.0000000  0.6004242 -0.119628336\nRecreation  0.642539436 -0.10134878  0.6004242  1.0000000 -0.250878305\njoviality   0.008609283 -0.07652352 -0.1196283 -0.2508783  1.000000000\n\n\n\nCorrelation Analysis tells us that of all the types of expenditure, Recreation has the largest correlation coeffiecient (-0.25), but is still considered a weak negative association.\nThe results suggest that while slight shifts in joviality might be observed with reductions in Food and Recreation spending, it may not be significant enough to justify the town’s spendings."
  },
  {
    "objectID": "take-home_Ex/take-home_Ex01/take-home_Ex01.html#recommendations",
    "href": "take-home_Ex/take-home_Ex01/take-home_Ex01.html#recommendations",
    "title": "Take-Home Exercise 1",
    "section": "6 Recommendations",
    "text": "6 Recommendations\n\n\nBased on the analyses performed thus far, Income Level and Expense Proportion Category comparisons seem to draw the most difference in joviality scores.\n\nSpecifically, proportion of spending between education levels seems to suggest that despite the relatively higher mean income associated with better education, those who spend less actually feel less happy than those who have a high expense proportion.\nThis suggests there is a population of Graduates and High School/College Graduants who may benefit from new sources of expenditure. Despite weak positive correlation between Shelter spending and joviality, it is suggested that the town explore developing a small number of high quality residences for this group of people.\n\nThe town can also look into affordability schemes for middle to low income earners, so as to reduce the number of people within the Low-Middle and Middle-High Expense Proportion Categories."
  },
  {
    "objectID": "take-home_Ex/take-home_Ex01/take-home_Ex01.html#data-limitations-and-further-analysis",
    "href": "take-home_Ex/take-home_Ex01/take-home_Ex01.html#data-limitations-and-further-analysis",
    "title": "Take-Home Exercise 1",
    "section": "Data Limitations and Further Analysis",
    "text": "Data Limitations and Further Analysis\n\n\nSample selection method does not assure us of accurate representation, as there is no information on demographic distribution and survey methods.\nCorrelation does not equate causation. While there are indicative signs of some association between joviality scores and select variables, the data collected may not be holistic enough to completely capture the nuance of all factors involved. This can be mitigated through conducting several rounds of survey and to ensure the population is well-accounted for."
  },
  {
    "objectID": "take-home_Ex/take-home_Ex02/take-home_Ex02.html",
    "href": "take-home_Ex/take-home_Ex02/take-home_Ex02.html",
    "title": "Take-Home Exercise 2",
    "section": "",
    "text": "Show me the good stuff\npacman::p_load(igraph, tidygraph, ggraph, \n               visNetwork, lubridate, clock,\n               tidyverse, graphlayouts, jsonlite, patchwork, ggrepel, network)"
  },
  {
    "objectID": "take-home_Ex/take-home_Ex02/take-home_Ex02.html#reorganise-dataset",
    "href": "take-home_Ex/take-home_Ex02/take-home_Ex02.html#reorganise-dataset",
    "title": "Take-Home Exercise 2",
    "section": "3.1 Reorganise Dataset",
    "text": "3.1 Reorganise Dataset\n\n\nShow me the good stuff\nMC2_nodes &lt;- as_tibble(MC2$nodes) %&gt;%\n  select(id,shpcountry, rcvcountry) #using select function to reorganise into desired order of columns\n\nMC2_edges &lt;- as_tibble(MC2$links) %&gt;%\n  select(source, target, valueofgoods_omu, valueofgoodsusd, weightkg, hscode, arrivaldate)"
  },
  {
    "objectID": "take-home_Ex/take-home_Ex02/take-home_Ex02.html#remove-duplicate-rows",
    "href": "take-home_Ex/take-home_Ex02/take-home_Ex02.html#remove-duplicate-rows",
    "title": "Take-Home Exercise 2",
    "section": "3.2 Remove duplicate rows",
    "text": "3.2 Remove duplicate rows\n\n\nShow me the good stuff\nMC2_edges &lt;- MC2_edges %&gt;% distinct()\nMC2_nodes &lt;- MC2_nodes %&gt;% distinct()"
  },
  {
    "objectID": "take-home_Ex/take-home_Ex02/take-home_Ex02.html#rename-columns",
    "href": "take-home_Ex/take-home_Ex02/take-home_Ex02.html#rename-columns",
    "title": "Take-Home Exercise 2",
    "section": "3.2 Rename Columns",
    "text": "3.2 Rename Columns\n\n\nShow me the good stuff\n# rename columns\nMC2_edges &lt;- MC2_edges %&gt;%\n  rename('Value_OMU' = 'valueofgoods_omu', \n         'Value_USD' = 'valueofgoodsusd', \n         'Weight_KG' = 'weightkg', \n         'HS_Code' = 'hscode', \n         'Arrival_Date' = 'arrivaldate')"
  },
  {
    "objectID": "take-home_Ex/take-home_Ex02/take-home_Ex02.html#remove-rows-with-na-in-sourcetarget-columns",
    "href": "take-home_Ex/take-home_Ex02/take-home_Ex02.html#remove-rows-with-na-in-sourcetarget-columns",
    "title": "Take-Home Exercise 2",
    "section": "3.3 Remove Rows with NA in Source/Target Columns",
    "text": "3.3 Remove Rows with NA in Source/Target Columns\nAs we are examining links between source and target columns, we will first remove rows with missing values in these columns as they will not be contributing to the analysis.\n\n\nShow me the good stuff\nMC2_edges &lt;- MC2_edges[complete.cases(MC2_edges[, c(\"source\", \"target\")]), ]\n\ncolSums(is.na(MC2_edges))\n\n\n      source       target    Value_OMU    Value_USD    Weight_KG      HS_Code \n           0            0      5308326      2885831            0            0 \nArrival_Date \n           0 \n\n\n\nWhile there are missing (NA) fields in Value_OMU and Value_USD, the key columns being examined (source and target) do not possess any missing values."
  },
  {
    "objectID": "take-home_Ex/take-home_Ex02/take-home_Ex02.html#carp",
    "href": "take-home_Ex/take-home_Ex02/take-home_Ex02.html#carp",
    "title": "Take-Home Exercise 2",
    "section": "4.1 Carp",
    "text": "4.1 Carp\n\n\nShow me the good stuff\ncarp_nodes &lt;- as_tibble(carp$nodes) %&gt;%\n  select(id,shpcountry, rcvcountry) #using select function to reorganise into desired order of columns\n\ncarp_edges &lt;- as_tibble(carp$links) %&gt;%\n  select(source, target, valueofgoods_omu, weightkg, hscode, arrivaldate)\n\n# rename columns\ncarp_edges &lt;- carp_edges %&gt;%\n  rename('source' = 'source', \n         'target' = 'target', \n         'Value_OMU' = 'valueofgoods_omu', \n         'Weight_KG' = 'weightkg', \n         'HS_Code' = 'hscode', \n         'Arrival_Date' = 'arrivaldate')\n  \ncarp_edges_aggregated &lt;- carp_edges %&gt;%\n  group_by(source,target, HS_Code) %&gt;%\n  summarise(Value_OMU_Total = sum(Value_OMU, na.rm = TRUE),\n            Count = n(),\n            Average_OMU = mean(Value_OMU, na.rm = TRUE),\n            Total_Weight_KG = sum(Weight_KG, na.rm = TRUE),\n            Average_Weight_KG = mean(Weight_KG, na.rm = TRUE)) %&gt;%\n  ungroup()\n\n\n\nSummaryVisualisationMatchingJaccard Similarity Score\n\n\n\n\nShow me the good stuff\ncarp_nodes_extract &lt;- carp_edges_aggregated %&gt;%\n  select(source) %&gt;%\n  rename(id = source) %&gt;%\n  bind_rows(carp_edges_aggregated %&gt;%\n              select(target) %&gt;%\n              rename(id = target)) %&gt;%\n  distinct()\n\ncarp_graph &lt;- tbl_graph(nodes = carp_nodes_extract,\n                       edges = carp_edges_aggregated,\n                       directed = TRUE)\n\ncarp_graph\n\n\n# A tbl_graph: 245 nodes and 161 edges\n#\n# A directed multigraph with 90 components\n#\n# A tibble: 245 × 1\n  id                                              \n  &lt;chr&gt;                                           \n1 Adriatic Squid Limited Liability Company Current\n2 AquaBite Limited Liability Company Marine       \n3 Arunachal Pradesh s &                           \n4 Arunachal Pradesh s A/S Transport               \n5 Bahía del Sol SRL Solutions                     \n6 Baltic Sprat Corp Roe                           \n# ℹ 239 more rows\n#\n# A tibble: 161 × 8\n   from    to HS_Code Value_OMU_Total Count Average_OMU Total_Weight_KG\n  &lt;int&gt; &lt;int&gt;   &lt;int&gt;           &lt;dbl&gt; &lt;int&gt;       &lt;dbl&gt;           &lt;int&gt;\n1     1   138  840999               0     1         NaN            5510\n2     2   139  160419           63125     1       63125           20775\n3     3   140  950300               0     1         NaN            6150\n# ℹ 158 more rows\n# ℹ 1 more variable: Average_Weight_KG &lt;dbl&gt;\n\n\n\n\n\n\nShow me the good stuff\nnodes_dfcarp &lt;- carp_graph %&gt;%\n  activate(nodes) %&gt;%\n  as_tibble() %&gt;%\n  rename(label = id) %&gt;%\n  mutate(id=row_number()) %&gt;%\n  select(id, label)\n\nedges_dfcarp &lt;- carp_graph %&gt;%\n  activate(edges) %&gt;%\n  as.tibble()\n\nviscarp_graph &lt;- visNetwork(nodes = nodes_dfcarp, edges = edges_dfcarp) %&gt;%\n  visIgraphLayout(layout = \"layout_with_fr\") %&gt;%\n  visEdges(arrows = \"to\", color = list(color = \"blue\", highlight = \"red\")) %&gt;%\n  visNodes() %&gt;%\n  visOptions(highlightNearest = list(enabled = TRUE, degree = 2, hover = TRUE),\n             nodesIdSelection = TRUE)\n\n\nviscarp_graph\n\n\n\n\n\n\n\n\n\n\nShow me the good stuff\nmatched_carp &lt;- carp_edges_aggregated[\n  carp_edges_aggregated$source %in% MC2_edges$source &\n  carp_edges_aggregated$target %in% MC2_edges$target,\n]\n\n\nmcarp_nodes_extract &lt;- matched_carp %&gt;%\n  select(source) %&gt;%\n  rename(id = source) %&gt;%\n  bind_rows(carp_edges_aggregated %&gt;%\n              select(target) %&gt;%\n              rename(id = target)) %&gt;%\n  distinct()\n\nmcarp_graph &lt;- tbl_graph(nodes = mcarp_nodes_extract,\n                       edges = matched_carp,\n                       directed = TRUE)\n\n\nnodes_dfmcarp &lt;- mcarp_graph %&gt;%\n  activate(nodes) %&gt;%\n  as_tibble() %&gt;%\n  rename(label = id) %&gt;%\n  mutate(id=row_number()) %&gt;%\n  select(id, label)\n\nedges_dfmcarp &lt;- mcarp_graph %&gt;%\n  activate(edges) %&gt;%\n  as.tibble()\n\nvismcarp_graph &lt;- visNetwork(nodes = nodes_dfmcarp, edges = edges_dfmcarp) %&gt;%\n  visIgraphLayout(layout = \"layout_with_fr\") %&gt;%\n  visEdges(arrows = \"to\", color = list(color = \"blue\", highlight = \"red\")) %&gt;%\n  visNodes() %&gt;%\n  visOptions(highlightNearest = list(enabled = TRUE, degree = 2, hover = TRUE),\n             nodesIdSelection = TRUE)\n\n\nvismcarp_graph\n\n\n\n\n\n\n\n\n\n\nShow me the good stuff\n# Calculate the number of common edges\ncommon_edgescarp &lt;- intersect(E(carp_graph), E(mcarp_graph))\n\n# Calculate the Jaccard similarity coefficient\njaccard_similaritycarp &lt;- length(common_edgescarp) / (length(E(carp_graph)) + length(E(mcarp_graph)) - length(common_edgescarp))\n\n# Print the Jaccard similarity coefficient\nprint(jaccard_similaritycarp)\n\n\n[1] 0.9378882"
  },
  {
    "objectID": "take-home_Ex/take-home_Ex02/take-home_Ex02.html#chub-mackerel",
    "href": "take-home_Ex/take-home_Ex02/take-home_Ex02.html#chub-mackerel",
    "title": "Take-Home Exercise 2",
    "section": "4.2 Chub Mackerel",
    "text": "4.2 Chub Mackerel\n\n\nShow me the good stuff\ncmac_nodes &lt;- as_tibble(c_mac$nodes) %&gt;%\n  select(id,shpcountry, rcvcountry) #using select function to reorganise into desired order of columns\n\ncmac_edges &lt;- as_tibble(c_mac$links) %&gt;%\n  select(source, target, valueofgoods_omu, weightkg, hscode, arrivaldate)\n\n# rename columns\ncmac_edges &lt;- cmac_edges %&gt;%\n  rename('source' = 'source', \n         'target' = 'target', \n         'Value_OMU' = 'valueofgoods_omu', \n         'Weight_KG' = 'weightkg', \n         'HS_Code' = 'hscode', \n         'Arrival_Date' = 'arrivaldate')\n  \ncmac_edges_aggregated &lt;- cmac_edges %&gt;%\n  group_by(source,target, HS_Code) %&gt;%\n  summarise(Value_OMU_Total = sum(Value_OMU, na.rm = TRUE),\n            Count = n(),\n            Average_OMU = mean(Value_OMU, na.rm = TRUE),\n            Total_Weight_KG = sum(Weight_KG, na.rm = TRUE),\n            Average_Weight_KG = mean(Weight_KG, na.rm = TRUE)) %&gt;%\n  ungroup()\n\n\n\nSummaryVisualisationMatchingJaccard Similarity Score\n\n\n\n\nShow me the good stuff\ncmac_nodes_extract &lt;- cmac_edges_aggregated %&gt;%\n  select(source) %&gt;%\n  rename(id = source) %&gt;%\n  bind_rows(cmac_edges_aggregated %&gt;%\n              select(target) %&gt;%\n              rename(id = target)) %&gt;%\n  distinct()\n\ncmac_graph &lt;- tbl_graph(nodes = cmac_nodes_extract,\n                       edges = cmac_edges_aggregated,\n                       directed = TRUE)\n\ncmac_graph\n\n\n# A tbl_graph: 193 nodes and 128 edges\n#\n# A directed multigraph with 73 components\n#\n# A tibble: 193 × 1\n  id                               \n  &lt;chr&gt;                            \n1 1 Ltd. Liability Co Cargo        \n2 2 Limited Liability Company      \n3 Ancla de Oro Ltd. Corporation    \n4 Aqua Aura SE Marine life         \n5 Arunachal Pradesh s A/S Transport\n6 Arunachal Pradesh s Plc          \n# ℹ 187 more rows\n#\n# A tibble: 128 × 8\n   from    to HS_Code Value_OMU_Total Count Average_OMU Total_Weight_KG\n  &lt;int&gt; &lt;int&gt;   &lt;int&gt;           &lt;dbl&gt; &lt;int&gt;       &lt;dbl&gt;           &lt;int&gt;\n1     1   105   30617          452080     2      226040           39570\n2     2   106   30323          156660     6       26110          107640\n3     3   107   90412          260120     2      130060           40730\n# ℹ 125 more rows\n# ℹ 1 more variable: Average_Weight_KG &lt;dbl&gt;\n\n\n\n\n\n\nShow me the good stuff\ncmac_nodes_extract &lt;- cmac_edges_aggregated %&gt;%\n  select(source) %&gt;%\n  rename(id = source) %&gt;%\n  bind_rows(cmac_edges_aggregated %&gt;%\n              select(target) %&gt;%\n              rename(id = target)) %&gt;%\n  distinct()\n\ncmac_nodes &lt;- cmac_nodes_extract %&gt;%\n  mutate(id = as.character(id))  # Convert id column to character type\n\ncmac_edges &lt;- cmac_edges_aggregated %&gt;%\n  mutate(from = as.character(source),  # Convert source and target columns to character type\n         to = as.character(target))\n\nviscmac_graph &lt;- visNetwork(nodes = cmac_nodes, edges = cmac_edges) %&gt;%\n  visIgraphLayout(layout = \"layout_with_fr\") %&gt;%\n  visEdges(arrows = \"to\", color = list(color = \"blue\", highlight = \"red\")) %&gt;%\n  visNodes() %&gt;%\n  visOptions(highlightNearest = list(enabled = TRUE, degree = 2, hover = TRUE),\n             nodesIdSelection = TRUE)\n\nviscmac_graph\n\n\n\n\n\n\n\n\n\n\nShow me the good stuff\nmatched_cmac &lt;- cmac_edges_aggregated[\n  cmac_edges_aggregated$source %in% MC2_edges$source &\n  cmac_edges_aggregated$target %in% MC2_edges$target,\n]\n\nmcmac_nodes_extract &lt;- matched_cmac %&gt;%\n  select(source) %&gt;%\n  rename(id = source) %&gt;%\n  bind_rows(cmac_edges_aggregated %&gt;%\n              select(target) %&gt;%\n              rename(id = target)) %&gt;%\n  distinct()\n\nmcmac_graph &lt;- tbl_graph(nodes = mcmac_nodes_extract,\n                       edges = matched_cmac,\n                       directed = TRUE)\n\n\n\nmcmac_nodes &lt;- mcmac_nodes_extract %&gt;%\n  mutate(id = as.character(id))  # Convert id column to character type\n\nmcmac_edges &lt;- matched_cmac %&gt;%\n  mutate(from = as.character(source),  # Convert source and target columns to character type\n         to = as.character(target))\n\nvismcmac_graph &lt;- visNetwork(nodes = mcmac_nodes, edges = mcmac_edges) %&gt;%\n  visIgraphLayout(layout = \"layout_with_fr\") %&gt;%\n  visEdges(arrows = \"to\", color = list(color = \"blue\", highlight = \"red\")) %&gt;%\n  visNodes() %&gt;%\n  visOptions(highlightNearest = list(enabled = TRUE, degree = 2, hover = TRUE),\n             nodesIdSelection = TRUE)\n\nvismcmac_graph\n\n\n\n\n\n\n\n\n\n\nShow me the good stuff\n# Calculate the number of common edges\ncommon_edgescmac &lt;- intersect(E(cmac_graph), E(mcmac_graph))\n\n# Calculate the Jaccard similarity coefficient\njaccard_similaritycmac &lt;- length(common_edgescmac) / (length(E(cmac_graph)) + length(E(mcmac_graph)) - length(common_edgescmac))\n\n# Print the Jaccard similarity coefficient\nprint(jaccard_similaritycmac)\n\n\n[1] 0.8984375"
  },
  {
    "objectID": "take-home_Ex/take-home_Ex02/take-home_Ex02.html#cod",
    "href": "take-home_Ex/take-home_Ex02/take-home_Ex02.html#cod",
    "title": "Take-Home Exercise 2",
    "section": "4.3 Cod",
    "text": "4.3 Cod\n\n\nShow me the good stuff\ncod_nodes &lt;- as_tibble(cod$nodes) %&gt;%\n  select(id,shpcountry, rcvcountry) #using select function to reorganise into desired order of columns\n\ncod_edges &lt;- as_tibble(cod$links) %&gt;%\n  select(source, target, valueofgoods_omu, weightkg, hscode, arrivaldate)\n\n# rename columns\ncod_edges &lt;- cod_edges %&gt;%\n  rename('source' = 'source', \n         'target' = 'target', \n         'Value_OMU' = 'valueofgoods_omu', \n         'Weight_KG' = 'weightkg', \n         'HS_Code' = 'hscode', \n         'Arrival_Date' = 'arrivaldate')\n \ncod_edges_aggregated &lt;- cod_edges %&gt;%\n  group_by(source,target, HS_Code) %&gt;%\n  summarise(Value_OMU_Total = sum(Value_OMU, na.rm = TRUE),\n            Count = n(),\n            Average_OMU = mean(Value_OMU, na.rm = TRUE),\n            Total_Weight_KG = sum(Weight_KG, na.rm = TRUE),\n            Average_Weight_KG = mean(Weight_KG, na.rm = TRUE)) %&gt;%\n  ungroup()\n\n\n\nSummaryVisualisationMatchingJaccard Similarity Score\n\n\n\n\nShow me the good stuff\ncod_nodes_extract &lt;- cod_edges_aggregated %&gt;%\n  select(source) %&gt;%\n  rename(id = source) %&gt;%\n  bind_rows(cod_edges_aggregated %&gt;%\n              select(target) %&gt;%\n              rename(id = target)) %&gt;%\n  distinct()\n\ncod_graph &lt;- tbl_graph(nodes = cod_nodes_extract,\n                       edges = cod_edges_aggregated,\n                       directed = TRUE)\n\ncod_graph\n\n\n# A tbl_graph: 6 nodes and 3 edges\n#\n# A rooted forest with 3 trees\n#\n# A tibble: 6 × 1\n  id                                             \n  &lt;chr&gt;                                          \n1 Kariba Dam   Ges.m.b.H. Delivery               \n2 Norwegian Haddock GmbH & Co. KG                \n3 Saltwater Surf Club Ltd. Liability Co Transport\n4 Oceanic Opportunities CJSC Marine              \n5 -53                                            \n6 Pao gan SE Seal                                \n#\n# A tibble: 3 × 8\n   from    to HS_Code Value_OMU_Total Count Average_OMU Total_Weight_KG\n  &lt;int&gt; &lt;int&gt;   &lt;int&gt;           &lt;dbl&gt; &lt;int&gt;       &lt;dbl&gt;           &lt;int&gt;\n1     1     4   30729         5331060    36     148085           474300\n2     2     5   30363        35302710   105     336216.         3462105\n3     3     6   30461         3460340    52      66545          1144780\n# ℹ 1 more variable: Average_Weight_KG &lt;dbl&gt;\n\n\n\n\n\n\nShow me the good stuff\nnodes_dfcod &lt;- cod_graph %&gt;%\n  activate(nodes) %&gt;%\n  as_tibble() %&gt;%\n  rename(label = id) %&gt;%\n  mutate(id=row_number()) %&gt;%\n  select(id, label)\n\nedges_dfcod &lt;- cod_graph %&gt;%\n  activate(edges) %&gt;%\n  as.tibble()\n\nviscod_graph &lt;- visNetwork(nodes = nodes_dfcod, edges = edges_dfcod) %&gt;%\n  visIgraphLayout(layout = \"layout_with_fr\") %&gt;%\n  visEdges(arrows = \"to\", color = list(color = \"blue\", highlight = \"red\")) %&gt;%\n  visNodes() %&gt;%\n  visOptions(highlightNearest = list(enabled = TRUE, degree = 2, hover = TRUE),\n             nodesIdSelection = TRUE)\n\n\nviscod_graph\n\n\n\n\n\n\n\n\n\n\nShow me the good stuff\nmatched_cod &lt;- cod_edges_aggregated[\n  cod_edges_aggregated$source %in% MC2_edges$source &\n  cod_edges_aggregated$target %in% MC2_edges$target,\n]\n\n# Remove rows with invalid vertex indices\nmatched_cod &lt;- matched_cod[!is.na(matched_cod$source) & !is.na(matched_cod$target),]\n\nmcod_nodes_extract &lt;- matched_cod %&gt;%\n  select(source) %&gt;%\n  rename(id = source) %&gt;%\n  bind_rows(matched_cod %&gt;%\n              select(target) %&gt;%\n              rename(id = target)) %&gt;%\n  distinct()\n\nmcod_graph &lt;- tbl_graph(nodes = mcod_nodes_extract,\n                        edges = matched_cod,\n                        directed = TRUE)\n\nnodes_dfmcod &lt;- mcod_graph %&gt;%\n  activate(nodes) %&gt;%\n  as_tibble() %&gt;%\n  rename(label = id) %&gt;%\n  mutate(id = as.character(row_number())) %&gt;%\n  select(id, label)\n\nedges_dfmcod &lt;- mcod_graph %&gt;%\n  activate(edges) %&gt;%\n  as_tibble()\n\nvismcod_graph &lt;- visNetwork(nodes = nodes_dfmcod, edges = edges_dfmcod) %&gt;%\n  visIgraphLayout(layout = \"layout_with_fr\") %&gt;%\n  visEdges(arrows = \"to\", color = list(color = \"blue\", highlight = \"red\")) %&gt;%\n  visNodes() %&gt;%\n  visOptions(highlightNearest = list(enabled = TRUE, degree = 2, hover = TRUE),\n             nodesIdSelection = TRUE)\n\nvismcod_graph\n\n\n\n\n\n\n\n\n\n\nShow me the good stuff\n# Calculate the number of common edges\ncommon_edgescod &lt;- intersect(E(cod_graph), E(mcod_graph))\n\n# Calculate the Jaccard similarity coefficient\njaccard_similaritycod &lt;- length(common_edgescod) / (length(E(cod_graph)) + length(E(mcod_graph)) - length(common_edgescod))\n\n# Print the Jaccard similarity coefficient\nprint(jaccard_similaritycod)\n\n\n[1] 0.6666667"
  },
  {
    "objectID": "take-home_Ex/take-home_Ex02/take-home_Ex02.html#catfish",
    "href": "take-home_Ex/take-home_Ex02/take-home_Ex02.html#catfish",
    "title": "Take-Home Exercise 2",
    "section": "4.4 Catfish",
    "text": "4.4 Catfish\n\n\nShow me the good stuff\ncatfish_nodes &lt;- as_tibble(catfish$nodes) %&gt;%\n  select(id,shpcountry, rcvcountry) #using select function to reorganise into desired order of columns\n\ncatfish_edges &lt;- as_tibble(catfish$links) %&gt;%\n  select(source, target, valueofgoods_omu, hscode, arrivaldate)\n\n# rename columns\ncatfish_edges &lt;- catfish_edges %&gt;%\n  rename('source' = 'source', \n         'target' = 'target', \n         'Value_OMU' = 'valueofgoods_omu', \n         'HS_Code' = 'hscode', \n         'Arrival_Date' = 'arrivaldate')\n\ncatfish_edges_aggregated &lt;- catfish_edges %&gt;%\n  group_by(source,target, HS_Code) %&gt;%\n  summarise(Value_OMU_Total = sum(Value_OMU, na.rm = TRUE),\n            Count = n(),\n            Average_OMU = mean(Value_OMU, na.rm = TRUE)) %&gt;%\n  ungroup()\n\n\n\nSummaryVisualisationMatchingJaccard Similarity Score\n\n\n\n\nShow me the good stuff\ncatfish_nodes_extract &lt;- catfish_edges_aggregated %&gt;%\n  select(source) %&gt;%\n  rename(id = source) %&gt;%\n  bind_rows(catfish_edges_aggregated %&gt;%\n              select(target) %&gt;%\n              rename(id = target)) %&gt;%\n  distinct()\n\ncatfish_graph &lt;- tbl_graph(nodes = catfish_nodes_extract,\n                       edges = catfish_edges_aggregated,\n                       directed = TRUE)\n\ncatfish_graph\n\n\n# A tbl_graph: 368 nodes and 265 edges\n#\n# A directed multigraph with 119 components\n#\n# A tibble: 368 × 1\n  id                                             \n  &lt;chr&gt;                                          \n1 9 Charter Boat  Plc Overseas                   \n2 Adriatic Catch Ltd. Liability Co Transportation\n3 Albertine Rift  LLC Line                       \n4 Ancla de Oro Ges.m.b.H.                        \n5 Andhra Pradesh   Sextant Oyj Forwading         \n6 Aqua Aura SE Marine life                       \n# ℹ 362 more rows\n#\n# A tibble: 265 × 6\n   from    to HS_Code Value_OMU_Total Count Average_OMU\n  &lt;int&gt; &lt;int&gt;   &lt;int&gt;           &lt;dbl&gt; &lt;int&gt;       &lt;dbl&gt;\n1     1   219   30461          158155     1      158155\n2     2   220   30617          198030     1      198030\n3     3   221  761699               0     1         NaN\n# ℹ 262 more rows\n\n\n\n\n\n\nShow me the good stuff\nnodes_dfcatfish &lt;- catfish_graph %&gt;%\n  activate(nodes) %&gt;%\n  as_tibble() %&gt;%\n  rename(label = id) %&gt;%\n  mutate(id=row_number()) %&gt;%\n  select(id, label)\n\nedges_dfcatfish &lt;- catfish_graph %&gt;%\n  activate(edges) %&gt;%\n  as.tibble()\n\nviscatfish_graph &lt;- visNetwork(nodes = nodes_dfcatfish, edges = edges_dfcatfish) %&gt;%\n  visIgraphLayout(layout = \"layout_with_fr\") %&gt;%\n  visEdges(arrows = \"to\", color = list(color = \"blue\", highlight = \"red\")) %&gt;%\n  visNodes() %&gt;%\n  visOptions(highlightNearest = list(enabled = TRUE, degree = 2, hover = TRUE),\n             nodesIdSelection = TRUE)\n\nviscatfish_graph\n\n\n\n\n\n\n\n\n\n\nShow me the good stuff\nmatched_catfish &lt;- catfish_edges_aggregated[\n  catfish_edges_aggregated$source %in% MC2_edges$source &\n  catfish_edges_aggregated$target %in% MC2_edges$target,\n]\n\n# Remove rows with invalid vertex indices\nmatched_catfish &lt;- matched_catfish[!is.na(matched_catfish$source) & !is.na(matched_catfish$target),]\n\nmcatfish_nodes_extract &lt;- matched_catfish %&gt;%\n  select(source) %&gt;%\n  rename(id = source) %&gt;%\n  bind_rows(matched_catfish %&gt;%\n              select(target) %&gt;%\n              rename(id = target)) %&gt;%\n  distinct()\n\nmcatfish_graph &lt;- tbl_graph(nodes = mcatfish_nodes_extract,\n                            edges = matched_catfish,\n                            directed = TRUE)\n\nnodes_dfmcatfish &lt;- mcatfish_graph %&gt;%\n  activate(nodes) %&gt;%\n  as_tibble() %&gt;%\n  rename(label = id) %&gt;%\n  mutate(id = as.character(row_number())) %&gt;%\n  select(id, label)\n\nedges_dfmcatfish &lt;- mcatfish_graph %&gt;%\n  activate(edges) %&gt;%\n  as_tibble()\n\nvismcatfish_graph &lt;- visNetwork(nodes = nodes_dfmcatfish, edges = edges_dfmcatfish) %&gt;%\n  visIgraphLayout(layout = \"layout_with_fr\") %&gt;%\n  visEdges(arrows = \"to\", color = list(color = \"blue\", highlight = \"red\")) %&gt;%\n  visNodes() %&gt;%\n  visOptions(highlightNearest = list(enabled = TRUE, degree = 2, hover = TRUE),\n             nodesIdSelection = TRUE)\n\nvismcatfish_graph\n\n\n\n\n\n\n\n\n\n\nShow me the good stuff\ncommon_edges_catfish &lt;- intersect(E(catfish_graph), E(mcatfish_graph))\n\n# Calculate the Jaccard similarity coefficient\njaccard_similarity_catfish &lt;- length(common_edges_catfish) / (length(E(catfish_graph)) + length(E(mcatfish_graph)) - length(common_edges_catfish))\n\n# Print the Jaccard similarity coefficient\nprint(jaccard_similarity_catfish)\n\n\n[1] 0.9660377"
  },
  {
    "objectID": "take-home_Ex/take-home_Ex02/take-home_Ex02.html#herring",
    "href": "take-home_Ex/take-home_Ex02/take-home_Ex02.html#herring",
    "title": "Take-Home Exercise 2",
    "section": "4.5 Herring",
    "text": "4.5 Herring\n\n\nShow me the good stuff\nherring_nodes &lt;- as_tibble(herring$nodes) %&gt;%\n  select(id,shpcountry, rcvcountry) #using select function to reorganise into desired order of columns\n\nherring_edges &lt;- as_tibble(herring$links) %&gt;%\n  select(source, target, valueofgoods_omu, weightkg, hscode, arrivaldate)\n\n# rename columns\nherring_edges &lt;- herring_edges %&gt;%\n  rename('source' = 'source', \n         'target' = 'target', \n         'Value_OMU' = 'valueofgoods_omu', \n         'Weight_KG' = 'weightkg', \n         'HS_Code' = 'hscode', \n         'Arrival_Date' = 'arrivaldate')\n  \nherring_edges_aggregated &lt;- herring_edges %&gt;%\n  group_by(source,target, HS_Code) %&gt;%\n  summarise(Value_OMU_Total = sum(Value_OMU, na.rm = TRUE),\n            Count = n(),\n            Average_OMU = mean(Value_OMU, na.rm = TRUE),\n            Total_Weight_KG = sum(Weight_KG, na.rm = TRUE),\n            Average_Weight_KG = mean(Weight_KG, na.rm = TRUE)) %&gt;%\n  ungroup()\n\n\n\nSummaryVisualise HerringMatching HerringJaccard Similarity Score\n\n\n\n\nShow me the good stuff\nherring_nodes_extract &lt;- herring_edges_aggregated %&gt;%\n  select(source) %&gt;%\n  rename(id = source) %&gt;%\n  bind_rows(herring_edges_aggregated %&gt;%\n              select(target) %&gt;%\n              rename(id = target)) %&gt;%\n  distinct()\n\nherring_graph &lt;- tbl_graph(nodes = herring_nodes_extract,\n                       edges = herring_edges_aggregated,\n                       directed = TRUE)\n\nherring_graph\n\n\n# A tbl_graph: 199 nodes and 141 edges\n#\n# A directed multigraph with 70 components\n#\n# A tibble: 199 × 1\n  id                                                \n  &lt;chr&gt;                                             \n1 Ancla del Este Plc Industrial                     \n2 Andhra Pradesh   Limited Liability Company Tilapia\n3 Anthony Limited Liability Company                 \n4 Atlantic Ocean Coast  _ Ges.m.b.H. Express        \n5 Bahía Azul Ltd Holdings                           \n6 Bahía del Sol ОАО                                 \n# ℹ 193 more rows\n#\n# A tibble: 141 × 8\n   from    to HS_Code Value_OMU_Total Count Average_OMU Total_Weight_KG\n  &lt;int&gt; &lt;int&gt;   &lt;int&gt;           &lt;dbl&gt; &lt;int&gt;       &lt;dbl&gt;           &lt;int&gt;\n1     1   106  940360               0     1         NaN            5300\n2     2   107  730719           39520     1       39520           16940\n3     3   108  200899           40305     1       40305           17360\n# ℹ 138 more rows\n# ℹ 1 more variable: Average_Weight_KG &lt;dbl&gt;\n\n\n\n\n\n\nShow me the good stuff\nnodes_dfherring &lt;- herring_graph %&gt;%\n  activate(nodes) %&gt;%\n  as_tibble() %&gt;%\n  rename(label = id) %&gt;%\n  mutate(id = row_number()) %&gt;%\n  select(id, label)\n\nedges_dfherring &lt;- herring_graph %&gt;%\n  activate(edges) %&gt;%\n  as_tibble()\n\nvisherring_graph &lt;- visNetwork(nodes = nodes_dfherring, edges = edges_dfherring) %&gt;%\n  visIgraphLayout(layout = \"layout_with_fr\") %&gt;%\n  visEdges(arrows = \"to\", color = list(color = \"blue\", highlight = \"red\")) %&gt;%\n  visNodes() %&gt;%\n  visOptions(highlightNearest = list(enabled = TRUE, degree = 2, hover = TRUE),\n             nodesIdSelection = TRUE)\n\nvisherring_graph\n\n\n\n\n\n\n\n\n\n\nShow me the good stuff\nmatched_herring &lt;- herring_edges_aggregated[\n  herring_edges_aggregated$source %in% MC2_edges$source &\n  herring_edges_aggregated$target %in% MC2_edges$target,\n]\n\n# Remove rows with invalid vertex indices\nmatched_herring &lt;- matched_herring[!is.na(matched_herring$source) & !is.na(matched_herring$target),]\n\nmherring_nodes_extract &lt;- matched_herring %&gt;%\n  select(source) %&gt;%\n  rename(id = source) %&gt;%\n  bind_rows(matched_herring %&gt;%\n              select(target) %&gt;%\n              rename(id = target)) %&gt;%\n  distinct()\n\nmherring_graph &lt;- tbl_graph(nodes = mherring_nodes_extract,\n                            edges = matched_herring,\n                            directed = TRUE)\n\nnodes_dfmherring &lt;- mherring_graph %&gt;%\n  activate(nodes) %&gt;%\n  as_tibble() %&gt;%\n  rename(label = id) %&gt;%\n  mutate(id = as.character(row_number())) %&gt;%\n  select(id, label)\n\nedges_dfmherring &lt;- mherring_graph %&gt;%\n  activate(edges) %&gt;%\n  as_tibble()\n\nvismherring_graph &lt;- visNetwork(nodes = nodes_dfmherring, edges = edges_dfmherring) %&gt;%\n  visIgraphLayout(layout = \"layout_with_fr\") %&gt;%\n  visEdges(arrows = \"to\", color = list(color = \"blue\", highlight = \"red\")) %&gt;%\n  visNodes() %&gt;%\n  visOptions(highlightNearest = list(enabled = TRUE, degree = 2, hover = TRUE),\n             nodesIdSelection = TRUE)\n\nvismherring_graph\n\n\n\n\n\n\n\n\n\n\nShow me the good stuff\ncommon_edges_herring &lt;- intersect(E(herring_graph), E(mherring_graph))\n\n# Calculate the Jaccard similarity coefficient\njaccard_similarity_herring &lt;- length(common_edges_herring) / (length(E(herring_graph)) + length(E(mherring_graph)) - length(common_edges_herring))\n\n# Print the Jaccard similarity coefficient\nprint(jaccard_similarity_herring)\n\n\n[1] 0.9361702"
  },
  {
    "objectID": "take-home_Ex/take-home_Ex02/take-home_Ex02.html#lichen",
    "href": "take-home_Ex/take-home_Ex02/take-home_Ex02.html#lichen",
    "title": "Take-Home Exercise 2",
    "section": "4.6 Lichen",
    "text": "4.6 Lichen\n\n\nShow me the good stuff\nlichen_node &lt;- as_tibble(lichen$nodes) %&gt;%\n  select(id,shpcountry, rcvcountry) #using select function to reorganise into desired order of columns\n\nlichen_edges &lt;- as_tibble(lichen$links) %&gt;%\n  select(source, target, valueofgoods_omu, weightkg, hscode, arrivaldate)\n\n# rename columns\nlichen_edges &lt;- lichen_edges %&gt;%\n  rename('source' = 'source', \n         'target' = 'target', \n         'Value_OMU' = 'valueofgoods_omu', \n         'Weight_KG' = 'weightkg', \n         'HS_Code' = 'hscode', \n         'Arrival_Date' = 'arrivaldate')\n \nlichen_edges_aggregated &lt;- lichen_edges %&gt;%\n  group_by(source,target, HS_Code) %&gt;%\n  summarise(Value_OMU_Total = sum(Value_OMU, na.rm = TRUE),\n            Count = n(),\n            Average_OMU = mean(Value_OMU, na.rm = TRUE),\n            Total_Weight_KG = sum(Weight_KG, na.rm = TRUE),\n            Average_Weight_KG = mean(Weight_KG, na.rm = TRUE)) %&gt;%\n  ungroup()\n\n\n\nSummaryVisualisationMatchingJaccard Similarity Score\n\n\n\n\nShow me the good stuff\nlichen_nodes_extract &lt;- lichen_edges_aggregated %&gt;%\n  select(source) %&gt;%\n  rename(id = source) %&gt;%\n  bind_rows(lichen_edges_aggregated %&gt;%\n              select(target) %&gt;%\n              rename(id = target)) %&gt;%\n  distinct()\n\nlichen_graph &lt;- tbl_graph(nodes = lichen_nodes_extract,\n                       edges = lichen_edges_aggregated,\n                       directed = TRUE)\n\nlichen_graph\n\n\n# A tbl_graph: 18 nodes and 19 edges\n#\n# A directed multigraph with 7 components\n#\n# A tibble: 18 × 1\n  id                               \n  &lt;chr&gt;                            \n1 \"Harbah Motorboat AG Shipping\"   \n2 \"Jammu Limited Liability Company\"\n3 \"Lake Nakuru  Co Freight \"       \n4 \"Mar del Norte OJSC\"             \n5 \"Ob River Coral AB Marine\"       \n6 \"Zambezi Delta  Inc Brothers\"    \n# ℹ 12 more rows\n#\n# A tibble: 19 × 8\n   from    to HS_Code Value_OMU_Total Count Average_OMU Total_Weight_KG\n  &lt;int&gt; &lt;int&gt;   &lt;int&gt;           &lt;dbl&gt; &lt;int&gt;       &lt;dbl&gt;           &lt;int&gt;\n1     1     8  845490               0    31         NaN          210955\n2     2     9  920590               0    14         NaN           39425\n3     2     9  920710               0     4         NaN            9740\n# ℹ 16 more rows\n# ℹ 1 more variable: Average_Weight_KG &lt;dbl&gt;\n\n\n\n\n\n\nShow me the good stuff\nnodes_dflichen &lt;- lichen_graph %&gt;%\n  activate(nodes) %&gt;%\n  as_tibble() %&gt;%\n  rename(label = id) %&gt;%\n  mutate(id=row_number()) %&gt;%\n  select(id, label)\n\nedges_dflichen &lt;- lichen_graph %&gt;%\n  activate(edges) %&gt;%\n  as.tibble()\n\nvislichen_graph &lt;- visNetwork(nodes = nodes_dflichen, edges = edges_dflichen) %&gt;%\n  visIgraphLayout(layout = \"layout_with_fr\") %&gt;%\n  visEdges(arrows = \"to\", color = list(color = \"blue\", highlight = \"red\")) %&gt;%\n  visNodes() %&gt;%\n  visOptions(highlightNearest = list(enabled = TRUE, degree = 2, hover = TRUE),\n             nodesIdSelection = TRUE)\n\nvislichen_graph\n\n\n\n\n\n\n\n\n\n\nShow me the good stuff\nmatched_lichen &lt;- lichen_edges_aggregated[\n  lichen_edges_aggregated$source %in% MC2_edges$source &\n  lichen_edges_aggregated$target %in% MC2_edges$target,\n]\n\n# Remove rows with invalid vertex indices\nmatched_lichen &lt;- matched_lichen[!is.na(matched_lichen$source) & !is.na(matched_lichen$target),]\n\nmlichen_nodes_extract &lt;- matched_lichen %&gt;%\n  select(source) %&gt;%\n  rename(id = source) %&gt;%\n  bind_rows(matched_lichen %&gt;%\n              select(target) %&gt;%\n              rename(id = target)) %&gt;%\n  distinct()\n\nmlichen_graph &lt;- tbl_graph(nodes = mlichen_nodes_extract,\n                            edges = matched_lichen,\n                            directed = TRUE)\n\nnodes_dfmlichen &lt;- mlichen_graph %&gt;%\n  activate(nodes) %&gt;%\n  as_tibble() %&gt;%\n  rename(label = id) %&gt;%\n  mutate(id = as.character(row_number())) %&gt;%\n  select(id, label)\n\nedges_dfmlichen &lt;- mlichen_graph %&gt;%\n  activate(edges) %&gt;%\n  as_tibble()\n\nvismlichen_graph &lt;- visNetwork(nodes = nodes_dfmlichen, edges = edges_dfmlichen) %&gt;%\n  visIgraphLayout(layout = \"layout_with_fr\") %&gt;%\n  visEdges(arrows = \"to\", color = list(color = \"blue\", highlight = \"red\")) %&gt;%\n  visNodes() %&gt;%\n  visOptions(highlightNearest = list(enabled = TRUE, degree = 2, hover = TRUE),\n             nodesIdSelection = TRUE)\n\nvismlichen_graph\n\n\n\n\n\n\n\n\n\n\nShow me the good stuff\ncommon_edges_lichen &lt;- intersect(E(lichen_graph), E(mlichen_graph))\n\n# Calculate the Jaccard similarity coefficient\njaccard_similarity_lichen &lt;- length(common_edges_lichen) / (length(E(lichen_graph)) + length(E(mlichen_graph)) - length(common_edges_lichen))\n\n# Print the Jaccard similarity coefficient\nprint(jaccard_similarity_lichen)\n\n\n[1] 1"
  },
  {
    "objectID": "take-home_Ex/take-home_Ex02/take-home_Ex02.html#mackerel",
    "href": "take-home_Ex/take-home_Ex02/take-home_Ex02.html#mackerel",
    "title": "Take-Home Exercise 2",
    "section": "4.7 Mackerel",
    "text": "4.7 Mackerel\n\n\nShow me the good stuff\nmac_nodes &lt;- as_tibble(mac$nodes) %&gt;%\n  select(id,shpcountry, rcvcountry) #using select function to reorganise into desired order of columns\n\nmac_edges &lt;- as_tibble(mac$links) %&gt;%\n  select(source, target, valueofgoods_omu, hscode, arrivaldate)\n\n# rename columns\nmac_edges &lt;- mac_edges %&gt;%\n  rename('source' = 'source', \n         'target' = 'target', \n         'Value_OMU' = 'valueofgoods_omu', \n         'HS_Code' = 'hscode', \n         'Arrival_Date' = 'arrivaldate')\n  \nmackerel_edges_aggregated &lt;- mac_edges %&gt;%\n  group_by(source,target, HS_Code) %&gt;%\n  summarise(Value_OMU_Total = sum(Value_OMU, na.rm = TRUE),\n            Count = n(),\n            Average_OMU = mean(Value_OMU, na.rm = TRUE)) %&gt;%\n  ungroup()\n\n\n\nSummaryVisualiseationMatchingJaccard Similarity Score\n\n\n\n\nShow me the good stuff\nmackerel_nodes_extract &lt;- mackerel_edges_aggregated %&gt;%\n  select(source) %&gt;%\n  rename(id = source) %&gt;%\n  bind_rows(mackerel_edges_aggregated %&gt;%\n              select(target) %&gt;%\n              rename(id = target)) %&gt;%\n  distinct()\n\nmackerel_graph &lt;- tbl_graph(nodes = mackerel_nodes_extract,\n                       edges = mackerel_edges_aggregated,\n                       directed = TRUE)\n\nmackerel_graph\n\n\n# A tbl_graph: 243 nodes and 188 edges\n#\n# A directed multigraph with 75 components\n#\n# A tibble: 243 × 1\n  id                                           \n  &lt;chr&gt;                                        \n1 Ancla Marina & Ltd. Liability Co Distribution\n2 Ancla de Oro Kga Import                      \n3 Anthony Limited Liability Company            \n4 Aquatic Adventures Ltd. Liability Co         \n5 Arunachal Pradesh s AS & Son's               \n6 Arunachal Pradesh s Ltd. Corporation Coast   \n# ℹ 237 more rows\n#\n# A tibble: 188 × 6\n   from    to HS_Code Value_OMU_Total Count Average_OMU\n  &lt;int&gt; &lt;int&gt;   &lt;int&gt;           &lt;dbl&gt; &lt;int&gt;       &lt;dbl&gt;\n1     1   144  848190          356190     1      356190\n2     1   145  190230           44310     1       44310\n3     2   146  262190               0     1         NaN\n# ℹ 185 more rows\n\n\n\n\n\n\nShow me the good stuff\nnodes_dfmackerel &lt;- mackerel_graph %&gt;%\n  activate(nodes) %&gt;%\n  as_tibble() %&gt;%\n  rename(label = id) %&gt;%\n  mutate(id=row_number()) %&gt;%\n  select(id, label)\n\nedges_dfmackerel &lt;- mackerel_graph %&gt;%\n  activate(edges) %&gt;%\n  as_tibble()\n\nvismackerel_graph &lt;- visNetwork(nodes = nodes_dfmackerel, edges = edges_dfmackerel) %&gt;%\n  visIgraphLayout(layout = \"layout_with_fr\") %&gt;%\n  visEdges(arrows = \"to\", color = list(color = \"blue\", highlight = \"red\")) %&gt;%\n  visNodes() %&gt;%\n  visOptions(highlightNearest = list(enabled = TRUE, degree = 2, hover = TRUE),\n             nodesIdSelection = TRUE)\n\nvismackerel_graph\n\n\n\n\n\n\n\n\n\n\nShow me the good stuff\nmatched_mackerel &lt;- mackerel_edges_aggregated[\n  mackerel_edges_aggregated$source %in% MC2_edges$source &\n  mackerel_edges_aggregated$target %in% MC2_edges$target,\n]\n\n# Remove rows with invalid vertex indices\nmatched_mackerel &lt;- matched_mackerel[!is.na(matched_mackerel$source) & !is.na(matched_mackerel$target),]\n\nmmackerel_nodes_extract &lt;- matched_mackerel %&gt;%\n  select(source) %&gt;%\n  rename(id = source) %&gt;%\n  bind_rows(matched_mackerel %&gt;%\n              select(target) %&gt;%\n              rename(id = target)) %&gt;%\n  distinct()\n\nmmackerel_graph &lt;- tbl_graph(nodes = mmackerel_nodes_extract,\n                            edges = matched_mackerel,\n                            directed = TRUE)\n\nnodes_dfmmackerel &lt;- mmackerel_graph %&gt;%\n  activate(nodes) %&gt;%\n  as_tibble() %&gt;%\n  rename(label = id) %&gt;%\n  mutate(id = as.character(row_number())) %&gt;%\n  select(id, label)\n\nedges_dfmmackerel &lt;- mmackerel_graph %&gt;%\n  activate(edges) %&gt;%\n  as_tibble()\n\nvismmackerel_graph &lt;- visNetwork(nodes = nodes_dfmmackerel, edges = edges_dfmmackerel) %&gt;%\n  visIgraphLayout(layout = \"layout_with_fr\") %&gt;%\n  visEdges(arrows = \"to\", color = list(color = \"blue\", highlight = \"red\")) %&gt;%\n  visNodes() %&gt;%\n  visOptions(highlightNearest = list(enabled = TRUE, degree = 2, hover = TRUE),\n             nodesIdSelection = TRUE)\n\nvismmackerel_graph\n\n\n\n\n\n\n\n\n\n\nShow me the good stuff\ncommon_edges_mackerel &lt;- intersect(E(mackerel_graph), E(mmackerel_graph))\n\n# Calculate the Jaccard similarity coefficient\njaccard_similarity_mackerel &lt;- length(common_edges_mackerel) / (length(E(mackerel_graph)) + length(E(mmackerel_graph)) - length(common_edges_mackerel))\n\n# Print the Jaccard similarity coefficient\nprint(jaccard_similarity_mackerel)\n\n\n[1] 0.9574468"
  },
  {
    "objectID": "take-home_Ex/take-home_Ex02/take-home_Ex02.html#pollock",
    "href": "take-home_Ex/take-home_Ex02/take-home_Ex02.html#pollock",
    "title": "Take-Home Exercise 2",
    "section": "4.8 Pollock",
    "text": "4.8 Pollock\n\n\nShow me the good stuff\npol_nodes &lt;- as_tibble(pol$nodes) %&gt;%\n  select(id,shpcountry, rcvcountry) #using select function to reorganise into desired order of columns\n\npol_edges &lt;- as_tibble(pol$links) %&gt;%\n  select(source, target, valueofgoods_omu, weightkg, hscode, arrivaldate)\n\n# rename columns\npol_edges &lt;- pol_edges %&gt;%\n  rename('source' = 'source', \n         'target' = 'target', \n         'Value_OMU' = 'valueofgoods_omu', \n         'Weight_KG' = 'weightkg', \n         'HS_Code' = 'hscode', \n         'Arrival_Date' = 'arrivaldate')\n\n\npollock_edges_aggregated &lt;- pol_edges %&gt;%\n  group_by(source,target, HS_Code) %&gt;%\n  summarise(Value_OMU_Total = sum(Value_OMU, na.rm = TRUE),\n            Count = n(),\n            Average_OMU = mean(Value_OMU, na.rm = TRUE),\n            Total_Weight_KG = sum(Weight_KG, na.rm = TRUE),\n            Average_Weight_KG = mean(Weight_KG, na.rm = TRUE)) %&gt;%\n  ungroup()\n\n\n\nSummaryVisualisationMatchingJaccard Similarity Score\n\n\n\n\nShow me the good stuff\npollock_nodes_extract &lt;- pollock_edges_aggregated %&gt;%\n  select(source) %&gt;%\n  rename(id = source) %&gt;%\n  bind_rows(pollock_edges_aggregated %&gt;%\n              select(target) %&gt;%\n              rename(id = target)) %&gt;%\n  distinct()\n\npollock_graph &lt;- tbl_graph(nodes = pollock_nodes_extract,\n                       edges = pollock_edges_aggregated,\n                       directed = TRUE)\n\npollock_graph\n\n\n# A tbl_graph: 110 nodes and 76 edges\n#\n# A directed multigraph with 44 components\n#\n# A tibble: 110 × 1\n  id                                   \n  &lt;chr&gt;                                \n1 \"Ancla de Oro Kga Import\"            \n2 \"Asiotr Green  SE Marine sanctuary\"  \n3 \"Barents Sea  GmbH Cargo \"           \n4 \"Belgian Scallop Harbor ОАО Freight \"\n5 \"Blue Nile  OJSC Logistics\"          \n6 \"Blue Water Ventures NV\"             \n# ℹ 104 more rows\n#\n# A tibble: 76 × 8\n   from    to HS_Code Value_OMU_Total Count Average_OMU Total_Weight_KG\n  &lt;int&gt; &lt;int&gt;   &lt;int&gt;           &lt;dbl&gt; &lt;int&gt;       &lt;dbl&gt;           &lt;int&gt;\n1     1    60  262190               0     1         NaN           20710\n2     2    61  390210           27410     1       27410           21010\n3     3    62  841830               0     1         NaN            7780\n# ℹ 73 more rows\n# ℹ 1 more variable: Average_Weight_KG &lt;dbl&gt;\n\n\n\n\n\n\nShow me the good stuff\nnodes_dfpollock &lt;- pollock_graph %&gt;%\n  activate(nodes) %&gt;%\n  as_tibble() %&gt;%\n  rename(label = id) %&gt;%\n  mutate(id=row_number()) %&gt;%\n  select(id, label)\n\nedges_dfpollock &lt;- pollock_graph %&gt;%\n  activate(edges) %&gt;%\n  as_tibble()\n\nvispollock_graph &lt;- visNetwork(nodes = nodes_dfpollock, edges = edges_dfpollock) %&gt;%\n  visIgraphLayout(layout = \"layout_with_fr\") %&gt;%\n  visEdges(arrows = \"to\", color = list(color = \"blue\", highlight = \"red\")) %&gt;%\n  visNodes() %&gt;%\n  visOptions(highlightNearest = list(enabled = TRUE, degree = 2, hover = TRUE),\n             nodesIdSelection = TRUE)\n\nvispollock_graph\n\n\n\n\n\n\n\n\n\n\nShow me the good stuff\nmatched_pollock &lt;- pollock_edges_aggregated[\n  pollock_edges_aggregated$source %in% MC2_edges$source &\n  pollock_edges_aggregated$target %in% MC2_edges$target,\n]\n\n# Remove rows with invalid vertex indices\nmatched_pollock &lt;- matched_pollock[!is.na(matched_pollock$source) & !is.na(matched_pollock$target),]\n\nmpollock_nodes_extract &lt;- matched_pollock %&gt;%\n  select(source) %&gt;%\n  rename(id = source) %&gt;%\n  bind_rows(matched_pollock %&gt;%\n              select(target) %&gt;%\n              rename(id = target)) %&gt;%\n  distinct()\n\nmpollock_graph &lt;- tbl_graph(nodes = mpollock_nodes_extract,\n                            edges = matched_pollock,\n                            directed = TRUE)\n\nnodes_dfmpollock &lt;- mpollock_graph %&gt;%\n  activate(nodes) %&gt;%\n  as_tibble() %&gt;%\n  rename(label = id) %&gt;%\n  mutate(id = as.character(row_number())) %&gt;%\n  select(id, label)\n\nedges_dfmpollock &lt;- mpollock_graph %&gt;%\n  activate(edges) %&gt;%\n  as_tibble()\n\nvismpollock_graph &lt;- visNetwork(nodes = nodes_dfmpollock, edges = edges_dfmpollock) %&gt;%\n  visIgraphLayout(layout = \"layout_with_fr\") %&gt;%\n  visEdges(arrows = \"to\", color = list(color = \"blue\", highlight = \"red\")) %&gt;%\n  visNodes() %&gt;%\n  visOptions(highlightNearest = list(enabled = TRUE, degree = 2, hover = TRUE),\n             nodesIdSelection = TRUE)\n\nvismpollock_graph\n\n\n\n\n\n\n\n\n\n\nShow me the good stuff\ncommon_edges_pollock &lt;- intersect(E(pollock_graph), E(mpollock_graph))\n\n# Calculate the Jaccard similarity coefficient\njaccard_similarity_pollock &lt;- length(common_edges_pollock) / (length(E(pollock_graph)) + length(E(mpollock_graph)) - length(common_edges_pollock))\n\n# Print the Jaccard similarity coefficient\nprint(jaccard_similarity_pollock)\n\n\n[1] 0.9078947"
  },
  {
    "objectID": "take-home_Ex/take-home_Ex02/take-home_Ex02.html#sal-wgl",
    "href": "take-home_Ex/take-home_Ex02/take-home_Ex02.html#sal-wgl",
    "title": "Take-Home Exercise 2",
    "section": "4.9 Sal WGL",
    "text": "4.9 Sal WGL\n\n\nShow me the good stuff\nsalw_nodes &lt;- as_tibble(sal_wgl$nodes) %&gt;%\n  select(id,shpcountry, rcvcountry) #using select function to reorganise into desired order of columns\n\nsalw_edges &lt;- as_tibble(sal_wgl$links) %&gt;%\n  select(source, target, valueofgoods_omu, weightkg, hscode, arrivaldate)\n\n# rename columns\nsalw_edges &lt;- salw_edges %&gt;%\n  rename('source' = 'source', \n         'target' = 'target', \n         'Value_OMU' = 'valueofgoods_omu', \n         'Weight_KG' = 'weightkg', \n         'HS_Code' = 'hscode', \n         'Arrival_Date' = 'arrivaldate')\n  \nsalmonwgl_edges_aggregated &lt;- salw_edges %&gt;%\n  group_by(source,target, HS_Code) %&gt;%\n  summarise(Value_OMU_Total = sum(Value_OMU, na.rm = TRUE),\n            Count = n(),\n            Average_OMU = mean(Value_OMU, na.rm = TRUE),\n            Total_Weight_KG = sum(Weight_KG, na.rm = TRUE),\n            Average_Weight_KG = mean(Weight_KG, na.rm = TRUE)) %&gt;%\n  ungroup()\n\n\n\nSummaryVisualisationMatchingJaccard Similarity Score\n\n\n\n\nShow me the good stuff\nsalmonwgl_nodes_extract &lt;- salmonwgl_edges_aggregated %&gt;%\n  select(source) %&gt;%\n  rename(id = source) %&gt;%\n  bind_rows(salmonwgl_edges_aggregated %&gt;%\n              select(target) %&gt;%\n              rename(id = target)) %&gt;%\n  distinct()\n\nsalmonwgl_graph &lt;- tbl_graph(nodes = salmonwgl_nodes_extract,\n                       edges = salmonwgl_edges_aggregated,\n                       directed = TRUE)\n\nsalmonwgl_graph\n\n\n# A tbl_graph: 120 nodes and 87 edges\n#\n# A directed acyclic multigraph with 39 components\n#\n# A tibble: 120 × 1\n  id                                    \n  &lt;chr&gt;                                 \n1 2 Limited Liability Company           \n2 Agua Limited Liability Company Transit\n3 Ancla del Mar Marine ecology          \n4 Asiotr Green  SE Marine sanctuary     \n5 Bujagali Falls  Oyj Marine            \n6 Caspian Sea   Company Seafarer        \n# ℹ 114 more rows\n#\n# A tibble: 87 × 8\n   from    to HS_Code Value_OMU_Total Count Average_OMU Total_Weight_KG\n  &lt;int&gt; &lt;int&gt;   &lt;int&gt;           &lt;dbl&gt; &lt;int&gt;       &lt;dbl&gt;           &lt;int&gt;\n1     1    67   30323           36125     1       36125           26055\n2     2    68  440890               0     3         NaN          104730\n3     3    69  160529           87670     1       87670           18000\n# ℹ 84 more rows\n# ℹ 1 more variable: Average_Weight_KG &lt;dbl&gt;\n\n\n\n\n\n\nShow me the good stuff\nnodes_dfsalmonwgl &lt;- salmonwgl_graph %&gt;%\n  activate(nodes) %&gt;%\n  as_tibble() %&gt;%\n  rename(label = id) %&gt;%\n  mutate(id=row_number()) %&gt;%\n  select(id, label)\n\nedges_dfsalmonwgl &lt;- salmonwgl_graph %&gt;%\n  activate(edges) %&gt;%\n  as_tibble()\n\nvissalmonwgl_graph &lt;- visNetwork(nodes = nodes_dfsalmonwgl, edges = edges_dfsalmonwgl) %&gt;%\n  visIgraphLayout(layout = \"layout_with_fr\") %&gt;%\n  visEdges(arrows = \"to\", color = list(color = \"blue\", highlight = \"red\")) %&gt;%\n  visNodes() %&gt;%\n  visOptions(highlightNearest = list(enabled = TRUE, degree = 2, hover = TRUE),\n             nodesIdSelection = TRUE)\n\nvissalmonwgl_graph\n\n\n\n\n\n\n\n\n\n\nShow me the good stuff\nmatched_salmonwgl &lt;- salmonwgl_edges_aggregated[\n  salmonwgl_edges_aggregated$source %in% MC2_edges$source &\n  salmonwgl_edges_aggregated$target %in% MC2_edges$target,\n]\n\n# Remove rows with invalid vertex indices\nmatched_salmonwgl &lt;- matched_salmonwgl[!is.na(matched_salmonwgl$source) & !is.na(matched_salmonwgl$target),]\n\nmsalmonwgl_nodes_extract &lt;- matched_salmonwgl %&gt;%\n  select(source) %&gt;%\n  rename(id = source) %&gt;%\n  bind_rows(matched_salmonwgl %&gt;%\n              select(target) %&gt;%\n              rename(id = target)) %&gt;%\n  distinct()\n\nmsalmonwgl_graph &lt;- tbl_graph(nodes = msalmonwgl_nodes_extract,\n                            edges = matched_salmonwgl,\n                            directed = TRUE)\n\nnodes_dfmsalmonwgl &lt;- msalmonwgl_graph %&gt;%\n  activate(nodes) %&gt;%\n  as_tibble() %&gt;%\n  rename(label = id) %&gt;%\n  mutate(id = as.character(row_number())) %&gt;%\n  select(id, label)\n\nedges_dfmsalmonwgl &lt;- msalmonwgl_graph %&gt;%\n  activate(edges) %&gt;%\n  as_tibble()\n\nvismsalmonwgl_graph &lt;- visNetwork(nodes = nodes_dfmsalmonwgl, edges = edges_dfmsalmonwgl) %&gt;%\n  visIgraphLayout(layout = \"layout_with_fr\") %&gt;%\n  visEdges(arrows = \"to\", color = list(color = \"blue\", highlight = \"red\")) %&gt;%\n  visNodes() %&gt;%\n  visOptions(highlightNearest = list(enabled = TRUE, degree = 2, hover = TRUE),\n             nodesIdSelection = TRUE)\n\nvismsalmonwgl_graph\n\n\n\n\n\n\n\n\n\n\nShow me the good stuff\ncommon_edges_salmonwgl &lt;- intersect(E(salmonwgl_graph), E(msalmonwgl_graph))\n\n# Calculate the Jaccard similarity coefficient\njaccard_similarity_salmonwgl &lt;- length(common_edges_salmonwgl) / (length(E(salmonwgl_graph)) + length(E(msalmonwgl_graph)) - length(common_edges_salmonwgl))\n\n# Print the Jaccard similarity coefficient\nprint(jaccard_similarity_salmonwgl)\n\n\n[1] 0.9770115\n\n\n\n\n\n\n4.10 Salmon\n\n\nShow me the good stuff\nsalmon_nodes &lt;- as_tibble(salmon$nodes) %&gt;%\n  select(id,shpcountry, rcvcountry) #using select function to reorganise into desired order of columns\n\nsalmon_edges &lt;- as_tibble(salmon$links) %&gt;%\n  select(source, target, valueofgoods_omu, weightkg, hscode, arrivaldate)\n\n# rename columns\nsalmon_edges &lt;- salmon_edges %&gt;%\n  rename('source' = 'source', \n         'target' = 'target', \n         'Value_OMU' = 'valueofgoods_omu', \n         'Weight_KG' = 'weightkg', \n         'HS_Code' = 'hscode', \n         'Arrival_Date' = 'arrivaldate')\n  \n\nsalmon_edges_aggregated &lt;- salmon_edges %&gt;%\n  group_by(source,target, HS_Code) %&gt;%\n  summarise(Value_OMU_Total = sum(Value_OMU, na.rm = TRUE),\n            Count = n(),\n            Average_OMU = mean(Value_OMU, na.rm = TRUE),\n            Total_Weight_KG = sum(Weight_KG, na.rm = TRUE),\n            Average_Weight_KG = mean(Weight_KG, na.rm = TRUE)) %&gt;%\n  ungroup()\n\n\n\nSummaryVisualisationMatchingJaccard Similarity Score\n\n\n\n\nShow me the good stuff\nsalmon_nodes_extract &lt;- salmon_edges_aggregated %&gt;%\n  select(source) %&gt;%\n  rename(id = source) %&gt;%\n  bind_rows(salmon_edges_aggregated %&gt;%\n              select(target) %&gt;%\n              rename(id = target)) %&gt;%\n  distinct()\n\nsalmon_graph &lt;- tbl_graph(nodes = salmon_nodes_extract,\n                       edges = salmon_edges_aggregated,\n                       directed = TRUE)\n\nsalmon_graph\n\n\n# A tbl_graph: 8 nodes and 8 edges\n#\n# A directed acyclic multigraph with 2 components\n#\n# A tibble: 8 × 1\n  id                                       \n  &lt;chr&gt;                                    \n1 Kallianassa Ltd. Corporation Oceanography\n2 Samaka Chart ОАО Delivery                \n3 Coral Cove BV Delivery                   \n4 Marine Mermaids SRL United               \n5 Punjab s A/S Marine                      \n6 -2                                       \n# ℹ 2 more rows\n#\n# A tibble: 8 × 8\n   from    to HS_Code Value_OMU_Total Count Average_OMU Total_Weight_KG\n  &lt;int&gt; &lt;int&gt;   &lt;int&gt;           &lt;dbl&gt; &lt;int&gt;       &lt;dbl&gt;           &lt;int&gt;\n1     1     3  400821          240955    11       21905          131065\n2     1     4  392690               0     8         NaN           28480\n3     1     5  392113               0    14         NaN          102130\n# ℹ 5 more rows\n# ℹ 1 more variable: Average_Weight_KG &lt;dbl&gt;\n\n\n\n\n\n\nShow me the good stuff\nnodes_dfsalmon &lt;- salmon_graph %&gt;%\n  activate(nodes) %&gt;%\n  as_tibble() %&gt;%\n  rename(label = id) %&gt;%\n  mutate(id=row_number()) %&gt;%\n  select(id, label)\n\nedges_dfsalmon &lt;- salmon_graph %&gt;%\n  activate(edges) %&gt;%\n  as_tibble()\n\nvissalmon_graph &lt;- visNetwork(nodes = nodes_dfsalmon, edges = edges_dfsalmon) %&gt;%\n  visIgraphLayout(layout = \"layout_with_fr\") %&gt;%\n  visEdges(arrows = \"to\", color = list(color = \"blue\", highlight = \"red\")) %&gt;%\n  visNodes() %&gt;%\n  visOptions(highlightNearest = list(enabled = TRUE, degree = 2, hover = TRUE),\n             nodesIdSelection = TRUE)\n\nvissalmon_graph\n\n\n\n\n\n\n\n\n\n\nShow me the good stuff\nmatched_salmon &lt;- salmon_edges_aggregated[\n  salmon_edges_aggregated$source %in% MC2_edges$source &\n  salmon_edges_aggregated$target %in% MC2_edges$target,\n]\n\n# Remove rows with invalid vertex indices\nmatched_salmon &lt;- matched_salmon[!is.na(matched_salmon$source) & !is.na(matched_salmon$target),]\n\nmsalmon_nodes_extract &lt;- matched_salmon %&gt;%\n  select(source) %&gt;%\n  rename(id = source) %&gt;%\n  bind_rows(matched_salmon %&gt;%\n              select(target) %&gt;%\n              rename(id = target)) %&gt;%\n  distinct()\n\nmsalmon_graph &lt;- tbl_graph(nodes = msalmon_nodes_extract,\n                            edges = matched_salmon,\n                            directed = TRUE)\n\nnodes_dfmsalmon &lt;- msalmon_graph %&gt;%\n  activate(nodes) %&gt;%\n  as_tibble() %&gt;%\n  rename(label = id) %&gt;%\n  mutate(id = as.character(row_number())) %&gt;%\n  select(id, label)\n\nedges_dfmsalmon &lt;- msalmon_graph %&gt;%\n  activate(edges) %&gt;%\n  as_tibble()\n\nvismsalmon_graph &lt;- visNetwork(nodes = nodes_dfmsalmon, edges = edges_dfmsalmon) %&gt;%\n  visIgraphLayout(layout = \"layout_with_fr\") %&gt;%\n  visEdges(arrows = \"to\", color = list(color = \"blue\", highlight = \"red\")) %&gt;%\n  visNodes() %&gt;%\n  visOptions(highlightNearest = list(enabled = TRUE, degree = 2, hover = TRUE),\n             nodesIdSelection = TRUE)\n\nvismsalmon_graph\n\n\n\n\n\n\n\n\n\n\nShow me the good stuff\ncommon_edges_salmon &lt;- intersect(E(salmon_graph), E(msalmon_graph))\n\n# Calculate the Jaccard similarity coefficient\njaccard_similarity_salmon &lt;- length(common_edges_salmon) / (length(E(salmon_graph)) + length(E(msalmon_graph)) - length(common_edges_salmon))\n\n# Print the Jaccard similarity coefficient\nprint(jaccard_similarity_salmon)\n\n\n[1] 1"
  },
  {
    "objectID": "take-home_Ex/take-home_Ex02/take-home_Ex02.html#shark",
    "href": "take-home_Ex/take-home_Ex02/take-home_Ex02.html#shark",
    "title": "Take-Home Exercise 2",
    "section": "4.11 Shark",
    "text": "4.11 Shark\n\n\nShow me the good stuff\nshark_nodes &lt;- as_tibble(shark$nodes) %&gt;%\n  select(id,shpcountry, rcvcountry) #using select function to reorganise into desired order of columns\n\nshark_edges &lt;- as_tibble(shark$links) %&gt;%\n  select(source, target, valueofgoods_omu, weightkg, hscode, arrivaldate)\n\n# rename columns\nshark_edges &lt;- shark_edges %&gt;%\n  rename('source' = 'source', \n         'target' = 'target', \n         'Value_OMU' = 'valueofgoods_omu', \n         'Weight_KG' = 'weightkg', \n         'HS_Code' = 'hscode', \n         'Arrival_Date' = 'arrivaldate')\n\nshark_edges_aggregated &lt;- shark_edges %&gt;%\n  group_by(source,target, HS_Code) %&gt;%\n  summarise(Value_OMU_Total = sum(Value_OMU, na.rm = TRUE),\n            Count = n(),\n            Average_OMU = mean(Value_OMU, na.rm = TRUE),\n            Total_Weight_KG = sum(Weight_KG, na.rm = TRUE),\n            Average_Weight_KG = mean(Weight_KG, na.rm = TRUE)) %&gt;%\n  ungroup()  \n\n\n\nSummaryVisualise SharkMatching SharkJaccard Similarity Score\n\n\n\n\nShow me the good stuff\nshark_nodes_extract &lt;- shark_edges_aggregated %&gt;%\n  select(source) %&gt;%\n  rename(id = source) %&gt;%\n  bind_rows(shark_edges_aggregated %&gt;%\n              select(target) %&gt;%\n              rename(id = target)) %&gt;%\n  distinct()\n\nshark_graph &lt;- tbl_graph(nodes = shark_nodes_extract,\n                       edges = shark_edges_aggregated,\n                       directed = TRUE)\n\nshark_graph\n\n\n# A tbl_graph: 11 nodes and 15 edges\n#\n# A directed multigraph with 4 components\n#\n# A tibble: 11 × 1\n  id                                         \n  &lt;chr&gt;                                      \n1 \"Jammu Limited Liability Company\"          \n2 \"Lake Nakuru  Co Freight \"                 \n3 \"Mar del Norte OJSC\"                       \n4 \"Zambezi Delta  Inc Brothers\"              \n5 \"Coral del Sur Ltd. Corporation Investment\"\n6 \"ReefRider Foods Ltd. Corporation Family\"  \n# ℹ 5 more rows\n#\n# A tibble: 15 × 8\n   from    to HS_Code Value_OMU_Total Count Average_OMU Total_Weight_KG\n  &lt;int&gt; &lt;int&gt;   &lt;int&gt;           &lt;dbl&gt; &lt;int&gt;       &lt;dbl&gt;           &lt;int&gt;\n1     1     5  920590               0    64         NaN          171970\n2     1     5  920710               0    18         NaN           43830\n3     1     5  920790               0     5         NaN           35425\n# ℹ 12 more rows\n# ℹ 1 more variable: Average_Weight_KG &lt;dbl&gt;\n\n\n\n\n\n\nShow me the good stuff\nnodes_dfshark &lt;- shark_graph %&gt;%\n  activate(nodes) %&gt;%\n  as_tibble() %&gt;%\n  rename(label = id) %&gt;%\n  mutate(id=row_number()) %&gt;%\n  select(id, label)\n\nedges_dfshark &lt;- shark_graph %&gt;%\n  activate(edges) %&gt;%\n  as_tibble()\n\nvisshark_graph &lt;- visNetwork(nodes = nodes_dfshark, edges = edges_dfshark) %&gt;%\n  visIgraphLayout(layout = \"layout_with_fr\") %&gt;%\n  visEdges(arrows = \"to\", color = list(color = \"blue\", highlight = \"red\")) %&gt;%\n  visNodes() %&gt;%\n  visOptions(highlightNearest = list(enabled = TRUE, degree = 2, hover = TRUE),\n             nodesIdSelection = TRUE)\n\nvisshark_graph\n\n\n\n\n\n\n\n\n\n\nShow me the good stuff\nmatched_shark &lt;- shark_edges_aggregated[\n  shark_edges_aggregated$source %in% MC2_edges$source &\n  shark_edges_aggregated$target %in% MC2_edges$target,\n]\n\n# Remove rows with invalid vertex indices\nmatched_shark &lt;- matched_shark[!is.na(matched_shark$source) & !is.na(matched_shark$target),]\n\nmshark_nodes_extract &lt;- matched_shark %&gt;%\n  select(source) %&gt;%\n  rename(id = source) %&gt;%\n  bind_rows(matched_shark %&gt;%\n              select(target) %&gt;%\n              rename(id = target)) %&gt;%\n  distinct()\n\nmshark_graph &lt;- tbl_graph(nodes = mshark_nodes_extract,\n                            edges = matched_shark,\n                            directed = TRUE)\n\nnodes_dfmshark &lt;- mshark_graph %&gt;%\n  activate(nodes) %&gt;%\n  as_tibble() %&gt;%\n  rename(label = id) %&gt;%\n  mutate(id = as.character(row_number())) %&gt;%\n  select(id, label)\n\nedges_dfmshark &lt;- mshark_graph %&gt;%\n  activate(edges) %&gt;%\n  as_tibble()\n\nvismshark_graph &lt;- visNetwork(nodes = nodes_dfmshark, edges = edges_dfmshark) %&gt;%\n  visIgraphLayout(layout = \"layout_with_fr\") %&gt;%\n  visEdges(arrows = \"to\", color = list(color = \"blue\", highlight = \"red\")) %&gt;%\n  visNodes() %&gt;%\n  visOptions(highlightNearest = list(enabled = TRUE, degree = 2, hover = TRUE),\n             nodesIdSelection = TRUE)\n\nvismshark_graph\n\n\n\n\n\n\n\n\n\n\nShow me the good stuff\ncommon_edges_shark &lt;- intersect(E(shark_graph), E(mshark_graph))\n\n# Calculate the Jaccard similarity coefficient\njaccard_similarity_shark &lt;- length(common_edges_shark) / (length(E(shark_graph)) + length(E(mshark_graph)) - length(common_edges_shark))\n\n# Print the Jaccard similarity coefficient\nprint(jaccard_similarity_shark)\n\n\n[1] 1"
  },
  {
    "objectID": "take-home_Ex/take-home_Ex02/take-home_Ex02.html#tuna",
    "href": "take-home_Ex/take-home_Ex02/take-home_Ex02.html#tuna",
    "title": "Take-Home Exercise 2",
    "section": "4.12 Tuna",
    "text": "4.12 Tuna\n\n\nShow me the good stuff\ntuna_nodes &lt;- as_tibble(tuna$nodes) %&gt;%\n  select(id,shpcountry, rcvcountry) #using select function to reorganise into desired order of columns\n\ntuna_edges &lt;- as_tibble(tuna$links) %&gt;%\n  select(source, target, valueofgoods_omu, hscode, arrivaldate)\n\n# rename columns\ntuna_edges &lt;- tuna_edges %&gt;%\n  rename('source' = 'source', \n         'target' = 'target', \n         'Value_OMU' = 'valueofgoods_omu', \n         'HS_Code' = 'hscode', \n         'Arrival_Date' = 'arrivaldate')\n  \ntuna_edges_aggregated &lt;- tuna_edges %&gt;%\n  group_by(source,target, HS_Code) %&gt;%\n  summarise(Value_OMU_Total = sum(Value_OMU, na.rm = TRUE),\n            Count = n(),\n            Average_OMU = mean(Value_OMU, na.rm = TRUE)) %&gt;%\n  ungroup()\n\n\n\nSummaryVisualise TunaMatching TunaJaccard Similarity Score\n\n\n\n\nShow me the good stuff\ntuna_nodes_extract &lt;- tuna_edges_aggregated %&gt;%\n  select(source) %&gt;%\n  rename(id = source) %&gt;%\n  bind_rows(tuna_edges_aggregated %&gt;%\n              select(target) %&gt;%\n              rename(id = target)) %&gt;%\n  distinct()\n\ntuna_graph &lt;- tbl_graph(nodes = tuna_nodes_extract,\n                       edges = tuna_edges_aggregated,\n                       directed = TRUE)\n\ntuna_graph\n\n\n# A tbl_graph: 29 nodes and 39 edges\n#\n# A directed multigraph with 7 components\n#\n# A tibble: 29 × 1\n  id                                           \n  &lt;chr&gt;                                        \n1 Andhra Pradesh  Sp Worldwide                 \n2 Arunachal Pradesh s AS Abalone               \n3 Brisa Marina Surfboard AB Marine conservation\n4 Dutch Mussels Pic Marine biology             \n5 Joseph Limited Liability Company             \n6 Sea Breeze Marine biology                    \n# ℹ 23 more rows\n#\n# A tibble: 39 × 6\n   from    to HS_Code Value_OMU_Total Count Average_OMU\n  &lt;int&gt; &lt;int&gt;   &lt;int&gt;           &lt;dbl&gt; &lt;int&gt;       &lt;dbl&gt;\n1     1    10  200911               0     2         NaN\n2     1    10  220300               0    37         NaN\n3     1    10  440791               0     9         NaN\n# ℹ 36 more rows\n\n\n\n\n\n\nShow me the good stuff\nnodes_dftuna &lt;- tuna_graph %&gt;%\n  activate(nodes) %&gt;%\n  as_tibble() %&gt;%\n  rename(label = id) %&gt;%\n  mutate(id=row_number()) %&gt;%\n  select(id, label)\n\nedges_dftuna &lt;- tuna_graph %&gt;%\n  activate(edges) %&gt;%\n  as_tibble()\n\nvistuna_graph &lt;- visNetwork(nodes = nodes_dftuna, edges = edges_dftuna) %&gt;%\n  visIgraphLayout(layout = \"layout_with_fr\") %&gt;%\n  visEdges(arrows = \"to\", color = list(color = \"blue\", highlight = \"red\")) %&gt;%\n  visNodes() %&gt;%\n  visOptions(highlightNearest = list(enabled = TRUE, degree = 2, hover = TRUE),\n             nodesIdSelection = TRUE)\n\nvistuna_graph\n\n\n\n\n\n\n\n\n\n\nShow me the good stuff\nmatched_tuna &lt;- tuna_edges_aggregated[\n  tuna_edges_aggregated$source %in% MC2_edges$source &\n  tuna_edges_aggregated$target %in% MC2_edges$target,\n]\n\n# Remove rows with invalid vertex indices\nmatched_tuna &lt;- matched_tuna[!is.na(matched_tuna$source) & !is.na(matched_tuna$target),]\n\nmtuna_nodes_extract &lt;- matched_tuna %&gt;%\n  select(source) %&gt;%\n  rename(id = source) %&gt;%\n  bind_rows(matched_tuna %&gt;%\n              select(target) %&gt;%\n              rename(id = target)) %&gt;%\n  distinct()\n\nmtuna_graph &lt;- tbl_graph(nodes = mtuna_nodes_extract,\n                            edges = matched_tuna,\n                            directed = TRUE)\n\nnodes_dfmtuna &lt;- mtuna_graph %&gt;%\n  activate(nodes) %&gt;%\n  as_tibble() %&gt;%\n  rename(label = id) %&gt;%\n  mutate(id = as.character(row_number())) %&gt;%\n  select(id, label)\n\nedges_dfmtuna &lt;- mtuna_graph %&gt;%\n  activate(edges) %&gt;%\n  as_tibble()\n\nvistuna_graph &lt;- visNetwork(nodes = nodes_dfmtuna, edges = edges_dfmtuna) %&gt;%\n  visIgraphLayout(layout = \"layout_with_fr\") %&gt;%\n  visEdges(arrows = \"to\", color = list(color = \"blue\", highlight = \"red\")) %&gt;%\n  visNodes() %&gt;%\n  visOptions(highlightNearest = list(enabled = TRUE, degree = 2, hover = TRUE),\n             nodesIdSelection = TRUE)\n\nvistuna_graph\n\n\n\n\n\n\n\n\n\n\nShow me the good stuff\ncommon_edges_tuna &lt;- intersect(E(tuna_graph), E(mtuna_graph))\n\n# Calculate the Jaccard similarity coefficient\njaccard_similarity_tuna &lt;- length(common_edges_tuna) / (length(E(tuna_graph)) + length(E(mtuna_graph)) - length(common_edges_tuna))\n\n# Print the Jaccard similarity coefficient\nprint(jaccard_similarity_tuna)\n\n\n[1] 1"
  },
  {
    "objectID": "take-home_Ex/take-home_Ex02/take-home_Ex02.html#conclusion",
    "href": "take-home_Ex/take-home_Ex02/take-home_Ex02.html#conclusion",
    "title": "Take-Home Exercise 2",
    "section": "Conclusion",
    "text": "Conclusion\n\n\nShow me the good stuff\n# Calculate Jaccard similarity scores\njaccard_scores &lt;- data.frame(\n  Graph = c(\"Carp\", \"Chub Mackerel\", \"Cod\", \"Catfish\", \"Herring\", \"Lichen\", \"Mackerel\", \"Pollock\", \"Salmon WGL\", \"Salmon\", \"Shark\", \"Tuna\"),\n  Jaccard_Similarity = c(jaccard_similaritycarp, jaccard_similaritycmac,\njaccard_similaritycod,                   jaccard_similarity_catfish, jaccard_similarity_herring, jaccard_similarity_lichen, jaccard_similarity_mackerel, jaccard_similarity_pollock, jaccard_similarity_salmonwgl, jaccard_similarity_salmon, jaccard_similarity_shark, jaccard_similarity_tuna)\n)\n\n# Sort the data frame by Jaccard similarity in descending order\njaccard_scores_sorted &lt;- jaccard_scores %&gt;%\n  arrange(desc(Jaccard_Similarity))\n\n# Print the sorted table\nprint(jaccard_scores_sorted)\n\n\n           Graph Jaccard_Similarity\n1         Lichen          1.0000000\n2         Salmon          1.0000000\n3          Shark          1.0000000\n4           Tuna          1.0000000\n5     Salmon WGL          0.9770115\n6        Catfish          0.9660377\n7       Mackerel          0.9574468\n8           Carp          0.9378882\n9        Herring          0.9361702\n10       Pollock          0.9078947\n11 Chub Mackerel          0.8984375\n12           Cod          0.6666667\n\n\n\nBy stacking the bundles by their Jaccard Similarity Coefficients (descending order), we see that the most reliable bundles are Lichen, Salmon, Shark and Tuna, which all scored 1.0, indicating total similarity for the dataset in the bundles.\nConversely, Cod is the least reliable, scoring the lowest, and by a substantial margin from the other bundles."
  },
  {
    "objectID": "take-home_Ex/take-home_Ex02/take-home_Ex02.html#data-limitations",
    "href": "take-home_Ex/take-home_Ex02/take-home_Ex02.html#data-limitations",
    "title": "Take-Home Exercise 2",
    "section": "Data Limitations",
    "text": "Data Limitations\n\nFor future analysis, a few areas should be considered:\n\nHomogeneity of bundle data - certain bundles (i.e. Catfish) were missing columns of data like Weight(kg), which would prevent it from being useful should that be a factor of consideration in our analysis into illegal fishing.\nSingle Currency - Similarly, bundles values are all in OMU, but MC2 dataset contains mix of OMU and USD values. It is proposed to either convert all values to OMU for ease of analysis, or minimally provide the exchange rate for our own use."
  },
  {
    "objectID": "take-home_Ex/take-home_Ex03/take-home_Ex03.html",
    "href": "take-home_Ex/take-home_Ex03/take-home_Ex03.html",
    "title": "Take-Home Exercise 3",
    "section": "",
    "text": "As part of the ISSS608-VAA Course in MITB, SMU, Question 1 of the Vast Challenge [Mini Challenge 3] will be addressed as Take-Home Exercise 3.\n\n\nQ1: Use visual analytics to identify anomalies in the business groups present in the knowledge graph.\n\n\n\n\n\nShow me the good stuff\npacman::p_load(jsonlite, tidygraph, ggraph, DT, visNetwork, graphlayouts, ggforce, \n               skimr, tidytext, tidyverse, ggplot2, dplyr, patchwork)\n\n\n\n\n\n\n\nShow me the good stuff\nmc3_data &lt;- fromJSON(\"data/MC3.json\")\n\n\n\n\n\n\nExtracting the EdgesExtracting the Nodes\n\n\n\n\nShow me the good stuff\nmc3_edges &lt;- as_tibble(mc3_data$links) %&gt;% \n  distinct() %&gt;%\n  mutate(source = as.character(source),\n         target = as.character(target),\n         type = as.character(type)) %&gt;%\n  group_by(source, target, type) %&gt;%\n    summarise(weights = n()) %&gt;%\n  filter(source!=target) %&gt;%\n  ungroup()\n\n\n\n\n\n\nShow me the good stuff\nmc3_nodes &lt;- as_tibble(mc3_data$nodes) %&gt;%\n  mutate(country = as.character(country),\n         id = as.character(id),\n         product_services = as.character(product_services),\n         revenue_omu = as.numeric(as.character(revenue_omu)),\n         type = as.character(type)) %&gt;%\n  select(id, country, type, revenue_omu, product_services) %&gt;%\n  distinct(id, country, type, .keep_all = TRUE) #Match for first three columns\n\n\n\n\n\n\n\n\n\n4.1 Edges4.2 Nodes\n\n\nCheck for Missing Values\n\n\nShow me the good stuff\nskim(mc3_edges)\n\n\n\nData summary\n\n\nName\nmc3_edges\n\n\nNumber of rows\n24036\n\n\nNumber of columns\n4\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n3\n\n\nnumeric\n1\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nsource\n0\n1\n6\n700\n0\n12856\n0\n\n\ntarget\n0\n1\n6\n28\n0\n21265\n0\n\n\ntype\n0\n1\n16\n16\n0\n2\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nweights\n0\n1\n1\n0\n1\n1\n1\n1\n1\n▁▁▇▁▁\n\n\n\n\n\nClean up Grouped Data (Source)\n\n\nShow me the good stuff\nmc3_edges_clean &lt;- mc3_edges%&gt;%\n  # Extract all text within \" \"\n  mutate(source = str_extract_all(source, '\"(.*?)\"')) %&gt;%\n  # Split into separate rows\n  unnest(source) %&gt;%\n  # Split phrases by comma ignoring leading spaces\n  separate_rows(source, sep = \",\\\\s*\") %&gt;%\n  mutate(source = str_remove_all(source, '\"'))\n\n\nChecking for duplicates\n\n\nShow me the good stuff\nmc3_edges_clean[duplicated(mc3_edges_clean),]\n\n\n# A tibble: 2,238 × 4\n   source                      target           type             weights\n   &lt;chr&gt;                       &lt;chr&gt;            &lt;chr&gt;              &lt;int&gt;\n 1 1 Ltd. Liability Co         Yesenia Oliver   Company Contacts       1\n 2 1 Swordfish Ltd Solutions   Daniel Reese     Company Contacts       1\n 3 6 GmbH & Co. KG             Monique Cummings Company Contacts       1\n 4 6 GmbH & Co. KG             Monique Cummings Company Contacts       1\n 5 Mar de la Luz BV            Monique Cummings Company Contacts       1\n 6 7 Ltd. Liability Co Express Cassidy Sherman  Beneficial Owner       1\n 7 7 Ltd. Liability Co Express Dawn West        Beneficial Owner       1\n 8 7 Ltd. Liability Co Express Hannah Franco    Company Contacts       1\n 9 7 Ltd. Liability Co Express Michael Morrison Beneficial Owner       1\n10 7 Ltd. Liability Co Express Nicole Carrillo  Beneficial Owner       1\n# ℹ 2,228 more rows\n\n\nRemove Duplicate Rows\n\n\nShow me the good stuff\nmc3_edges_clean &lt;- unique(mc3_edges_clean)\n\n\n\n\nCheck for Missing Values\n\n\nShow me the good stuff\nskim(mc3_nodes)\n\n\n\nData summary\n\n\nName\nmc3_nodes\n\n\nNumber of rows\n24711\n\n\nNumber of columns\n5\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n4\n\n\nnumeric\n1\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nid\n0\n1\n6\n64\n0\n22929\n0\n\n\ncountry\n0\n1\n2\n15\n0\n100\n0\n\n\ntype\n0\n1\n7\n16\n0\n3\n0\n\n\nproduct_services\n0\n1\n4\n1737\n0\n3167\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nrevenue_omu\n18769\n0.24\n1802491\n18012842\n3652.23\n7786.26\n16358.3\n50045.48\n310612303\n▇▁▁▁▁\n\n\n\n\n\nCheck for duplicates\n\n\nShow me the good stuff\nmc3_nodes[duplicated(mc3_nodes),]\n\n\n# A tibble: 0 × 5\n# ℹ 5 variables: id &lt;chr&gt;, country &lt;chr&gt;, type &lt;chr&gt;, revenue_omu &lt;dbl&gt;,\n#   product_services &lt;chr&gt;\n\n\nRemove Duplicate Rows\n\n\nShow me the good stuff\nmc3_nodes &lt;- unique(mc3_nodes)\n\n\n\n\n\n\nFor Edges\nThe data summary shows that there are no missing values in all fields.\nThe data summary shows that there are no duplicated rows in all mc3_edges fields.\nFor Nodes\nThe data summary shows that there are no missing values for all character-variables, while there are 21515 missing values in the numeric-variable value_omu.\nThe data summary shows that there are 2595 duplicated rows in all mc3_nodes fields. They are removed to prevent skewing subsequent analyses.\n\n\n\n\n\n\n\n\nShow me the good stuff\n# Set default plot theme\n\nnodes_details &lt;- mc3_nodes %&gt;%\n  ggplot(aes(x = type, fill = type)) +\n  geom_bar() +\n  geom_text(stat = \"count\", aes(label = after_stat(count)), vjust = -1) +\n  ylim(0, 11000) +\n  labs(title = \"Count of Stakeholders\") +\n  theme(\n    axis.title.y = element_blank(),\n    axis.title.x = element_blank(),\n    axis.text.y = element_blank(),\n    legend.position = \"none\",\n    plot.title = element_text(hjust = 0.5)\n  )\n\n\n\n\nnodes_details\n\n\n\n\n\n\n\n\n\nBeneficial OwnersCompanyCompany Contacts\n\n\n\n\nShow me the good stuff\nnodes_aggregated &lt;- mc3_nodes %&gt;%\n  group_by(country, type) %&gt;%\n  summarise(count = n(),\n            revenue_omu = sum(revenue_omu)) %&gt;%\n  ungroup()\n\n\npben_owner &lt;- nodes_aggregated %&gt;%\n  filter(type == \"Beneficial Owner\") %&gt;%\n  ggplot(aes(x = fct_rev(fct_reorder(country, count)), y = count, fill = \"Standard Color\")) +\n  geom_col() +\n  geom_text(aes(label = count), vjust = -1) +\n  ylim(0, 13000) +\n  labs(title = \"Beneficial Owners mostly from ZH\") +\n  theme(\n    axis.title.y = element_blank(),\n    axis.title.x = element_blank(),\n    axis.text.y = element_blank(),\n    legend.position = \"none\"\n  ) +\n  scale_fill_manual(values = \"#F8766D\")\n\n\npben_owner\n\n\n\n\n\n\n\n\n\nShow me the good stuff\npcompany &lt;- nodes_aggregated %&gt;%\n  filter(type == \"Company\" & count &gt; 100) %&gt;%\n  ggplot(aes(x = fct_rev(fct_reorder(country, count)), y = count)) +\n  geom_col(fill = \"#00BA38\") +\n  ylim(0, 3800) +\n  geom_text(aes(label = count), vjust = -1) +\n  labs(title = \"Companies Mostly Operating from ZH\") +\n  theme(\n    axis.title.y = element_blank(),\n    axis.title.x = element_blank(),\n    axis.text.y = element_blank())\n\n\n\npcompany\n\n\n\n\n\n\n\n\n\nShow me the good stuff\npcoy_contacts &lt;- nodes_aggregated %&gt;%\n  filter(type == \"Company Contacts\") %&gt;%\n  ggplot(aes(x = fct_rev(fct_reorder(country, count)), y = count, fill = \"Standard Color\")) +\n  geom_col() +\n  geom_text(aes(label = count), vjust = -1) +\n  ylim(0, 13000) +\n  labs(title = \"Company Contacts mostly from ZH\") +\n  theme(\n    axis.title.y = element_blank(),\n    axis.title.x = element_blank(),\n    axis.text.y = element_blank(),\n    legend.position = \"none\"\n  ) +\n  scale_fill_manual(values = \"#619CFF\")\n\n\n\npcoy_contacts\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nElaborate here\n1: Top 20% 2: 20 to 40% 3: 40 to 60% 4: 60 to 80% 5: Bottom 20% 6: NA\n\n\n\n\nShow me the good stuff\npercentiles &lt;- quantile(mc3_nodes$revenue_omu, \n                        probs = c(0, 0.2, 0.4, 0.6, 0.8, 1),\n                        na.rm = TRUE)\n\n# Create a new column and assign labels based on percentiles\nmc3_nodes$revenue_group &lt;- cut(mc3_nodes$revenue_omu, \n                                   breaks = percentiles, \n                                   labels = c(5, 4, 3, 2, 1), \n                                   include.lowest = TRUE)\n\ncompany_nodes &lt;- mc3_nodes %&gt;%\n  filter(type == \"Company\")\n\nggplot(company_nodes, aes(x = revenue_group)) +\n  geom_bar(fill = \"#00BA38\") +\n  labs(\n    title = \"High Number of Unreported Revenues for Companies\",\n    x = \"Revenue Group\",\n    y = NULL\n  ) +\n  geom_text(\n    stat = \"count\",\n    aes(label = after_stat(count)),\n    vjust = -1) +\n  ylim(0, 10500) +\n  theme(text = element_text(size = 12)) +\n  facet_wrap(~type)\n\n\n\n\n\n\n\n\n\n\nBy counting the number of companies linked to each beneficial owner, we can observe which parties are linked to the highest numbers of companies at once.\n\nDatatableBar & Box Plots\n\n\n\n\nShow me the good stuff\ntarget_edges &lt;- mc3_edges_clean %&gt;%\n  group_by(target, type) %&gt;%\n  distinct() %&gt;%\n  summarise(company_count = n()) %&gt;%\n  arrange(desc(company_count)) %&gt;%\n  ungroup()\n\nftarget_edges &lt;- target_edges %&gt;%\n  filter(type == \"Beneficial Owner\")\n\ndatatable(ftarget_edges)\n\n\n\n\n\n\n\n\n\n\n\nShow me the good stuff\nfrequency &lt;- table(ftarget_edges$company_count)\n\n# Convert the frequency table to a data frame\nfrequency_df &lt;- as.data.frame(frequency)\nfrequency_df &lt;- frequency_df[order(frequency_df$Var1), ]\n\nggplot(frequency_df, aes(x = Var1, y = Freq)) +\n  geom_bar(stat = \"identity\") +\n  geom_text(aes(label = Freq), vjust = -0.5) +\n  xlab(\"Company Count\") +\n  ylab(\"Frequency\") +\n  ggtitle(\"Distribution of Companies Linked to Beneficial Owners\") +\n  ylim(0, max(frequency_df$Freq) * 1.2)\n\n\n\n\n\n\n\n\n\nFor Brevity, Beneficial Owners with &gt;= 3 Companies will be termed Big Ben.\n\n\n\n\n\nWith the data available, there are a few possible factors to leverage on to identify anomalies.\nNumber of Beneficial Owners\nWhile companies having a single Beneficial Owner is not inherently anomalous, it suggests private ownership, which provides more control, privacy and fewer regulatory requirements. It is therefore worth looking into this in combination with the following factor.\nNumber of Companies\nWhile owning shares in many companies is not in itself anomalous, the nature of private ownership suggests a certain degree of privacy and freedom from regulations. As such, it is worthwhile looking into caaes of Beneficial owners with more than or equal to 3 companies [Big Bens].\nRevenue\nBoth companies with High Revenue reported and Unreported revenue (missing values) are of interest, since these are potential signs of anomalous activity.\nProducts\nThere are companies with “Unknown” products being transacted, which could either be a data collection error, or potentially anomalous.\nTherefore, we will explore the following subsets of companies:\nArea of Interest 1 - Companies owned by single Beneficial Owners\nArea of Interest 2 - High Revenue Companies with Big Bens\nArea of Interest 3 - High Revenue Companies with Sole Big Ben\nArea of Interest 4 - Companies with Large Number of Company Contacts but Undeclared Revenue.\n\n\n\n\n\nShow me the good stuff\nsin_benowners &lt;- mc3_edges_clean %&gt;%\n  group_by(source) %&gt;%\n  filter(type == \"Beneficial Owner\") %&gt;%\n  filter(n_distinct(target) == 1)\n\nsin_bencount &lt;- sin_benowners %&gt;%\n  group_by(target) %&gt;%\n  mutate(count = n()) %&gt;%\n  filter(count &gt;= 3) %&gt;%\n  ungroup()\n\n\nsin_bencount_rev &lt;- left_join(sin_bencount, mc3_nodes, by = c(\"source\"=\"id\")) %&gt;%\n  select(-type.y) %&gt;%\n  rename(\"type\" = \"type.x\")\n\nsin_bencount_rev2 &lt;-  sin_bencount_rev %&gt;%\n  distinct() %&gt;%\n  rename(\"from\" = \"source\",\n         \"to\" = \"target\")\n\nbenowner_source &lt;- sin_bencount_rev2 %&gt;%\n  distinct(from) %&gt;%\n  rename(\"id\" = \"from\")\n\nbenowner_target &lt;- sin_bencount_rev2 %&gt;%\n  distinct(to) %&gt;%\n  rename(\"id\" = \"to\")\n\nbenowner_nodes_extracted &lt;- rbind(benowner_source, benowner_target)\n\nbenowner_nodes_extracted$group &lt;- ifelse(benowner_nodes_extracted$id %in% sin_bencount_rev$source, \"Company\", \"Beneficial Owner\")\n\n\n\n\n\n\nShow me the good stuff\nvisNetwork(\n    benowner_nodes_extracted, \n    sin_bencount_rev2,\n    width = \"100%\",\n  main = list(\n    text = \"Anna Wheeler is the sole Beneficial Owner\",\n    style = \"font-size:17x; weight:bold; text-align:right;\"),\n  submain = list(text = \"of 6 different Companies\",\n                   style = \"font-size:13pm; \n                   text-align:right;\")\n  )%&gt;%\n  visIgraphLayout(\n    layout = \"layout_with_fr\"\n  ) %&gt;%\n  visGroups(groupname = \"Company\",\n            color = \"#00BA38\") %&gt;%\n  visGroups(groupname = \"Beneficial Owner\",\n            color = \"#F8766D\") %&gt;%\n  visLegend() %&gt;%\n  visEdges(\n    arrows = \"to\"\n  ) %&gt;%\n  visOptions(\n    highlightNearest = list(enabled = T, degree = 2, hover = T),\n    nodesIdSelection = TRUE,\n    selectedBy = \"group\",\n    collapse = TRUE)\n\n\n\n\n\n\n\nGeneral Findings\nWith multiple Beneficial Owners typically signalling a company being in the public domain as a publicly listed company, sole ownership typically signals that a company is privately owned. Privately owned companies enjoy privileges that publicly listed companies do not: privacy, and less regulations.\nAs such, it is far more accessible for Beneficial Owners who are the sole owners of companies to utilise their various assets and connections to mask illegal activities whilst being poorly regulated by the industry officials. It is therefore worth monitoring and looking into these individuals.\n\n\n\n\n\n\n\n\n\nShow me the good stuff\nhr_nodes &lt;- company_nodes %&gt;%\n  filter(revenue_group == \"1\")\n\ntarget_3 &lt;- ftarget_edges[ftarget_edges$company_count &gt;= 3, ]\n\nhr_edges &lt;- mc3_edges_clean %&gt;%\n  filter(source %in% hr_nodes$id) %&gt;%\n  filter(target %in% target_3$target) %&gt;%\n  rename(from = source, to = target) %&gt;%\n  distinct()\n\nhr_nodes_extract &lt;- hr_edges %&gt;%\n  select(from) %&gt;%\n  rename(id = from) %&gt;%\n  bind_rows(hr_edges %&gt;%\n              select(to) %&gt;%\n              rename(id = to)) %&gt;%\n  distinct() %&gt;%\n  mutate(group = ifelse(id %in% hr_edges$from, \"Company\", \"Beneficial Owner\"))\n\n\n\n\n\n\n\nShow me the good stuff\n# Define the color palette\n\n\nvisNetwork(\n  hr_nodes_extract, \n  hr_edges,\n  width = \"100%\",\n  main = list(\n    text = \"Primarily Private Ownership except for\",\n    style = \"font-size:17x; weight:bold; text-align:right;\"),\n  submain = list(text = \"Mar de la Aventura Tidepool\",\n                   style = \"font-size:13pm; \n                   text-align:right;\")\n) %&gt;%\nvisIgraphLayout(layout = \"layout_nicely\") %&gt;%\nvisGroups(groupname = \"Company\", color = \"#00BA38\") %&gt;%\nvisGroups(groupname = \"Beneficial Owner\", color = \"#F8766D\") %&gt;%\nvisLegend() %&gt;%\nvisEdges(arrows = \"to\") %&gt;%\nvisOptions(\n  highlightNearest = list(enabled = TRUE, degree = 2, hover = TRUE),\n  nodesIdSelection = TRUE,\n  selectedBy = \"group\",\n  collapse = TRUE\n) %&gt;%\nvisInteraction(navigationButtons = TRUE)\n\n\n\n\n\n\n\nGeneral Findings\nHaving filtered the dataset to detect for the specific links between Beneficial Owners with links to &gt;= 3 companies, and Companies in the top revenue group, we can make the following observations:\n\nMar de la Aventura presents itself as a potential publicly listed company that produces high revenue with multiple Big Bens.\nConversely, there are also cases where these Owners are the only one among their population to have stakes in Company within the top income revenue group. However, this does not shed much light on the specific group of companies/owners of interest, as this network graph could have excluded other owners who do not own multiple businesses.\n\nWe therefore include another filter where we match the companies to a list of companies with only one Beneficial Owner.\n\n\n\n\n\n\n\n\n\nShow me the good stuff\ncompanies_with_one_owner &lt;- hr_edges %&gt;%\n  group_by(from) %&gt;%\n  summarise(count = n()) %&gt;%\n  filter(count == 1)\n\nexcl_hredges &lt;- hr_edges %&gt;%\n  filter(from %in% companies_with_one_owner$from)\n\n\nexcl_hrnodes_extract &lt;- excl_hredges %&gt;%\n  select(from) %&gt;%\n  rename(id = from) %&gt;%\n  bind_rows(excl_hredges %&gt;%\n              select(to) %&gt;%\n              rename(id = to)) %&gt;%\n  distinct() %&gt;%\n  mutate(group = ifelse(id %in% excl_hredges$from, \"Company\", \"Beneficial Owner\"))\n\n\n\n\n\n\n\nShow me the good stuff\nvisNetwork(\n  excl_hrnodes_extract, \n  excl_hredges,\n  width = \"100%\",\n  main = list(\n    text = \"Tiffany Brown and John Williams solely own\",\n    style = \"font-size:17x; weight:bold; text-align:right;\"),\n  submain = list(text = \"two High Revenue companies respectively\",\n                   style = \"font-size:13pm; \n                   text-align:right;\")\n) %&gt;%\nvisIgraphLayout(layout = \"layout_nicely\") %&gt;%\nvisGroups(groupname = \"Company\", color = \"#00BA38\") %&gt;%\nvisGroups(groupname = \"Beneficial Owner\", color = \"#F8766D\") %&gt;%\nvisLegend() %&gt;%\nvisEdges(arrows = \"to\") %&gt;%\nvisOptions(\n  highlightNearest = list(enabled = TRUE, degree = 2, hover = TRUE),\n  nodesIdSelection = TRUE,\n  selectedBy = \"group\",\n  collapse = TRUE\n) %&gt;%\nvisInteraction(navigationButtons = TRUE)\n\n\n\n\n\n\n\nGeneral Findings\nThis specific subset of Companies x Beneficial Owners is worth looking into because both groups belong to an exclusive list of companies that are in the top revenue group, while having just one Beneficial Owner who owns multiple companies. In two particular instances, we see Tiffany Brown and John Williams being the sole owners of two top performing companies at the same time.\nThough not particularly incriminating, it is worth looking into these individuals and their companies to monitor for any illicit activities that may be facilitating their high revenue across multiple companies.\n\n\n\n\n\n\n\nShow me the good stuff\n#Added after deadline to value-add\n\n# Assuming your dataset is named 'data'\nsus_edges &lt;- subset(mc3_edges_clean, target %in% c(\"Tiffany Brown\", \"John Williams\"))\n\ncolnames(sus_edges)[colnames(sus_edges) == \"source\"] &lt;- \"from\"\ncolnames(sus_edges)[colnames(sus_edges) == \"target\"] &lt;- \"to\"\n\nsus_nodes_extract &lt;- sus_edges %&gt;%\n  select(from) %&gt;%\n  rename(id = from) %&gt;%\n  bind_rows(sus_edges %&gt;%\n              select(to) %&gt;%\n              rename(id = to)) %&gt;%\n  distinct() %&gt;%\n  mutate(group = ifelse(id %in% sus_edges$from, \"Company\", \"Beneficial Owner\"))\n\nvisNetwork(\n  sus_nodes_extract, \n  sus_edges,\n  width = \"100%\",\n  main = list(\n    text = \"Companies owned by Tiffany Brown and John Williams\",\n    style = \"font-size:17x; weight:bold; text-align:right;\")) %&gt;%\nvisIgraphLayout(layout = \"layout_nicely\") %&gt;%\nvisGroups(groupname = \"Company\", color = \"#00BA38\") %&gt;%\nvisGroups(groupname = \"Beneficial Owner\", color = \"#F8766D\") %&gt;%\nvisLegend() %&gt;%\nvisEdges(arrows = \"to\") %&gt;%\nvisOptions(\n  highlightNearest = list(enabled = TRUE, degree = 2, hover = TRUE),\n  nodesIdSelection = TRUE,\n  selectedBy = \"group\",\n  collapse = TRUE\n) %&gt;%\nvisInteraction(navigationButtons = TRUE)\n\n\n\n\n\n\n\nAdditional Findings\nIt is observed that Tiffany Brown and John Williams are also sole owners of other companies.\nIt might be worth looking into these companies in the event they may be shell companies.\n\n\n\n\n\n\n\n\nShow me the good stuff\ncc_edges &lt;- mc3_edges_clean %&gt;%\n  group_by(target, type) %&gt;%\n  distinct() %&gt;%\n  summarise(contacts_count = n()) %&gt;%\n  arrange(desc(contacts_count)) %&gt;%\n  ungroup()\n\nfcc_edges &lt;- cc_edges %&gt;%\n  filter(type == \"Company Contacts\")\n\ndatatable(fcc_edges)\n\n\n\n\n\n\n\n\n\nShow me the good stuff\nccfrequency &lt;- table(fcc_edges$contacts_count)\n\n# Convert the frequency table to a data frame\nccfrequency_df &lt;- as.data.frame(ccfrequency)\nccfrequency_df &lt;- ccfrequency_df[order(ccfrequency_df$Var1), ]\n\nggplot(ccfrequency_df, aes(x = Var1, y = Freq)) +\n  geom_bar(stat = \"identity\") +\n  geom_text(aes(label = Freq), vjust = -0.5) +\n  xlab(\"Contacts Count\") +\n  ylab(\"Frequency\") +\n  ggtitle(\"Distribution of Companies Contacts linked to Companies\") +\n  ylim(0, max(frequency_df$Freq) * 1.2)\n\n\n\n\n\n\nMost companies have 1-2 Company Contacts, which makes companies with 3 or more contacts an anomaly. To further the discrepancy, we will specifically look into companies with &gt;= 3 contacts (which suggest larger size and potential revenue) and yet have undisclosed revenues.\n\n\n\n\n\n\nShow me the good stuff\nudrev_nodes &lt;- mc3_nodes %&gt;%\n  filter(is.na(revenue_omu))\n\nudrev_nodes_cc &lt;- udrev_nodes %&gt;%\n  filter(type == \"Company Contacts\") %&gt;%\n  distinct()\n\n\nudrev_edges &lt;- mc3_edges %&gt;%\n  filter(type == \"Company Contacts\") %&gt;%\n  filter(source %in% udrev_nodes_cc$id) %&gt;%\n  distinct() %&gt;%\n  rename(\"from\" = \"source\",\n         \"to\" = \"target\")\n\n# Extract edges that have more than or equal to 3 company contacts\nhigh_udrev_edges &lt;- udrev_edges %&gt;%\n  group_by(from) %&gt;%\n  mutate(count = n()) %&gt;%\n  filter(count &gt;= 3) %&gt;%\n  ungroup()\n\n\nudrev_source &lt;- high_udrev_edges %&gt;%\n  distinct(from) %&gt;%\n  rename(\"id\" = \"from\")\n\nudrev_target &lt;- high_udrev_edges %&gt;%\n  distinct(to) %&gt;%\n  rename(\"id\" = \"to\")\n\n# Bind into one dataframe\nudrev_nodes2 &lt;- bind_rows(udrev_source, udrev_target)\n\nudrev_nodes2$group &lt;- ifelse(udrev_nodes2$id %in% udrev_nodes_cc$id, \"Company Contact\", \"Company\")\n\n\n\n\n\n\n\nShow me the good stuff\nvisNetwork(\n    udrev_nodes2, \n    high_udrev_edges\n  ) %&gt;%\n  visIgraphLayout(\n    layout = \"layout_with_fr\"\n  ) %&gt;%\n  visGroups(groupname = \"Company\",\n            color = \"#00BA38\") %&gt;%\n  visGroups(groupname = \"Company Contact\",\n            color = \"#619CFF\") %&gt;%\n  visLegend() %&gt;%\n  visEdges(\n    arrows = \"to\"\n  ) %&gt;%\n  visOptions(\n    highlightNearest = list(enabled = T, degree = 2, hover = T),\n    nodesIdSelection = TRUE,\n    selectedBy = \"group\",\n    collapse = TRUE)\n\n\n\n\n\n\n\nWhile absent data for revenue is not an immediate justification to label these companies as participating in illegal activities, the noted lack of revenue being declared coupled with their suggested size (inconclusive without more information) warrants deeper investigation and monitoring.\n\n\n\n\n\nDelving into the distribution and spread of factors such as revenue and ownership has provided insights that have been explored through basic graph and network graph visualisations. While certain anomalous areas were detected, there is insufficient data to conclusively identify any individual(s) or company participating in illegal activities.\nFurther work may include standardisation of product service categories/keywords so that the data can be cleanly segmented by product type. It would also be helpful if companies are labeled private/public to begin with, that we may compare within each category."
  },
  {
    "objectID": "take-home_Ex/take-home_Ex03/take-home_Ex03.html#mini-challenge-3-detect-anomalies",
    "href": "take-home_Ex/take-home_Ex03/take-home_Ex03.html#mini-challenge-3-detect-anomalies",
    "title": "Take-Home Exercise 3",
    "section": "",
    "text": "Q1: Use visual analytics to identify anomalies in the business groups present in the knowledge graph."
  },
  {
    "objectID": "take-home_Ex/take-home_Ex03/take-home_Ex03.html#loading-the-packages",
    "href": "take-home_Ex/take-home_Ex03/take-home_Ex03.html#loading-the-packages",
    "title": "Take-Home Exercise 3",
    "section": "",
    "text": "Show me the good stuff\npacman::p_load(jsonlite, tidygraph, ggraph, DT, visNetwork, graphlayouts, ggforce, \n               skimr, tidytext, tidyverse, ggplot2, dplyr, patchwork)"
  },
  {
    "objectID": "take-home_Ex/take-home_Ex03/take-home_Ex03.html#importing-the-data",
    "href": "take-home_Ex/take-home_Ex03/take-home_Ex03.html#importing-the-data",
    "title": "Take-Home Exercise 3",
    "section": "",
    "text": "Show me the good stuff\nmc3_data &lt;- fromJSON(\"data/MC3.json\")"
  },
  {
    "objectID": "take-home_Ex/take-home_Ex03/take-home_Ex03.html#data-preparation",
    "href": "take-home_Ex/take-home_Ex03/take-home_Ex03.html#data-preparation",
    "title": "Take-Home Exercise 3",
    "section": "",
    "text": "Extracting the EdgesExtracting the Nodes\n\n\n\n\nShow me the good stuff\nmc3_edges &lt;- as_tibble(mc3_data$links) %&gt;% \n  distinct() %&gt;%\n  mutate(source = as.character(source),\n         target = as.character(target),\n         type = as.character(type)) %&gt;%\n  group_by(source, target, type) %&gt;%\n    summarise(weights = n()) %&gt;%\n  filter(source!=target) %&gt;%\n  ungroup()\n\n\n\n\n\n\nShow me the good stuff\nmc3_nodes &lt;- as_tibble(mc3_data$nodes) %&gt;%\n  mutate(country = as.character(country),\n         id = as.character(id),\n         product_services = as.character(product_services),\n         revenue_omu = as.numeric(as.character(revenue_omu)),\n         type = as.character(type)) %&gt;%\n  select(id, country, type, revenue_omu, product_services) %&gt;%\n  distinct(id, country, type, .keep_all = TRUE) #Match for first three columns"
  },
  {
    "objectID": "take-home_Ex/take-home_Ex03/take-home_Ex03.html#initial-data-exploration",
    "href": "take-home_Ex/take-home_Ex03/take-home_Ex03.html#initial-data-exploration",
    "title": "Take-Home Exercise 3",
    "section": "",
    "text": "4.1 Edges4.2 Nodes\n\n\nCheck for Missing Values\n\n\nShow me the good stuff\nskim(mc3_edges)\n\n\n\nData summary\n\n\nName\nmc3_edges\n\n\nNumber of rows\n24036\n\n\nNumber of columns\n4\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n3\n\n\nnumeric\n1\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nsource\n0\n1\n6\n700\n0\n12856\n0\n\n\ntarget\n0\n1\n6\n28\n0\n21265\n0\n\n\ntype\n0\n1\n16\n16\n0\n2\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nweights\n0\n1\n1\n0\n1\n1\n1\n1\n1\n▁▁▇▁▁\n\n\n\n\n\nClean up Grouped Data (Source)\n\n\nShow me the good stuff\nmc3_edges_clean &lt;- mc3_edges%&gt;%\n  # Extract all text within \" \"\n  mutate(source = str_extract_all(source, '\"(.*?)\"')) %&gt;%\n  # Split into separate rows\n  unnest(source) %&gt;%\n  # Split phrases by comma ignoring leading spaces\n  separate_rows(source, sep = \",\\\\s*\") %&gt;%\n  mutate(source = str_remove_all(source, '\"'))\n\n\nChecking for duplicates\n\n\nShow me the good stuff\nmc3_edges_clean[duplicated(mc3_edges_clean),]\n\n\n# A tibble: 2,238 × 4\n   source                      target           type             weights\n   &lt;chr&gt;                       &lt;chr&gt;            &lt;chr&gt;              &lt;int&gt;\n 1 1 Ltd. Liability Co         Yesenia Oliver   Company Contacts       1\n 2 1 Swordfish Ltd Solutions   Daniel Reese     Company Contacts       1\n 3 6 GmbH & Co. KG             Monique Cummings Company Contacts       1\n 4 6 GmbH & Co. KG             Monique Cummings Company Contacts       1\n 5 Mar de la Luz BV            Monique Cummings Company Contacts       1\n 6 7 Ltd. Liability Co Express Cassidy Sherman  Beneficial Owner       1\n 7 7 Ltd. Liability Co Express Dawn West        Beneficial Owner       1\n 8 7 Ltd. Liability Co Express Hannah Franco    Company Contacts       1\n 9 7 Ltd. Liability Co Express Michael Morrison Beneficial Owner       1\n10 7 Ltd. Liability Co Express Nicole Carrillo  Beneficial Owner       1\n# ℹ 2,228 more rows\n\n\nRemove Duplicate Rows\n\n\nShow me the good stuff\nmc3_edges_clean &lt;- unique(mc3_edges_clean)\n\n\n\n\nCheck for Missing Values\n\n\nShow me the good stuff\nskim(mc3_nodes)\n\n\n\nData summary\n\n\nName\nmc3_nodes\n\n\nNumber of rows\n24711\n\n\nNumber of columns\n5\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n4\n\n\nnumeric\n1\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nid\n0\n1\n6\n64\n0\n22929\n0\n\n\ncountry\n0\n1\n2\n15\n0\n100\n0\n\n\ntype\n0\n1\n7\n16\n0\n3\n0\n\n\nproduct_services\n0\n1\n4\n1737\n0\n3167\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nrevenue_omu\n18769\n0.24\n1802491\n18012842\n3652.23\n7786.26\n16358.3\n50045.48\n310612303\n▇▁▁▁▁\n\n\n\n\n\nCheck for duplicates\n\n\nShow me the good stuff\nmc3_nodes[duplicated(mc3_nodes),]\n\n\n# A tibble: 0 × 5\n# ℹ 5 variables: id &lt;chr&gt;, country &lt;chr&gt;, type &lt;chr&gt;, revenue_omu &lt;dbl&gt;,\n#   product_services &lt;chr&gt;\n\n\nRemove Duplicate Rows\n\n\nShow me the good stuff\nmc3_nodes &lt;- unique(mc3_nodes)\n\n\n\n\n\n\nFor Edges\nThe data summary shows that there are no missing values in all fields.\nThe data summary shows that there are no duplicated rows in all mc3_edges fields.\nFor Nodes\nThe data summary shows that there are no missing values for all character-variables, while there are 21515 missing values in the numeric-variable value_omu.\nThe data summary shows that there are 2595 duplicated rows in all mc3_nodes fields. They are removed to prevent skewing subsequent analyses."
  },
  {
    "objectID": "take-home_Ex/take-home_Ex03/take-home_Ex03.html#understanding-the-data",
    "href": "take-home_Ex/take-home_Ex03/take-home_Ex03.html#understanding-the-data",
    "title": "Take-Home Exercise 3",
    "section": "",
    "text": "Show me the good stuff\n# Set default plot theme\n\nnodes_details &lt;- mc3_nodes %&gt;%\n  ggplot(aes(x = type, fill = type)) +\n  geom_bar() +\n  geom_text(stat = \"count\", aes(label = after_stat(count)), vjust = -1) +\n  ylim(0, 11000) +\n  labs(title = \"Count of Stakeholders\") +\n  theme(\n    axis.title.y = element_blank(),\n    axis.title.x = element_blank(),\n    axis.text.y = element_blank(),\n    legend.position = \"none\",\n    plot.title = element_text(hjust = 0.5)\n  )\n\n\n\n\nnodes_details\n\n\n\n\n\n\n\n\n\nBeneficial OwnersCompanyCompany Contacts\n\n\n\n\nShow me the good stuff\nnodes_aggregated &lt;- mc3_nodes %&gt;%\n  group_by(country, type) %&gt;%\n  summarise(count = n(),\n            revenue_omu = sum(revenue_omu)) %&gt;%\n  ungroup()\n\n\npben_owner &lt;- nodes_aggregated %&gt;%\n  filter(type == \"Beneficial Owner\") %&gt;%\n  ggplot(aes(x = fct_rev(fct_reorder(country, count)), y = count, fill = \"Standard Color\")) +\n  geom_col() +\n  geom_text(aes(label = count), vjust = -1) +\n  ylim(0, 13000) +\n  labs(title = \"Beneficial Owners mostly from ZH\") +\n  theme(\n    axis.title.y = element_blank(),\n    axis.title.x = element_blank(),\n    axis.text.y = element_blank(),\n    legend.position = \"none\"\n  ) +\n  scale_fill_manual(values = \"#F8766D\")\n\n\npben_owner\n\n\n\n\n\n\n\n\n\nShow me the good stuff\npcompany &lt;- nodes_aggregated %&gt;%\n  filter(type == \"Company\" & count &gt; 100) %&gt;%\n  ggplot(aes(x = fct_rev(fct_reorder(country, count)), y = count)) +\n  geom_col(fill = \"#00BA38\") +\n  ylim(0, 3800) +\n  geom_text(aes(label = count), vjust = -1) +\n  labs(title = \"Companies Mostly Operating from ZH\") +\n  theme(\n    axis.title.y = element_blank(),\n    axis.title.x = element_blank(),\n    axis.text.y = element_blank())\n\n\n\npcompany\n\n\n\n\n\n\n\n\n\nShow me the good stuff\npcoy_contacts &lt;- nodes_aggregated %&gt;%\n  filter(type == \"Company Contacts\") %&gt;%\n  ggplot(aes(x = fct_rev(fct_reorder(country, count)), y = count, fill = \"Standard Color\")) +\n  geom_col() +\n  geom_text(aes(label = count), vjust = -1) +\n  ylim(0, 13000) +\n  labs(title = \"Company Contacts mostly from ZH\") +\n  theme(\n    axis.title.y = element_blank(),\n    axis.title.x = element_blank(),\n    axis.text.y = element_blank(),\n    legend.position = \"none\"\n  ) +\n  scale_fill_manual(values = \"#619CFF\")\n\n\n\npcoy_contacts"
  },
  {
    "objectID": "take-home_Ex/take-home_Ex03/take-home_Ex03.html#revenue-groups-and-unreported-revenue",
    "href": "take-home_Ex/take-home_Ex03/take-home_Ex03.html#revenue-groups-and-unreported-revenue",
    "title": "Take-Home Exercise 3",
    "section": "",
    "text": "Elaborate here\n1: Top 20% 2: 20 to 40% 3: 40 to 60% 4: 60 to 80% 5: Bottom 20% 6: NA\n\n\n\n\nShow me the good stuff\npercentiles &lt;- quantile(mc3_nodes$revenue_omu, \n                        probs = c(0, 0.2, 0.4, 0.6, 0.8, 1),\n                        na.rm = TRUE)\n\n# Create a new column and assign labels based on percentiles\nmc3_nodes$revenue_group &lt;- cut(mc3_nodes$revenue_omu, \n                                   breaks = percentiles, \n                                   labels = c(5, 4, 3, 2, 1), \n                                   include.lowest = TRUE)\n\ncompany_nodes &lt;- mc3_nodes %&gt;%\n  filter(type == \"Company\")\n\nggplot(company_nodes, aes(x = revenue_group)) +\n  geom_bar(fill = \"#00BA38\") +\n  labs(\n    title = \"High Number of Unreported Revenues for Companies\",\n    x = \"Revenue Group\",\n    y = NULL\n  ) +\n  geom_text(\n    stat = \"count\",\n    aes(label = after_stat(count)),\n    vjust = -1) +\n  ylim(0, 10500) +\n  theme(text = element_text(size = 12)) +\n  facet_wrap(~type)\n\n\n\n\n\n\n\n\n\n\nBy counting the number of companies linked to each beneficial owner, we can observe which parties are linked to the highest numbers of companies at once.\n\nDatatableBar & Box Plots\n\n\n\n\nShow me the good stuff\ntarget_edges &lt;- mc3_edges_clean %&gt;%\n  group_by(target, type) %&gt;%\n  distinct() %&gt;%\n  summarise(company_count = n()) %&gt;%\n  arrange(desc(company_count)) %&gt;%\n  ungroup()\n\nftarget_edges &lt;- target_edges %&gt;%\n  filter(type == \"Beneficial Owner\")\n\ndatatable(ftarget_edges)\n\n\n\n\n\n\n\n\n\n\n\nShow me the good stuff\nfrequency &lt;- table(ftarget_edges$company_count)\n\n# Convert the frequency table to a data frame\nfrequency_df &lt;- as.data.frame(frequency)\nfrequency_df &lt;- frequency_df[order(frequency_df$Var1), ]\n\nggplot(frequency_df, aes(x = Var1, y = Freq)) +\n  geom_bar(stat = \"identity\") +\n  geom_text(aes(label = Freq), vjust = -0.5) +\n  xlab(\"Company Count\") +\n  ylab(\"Frequency\") +\n  ggtitle(\"Distribution of Companies Linked to Beneficial Owners\") +\n  ylim(0, max(frequency_df$Freq) * 1.2)\n\n\n\n\n\n\n\n\n\nFor Brevity, Beneficial Owners with &gt;= 3 Companies will be termed Big Ben."
  },
  {
    "objectID": "take-home_Ex/take-home_Ex03/take-home_Ex03.html#anomalies",
    "href": "take-home_Ex/take-home_Ex03/take-home_Ex03.html#anomalies",
    "title": "Take-Home Exercise 3",
    "section": "",
    "text": "With the data available, there are a few possible factors to leverage on to identify anomalies.\nNumber of Beneficial Owners\nWhile companies having a single Beneficial Owner is not inherently anomalous, it suggests private ownership, which provides more control, privacy and fewer regulatory requirements. It is therefore worth looking into this in combination with the following factor.\nNumber of Companies\nWhile owning shares in many companies is not in itself anomalous, the nature of private ownership suggests a certain degree of privacy and freedom from regulations. As such, it is worthwhile looking into caaes of Beneficial owners with more than or equal to 3 companies [Big Bens].\nRevenue\nBoth companies with High Revenue reported and Unreported revenue (missing values) are of interest, since these are potential signs of anomalous activity.\nProducts\nThere are companies with “Unknown” products being transacted, which could either be a data collection error, or potentially anomalous.\nTherefore, we will explore the following subsets of companies:\nArea of Interest 1 - Companies owned by single Beneficial Owners\nArea of Interest 2 - High Revenue Companies with Big Bens\nArea of Interest 3 - High Revenue Companies with Sole Big Ben\nArea of Interest 4 - Companies with Large Number of Company Contacts but Undeclared Revenue."
  },
  {
    "objectID": "take-home_Ex/take-home_Ex03/take-home_Ex03.html#area-of-interest-1---beneficial-owners-with-multiple-companies",
    "href": "take-home_Ex/take-home_Ex03/take-home_Ex03.html#area-of-interest-1---beneficial-owners-with-multiple-companies",
    "title": "Take-Home Exercise 3",
    "section": "",
    "text": "Show me the good stuff\nsin_benowners &lt;- mc3_edges_clean %&gt;%\n  group_by(source) %&gt;%\n  filter(type == \"Beneficial Owner\") %&gt;%\n  filter(n_distinct(target) == 1)\n\nsin_bencount &lt;- sin_benowners %&gt;%\n  group_by(target) %&gt;%\n  mutate(count = n()) %&gt;%\n  filter(count &gt;= 3) %&gt;%\n  ungroup()\n\n\nsin_bencount_rev &lt;- left_join(sin_bencount, mc3_nodes, by = c(\"source\"=\"id\")) %&gt;%\n  select(-type.y) %&gt;%\n  rename(\"type\" = \"type.x\")\n\nsin_bencount_rev2 &lt;-  sin_bencount_rev %&gt;%\n  distinct() %&gt;%\n  rename(\"from\" = \"source\",\n         \"to\" = \"target\")\n\nbenowner_source &lt;- sin_bencount_rev2 %&gt;%\n  distinct(from) %&gt;%\n  rename(\"id\" = \"from\")\n\nbenowner_target &lt;- sin_bencount_rev2 %&gt;%\n  distinct(to) %&gt;%\n  rename(\"id\" = \"to\")\n\nbenowner_nodes_extracted &lt;- rbind(benowner_source, benowner_target)\n\nbenowner_nodes_extracted$group &lt;- ifelse(benowner_nodes_extracted$id %in% sin_bencount_rev$source, \"Company\", \"Beneficial Owner\")\n\n\n\n\n\n\nShow me the good stuff\nvisNetwork(\n    benowner_nodes_extracted, \n    sin_bencount_rev2,\n    width = \"100%\",\n  main = list(\n    text = \"Anna Wheeler is the sole Beneficial Owner\",\n    style = \"font-size:17x; weight:bold; text-align:right;\"),\n  submain = list(text = \"of 6 different Companies\",\n                   style = \"font-size:13pm; \n                   text-align:right;\")\n  )%&gt;%\n  visIgraphLayout(\n    layout = \"layout_with_fr\"\n  ) %&gt;%\n  visGroups(groupname = \"Company\",\n            color = \"#00BA38\") %&gt;%\n  visGroups(groupname = \"Beneficial Owner\",\n            color = \"#F8766D\") %&gt;%\n  visLegend() %&gt;%\n  visEdges(\n    arrows = \"to\"\n  ) %&gt;%\n  visOptions(\n    highlightNearest = list(enabled = T, degree = 2, hover = T),\n    nodesIdSelection = TRUE,\n    selectedBy = \"group\",\n    collapse = TRUE)\n\n\n\n\n\n\n\nGeneral Findings\nWith multiple Beneficial Owners typically signalling a company being in the public domain as a publicly listed company, sole ownership typically signals that a company is privately owned. Privately owned companies enjoy privileges that publicly listed companies do not: privacy, and less regulations.\nAs such, it is far more accessible for Beneficial Owners who are the sole owners of companies to utilise their various assets and connections to mask illegal activities whilst being poorly regulated by the industry officials. It is therefore worth monitoring and looking into these individuals."
  },
  {
    "objectID": "take-home_Ex/take-home_Ex03/take-home_Ex03.html#area-of-interest-2-high-revenue-companies-with-big-bens",
    "href": "take-home_Ex/take-home_Ex03/take-home_Ex03.html#area-of-interest-2-high-revenue-companies-with-big-bens",
    "title": "Take-Home Exercise 3",
    "section": "",
    "text": "Show me the good stuff\nhr_nodes &lt;- company_nodes %&gt;%\n  filter(revenue_group == \"1\")\n\ntarget_3 &lt;- ftarget_edges[ftarget_edges$company_count &gt;= 3, ]\n\nhr_edges &lt;- mc3_edges_clean %&gt;%\n  filter(source %in% hr_nodes$id) %&gt;%\n  filter(target %in% target_3$target) %&gt;%\n  rename(from = source, to = target) %&gt;%\n  distinct()\n\nhr_nodes_extract &lt;- hr_edges %&gt;%\n  select(from) %&gt;%\n  rename(id = from) %&gt;%\n  bind_rows(hr_edges %&gt;%\n              select(to) %&gt;%\n              rename(id = to)) %&gt;%\n  distinct() %&gt;%\n  mutate(group = ifelse(id %in% hr_edges$from, \"Company\", \"Beneficial Owner\"))\n\n\n\n\n\n\n\nShow me the good stuff\n# Define the color palette\n\n\nvisNetwork(\n  hr_nodes_extract, \n  hr_edges,\n  width = \"100%\",\n  main = list(\n    text = \"Primarily Private Ownership except for\",\n    style = \"font-size:17x; weight:bold; text-align:right;\"),\n  submain = list(text = \"Mar de la Aventura Tidepool\",\n                   style = \"font-size:13pm; \n                   text-align:right;\")\n) %&gt;%\nvisIgraphLayout(layout = \"layout_nicely\") %&gt;%\nvisGroups(groupname = \"Company\", color = \"#00BA38\") %&gt;%\nvisGroups(groupname = \"Beneficial Owner\", color = \"#F8766D\") %&gt;%\nvisLegend() %&gt;%\nvisEdges(arrows = \"to\") %&gt;%\nvisOptions(\n  highlightNearest = list(enabled = TRUE, degree = 2, hover = TRUE),\n  nodesIdSelection = TRUE,\n  selectedBy = \"group\",\n  collapse = TRUE\n) %&gt;%\nvisInteraction(navigationButtons = TRUE)\n\n\n\n\n\n\n\nGeneral Findings\nHaving filtered the dataset to detect for the specific links between Beneficial Owners with links to &gt;= 3 companies, and Companies in the top revenue group, we can make the following observations:\n\nMar de la Aventura presents itself as a potential publicly listed company that produces high revenue with multiple Big Bens.\nConversely, there are also cases where these Owners are the only one among their population to have stakes in Company within the top income revenue group. However, this does not shed much light on the specific group of companies/owners of interest, as this network graph could have excluded other owners who do not own multiple businesses.\n\nWe therefore include another filter where we match the companies to a list of companies with only one Beneficial Owner."
  },
  {
    "objectID": "take-home_Ex/take-home_Ex03/take-home_Ex03.html#area-of-interest-3-high-revenue-companies-with-sole-big-ben",
    "href": "take-home_Ex/take-home_Ex03/take-home_Ex03.html#area-of-interest-3-high-revenue-companies-with-sole-big-ben",
    "title": "Take-Home Exercise 3",
    "section": "",
    "text": "Show me the good stuff\ncompanies_with_one_owner &lt;- hr_edges %&gt;%\n  group_by(from) %&gt;%\n  summarise(count = n()) %&gt;%\n  filter(count == 1)\n\nexcl_hredges &lt;- hr_edges %&gt;%\n  filter(from %in% companies_with_one_owner$from)\n\n\nexcl_hrnodes_extract &lt;- excl_hredges %&gt;%\n  select(from) %&gt;%\n  rename(id = from) %&gt;%\n  bind_rows(excl_hredges %&gt;%\n              select(to) %&gt;%\n              rename(id = to)) %&gt;%\n  distinct() %&gt;%\n  mutate(group = ifelse(id %in% excl_hredges$from, \"Company\", \"Beneficial Owner\"))\n\n\n\n\n\n\n\nShow me the good stuff\nvisNetwork(\n  excl_hrnodes_extract, \n  excl_hredges,\n  width = \"100%\",\n  main = list(\n    text = \"Tiffany Brown and John Williams solely own\",\n    style = \"font-size:17x; weight:bold; text-align:right;\"),\n  submain = list(text = \"two High Revenue companies respectively\",\n                   style = \"font-size:13pm; \n                   text-align:right;\")\n) %&gt;%\nvisIgraphLayout(layout = \"layout_nicely\") %&gt;%\nvisGroups(groupname = \"Company\", color = \"#00BA38\") %&gt;%\nvisGroups(groupname = \"Beneficial Owner\", color = \"#F8766D\") %&gt;%\nvisLegend() %&gt;%\nvisEdges(arrows = \"to\") %&gt;%\nvisOptions(\n  highlightNearest = list(enabled = TRUE, degree = 2, hover = TRUE),\n  nodesIdSelection = TRUE,\n  selectedBy = \"group\",\n  collapse = TRUE\n) %&gt;%\nvisInteraction(navigationButtons = TRUE)\n\n\n\n\n\n\n\nGeneral Findings\nThis specific subset of Companies x Beneficial Owners is worth looking into because both groups belong to an exclusive list of companies that are in the top revenue group, while having just one Beneficial Owner who owns multiple companies. In two particular instances, we see Tiffany Brown and John Williams being the sole owners of two top performing companies at the same time.\nThough not particularly incriminating, it is worth looking into these individuals and their companies to monitor for any illicit activities that may be facilitating their high revenue across multiple companies."
  },
  {
    "objectID": "take-home_Ex/take-home_Ex03/take-home_Ex03.html#further-investigation-into-suspects",
    "href": "take-home_Ex/take-home_Ex03/take-home_Ex03.html#further-investigation-into-suspects",
    "title": "Take-Home Exercise 3",
    "section": "",
    "text": "Show me the good stuff\n#Added after deadline to value-add\n\n# Assuming your dataset is named 'data'\nsus_edges &lt;- subset(mc3_edges_clean, target %in% c(\"Tiffany Brown\", \"John Williams\"))\n\ncolnames(sus_edges)[colnames(sus_edges) == \"source\"] &lt;- \"from\"\ncolnames(sus_edges)[colnames(sus_edges) == \"target\"] &lt;- \"to\"\n\nsus_nodes_extract &lt;- sus_edges %&gt;%\n  select(from) %&gt;%\n  rename(id = from) %&gt;%\n  bind_rows(sus_edges %&gt;%\n              select(to) %&gt;%\n              rename(id = to)) %&gt;%\n  distinct() %&gt;%\n  mutate(group = ifelse(id %in% sus_edges$from, \"Company\", \"Beneficial Owner\"))\n\nvisNetwork(\n  sus_nodes_extract, \n  sus_edges,\n  width = \"100%\",\n  main = list(\n    text = \"Companies owned by Tiffany Brown and John Williams\",\n    style = \"font-size:17x; weight:bold; text-align:right;\")) %&gt;%\nvisIgraphLayout(layout = \"layout_nicely\") %&gt;%\nvisGroups(groupname = \"Company\", color = \"#00BA38\") %&gt;%\nvisGroups(groupname = \"Beneficial Owner\", color = \"#F8766D\") %&gt;%\nvisLegend() %&gt;%\nvisEdges(arrows = \"to\") %&gt;%\nvisOptions(\n  highlightNearest = list(enabled = TRUE, degree = 2, hover = TRUE),\n  nodesIdSelection = TRUE,\n  selectedBy = \"group\",\n  collapse = TRUE\n) %&gt;%\nvisInteraction(navigationButtons = TRUE)\n\n\n\n\n\n\n\nAdditional Findings\nIt is observed that Tiffany Brown and John Williams are also sole owners of other companies.\nIt might be worth looking into these companies in the event they may be shell companies."
  },
  {
    "objectID": "take-home_Ex/take-home_Ex03/take-home_Ex03.html#area-of-interest-4---companies-with-large-number-of-company-contacts-but-undeclared-revenue",
    "href": "take-home_Ex/take-home_Ex03/take-home_Ex03.html#area-of-interest-4---companies-with-large-number-of-company-contacts-but-undeclared-revenue",
    "title": "Take-Home Exercise 3",
    "section": "",
    "text": "Show me the good stuff\ncc_edges &lt;- mc3_edges_clean %&gt;%\n  group_by(target, type) %&gt;%\n  distinct() %&gt;%\n  summarise(contacts_count = n()) %&gt;%\n  arrange(desc(contacts_count)) %&gt;%\n  ungroup()\n\nfcc_edges &lt;- cc_edges %&gt;%\n  filter(type == \"Company Contacts\")\n\ndatatable(fcc_edges)\n\n\n\n\n\n\n\n\n\nShow me the good stuff\nccfrequency &lt;- table(fcc_edges$contacts_count)\n\n# Convert the frequency table to a data frame\nccfrequency_df &lt;- as.data.frame(ccfrequency)\nccfrequency_df &lt;- ccfrequency_df[order(ccfrequency_df$Var1), ]\n\nggplot(ccfrequency_df, aes(x = Var1, y = Freq)) +\n  geom_bar(stat = \"identity\") +\n  geom_text(aes(label = Freq), vjust = -0.5) +\n  xlab(\"Contacts Count\") +\n  ylab(\"Frequency\") +\n  ggtitle(\"Distribution of Companies Contacts linked to Companies\") +\n  ylim(0, max(frequency_df$Freq) * 1.2)\n\n\n\n\n\n\nMost companies have 1-2 Company Contacts, which makes companies with 3 or more contacts an anomaly. To further the discrepancy, we will specifically look into companies with &gt;= 3 contacts (which suggest larger size and potential revenue) and yet have undisclosed revenues.\n\n\n\n\n\n\nShow me the good stuff\nudrev_nodes &lt;- mc3_nodes %&gt;%\n  filter(is.na(revenue_omu))\n\nudrev_nodes_cc &lt;- udrev_nodes %&gt;%\n  filter(type == \"Company Contacts\") %&gt;%\n  distinct()\n\n\nudrev_edges &lt;- mc3_edges %&gt;%\n  filter(type == \"Company Contacts\") %&gt;%\n  filter(source %in% udrev_nodes_cc$id) %&gt;%\n  distinct() %&gt;%\n  rename(\"from\" = \"source\",\n         \"to\" = \"target\")\n\n# Extract edges that have more than or equal to 3 company contacts\nhigh_udrev_edges &lt;- udrev_edges %&gt;%\n  group_by(from) %&gt;%\n  mutate(count = n()) %&gt;%\n  filter(count &gt;= 3) %&gt;%\n  ungroup()\n\n\nudrev_source &lt;- high_udrev_edges %&gt;%\n  distinct(from) %&gt;%\n  rename(\"id\" = \"from\")\n\nudrev_target &lt;- high_udrev_edges %&gt;%\n  distinct(to) %&gt;%\n  rename(\"id\" = \"to\")\n\n# Bind into one dataframe\nudrev_nodes2 &lt;- bind_rows(udrev_source, udrev_target)\n\nudrev_nodes2$group &lt;- ifelse(udrev_nodes2$id %in% udrev_nodes_cc$id, \"Company Contact\", \"Company\")\n\n\n\n\n\n\n\nShow me the good stuff\nvisNetwork(\n    udrev_nodes2, \n    high_udrev_edges\n  ) %&gt;%\n  visIgraphLayout(\n    layout = \"layout_with_fr\"\n  ) %&gt;%\n  visGroups(groupname = \"Company\",\n            color = \"#00BA38\") %&gt;%\n  visGroups(groupname = \"Company Contact\",\n            color = \"#619CFF\") %&gt;%\n  visLegend() %&gt;%\n  visEdges(\n    arrows = \"to\"\n  ) %&gt;%\n  visOptions(\n    highlightNearest = list(enabled = T, degree = 2, hover = T),\n    nodesIdSelection = TRUE,\n    selectedBy = \"group\",\n    collapse = TRUE)\n\n\n\n\n\n\n\nWhile absent data for revenue is not an immediate justification to label these companies as participating in illegal activities, the noted lack of revenue being declared coupled with their suggested size (inconclusive without more information) warrants deeper investigation and monitoring."
  },
  {
    "objectID": "take-home_Ex/take-home_Ex03/take-home_Ex03.html#conclusion",
    "href": "take-home_Ex/take-home_Ex03/take-home_Ex03.html#conclusion",
    "title": "Take-Home Exercise 3",
    "section": "",
    "text": "Delving into the distribution and spread of factors such as revenue and ownership has provided insights that have been explored through basic graph and network graph visualisations. While certain anomalous areas were detected, there is insufficient data to conclusively identify any individual(s) or company participating in illegal activities.\nFurther work may include standardisation of product service categories/keywords so that the data can be cleanly segmented by product type. It would also be helpful if companies are labeled private/public to begin with, that we may compare within each category."
  }
]