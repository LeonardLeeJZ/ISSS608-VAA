[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "Leonard Lee",
    "section": "",
    "text": "Leonard Lee is an aspiring student of Data Analytics, who has been an infantry officer since 2013. When not honing his hand-eye coordination in the digital realm, he enjoys in-line skating and most sports."
  },
  {
    "objectID": "about.html#education",
    "href": "about.html#education",
    "title": "Leonard Lee",
    "section": "Education",
    "text": "Education\nUniversity of Glasgow, Scotland | United Kingdom\nBachelor of Science in Psychology | Sept 2014 - Sept 2018"
  },
  {
    "objectID": "about.html#experience",
    "href": "about.html#experience",
    "title": "Leonard Lee",
    "section": "Experience",
    "text": "Experience\nSingapore Armed Forces | Training Development Officer | April 2022 - present\nSingapore Armed Forces | Infantry Officer | July 2013 - present"
  },
  {
    "objectID": "hands-on_Ex/hands-on_Ex01/Hands-on_Ex01.html",
    "href": "hands-on_Ex/hands-on_Ex01/Hands-on_Ex01.html",
    "title": "Hands-On_Exercise 1",
    "section": "",
    "text": "The code chunk below uses p_load function of pacman package to check if tidyverse packages are installed in the computer. If they are, then they will be launched into R.\n\npacman::p_load(tidyverse, readr)\n\n\n\n\n\nexam_data <- read_csv(\"data/Exam_data.csv\")\n\nRows: 322 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): ID, CLASS, GENDER, RACE\ndbl (3): ENGLISH, MATHS, SCIENCE\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message."
  },
  {
    "objectID": "hands-on_Ex/hands-on_Ex02/Hands-on_Ex02.html",
    "href": "hands-on_Ex/hands-on_Ex02/Hands-on_Ex02.html",
    "title": "Hands-on_Ex02",
    "section": "",
    "text": "pacman::p_load(ggrepel, patchwork,\n               ggthemes, hrbrthemes,\n               tidyverse)"
  },
  {
    "objectID": "hands-on_Ex/hands-on_Ex02/Hands-on_Ex02.html#ggrepel",
    "href": "hands-on_Ex/hands-on_Ex02/Hands-on_Ex02.html#ggrepel",
    "title": "Hands-on_Ex02",
    "section": "1: ggrepel",
    "text": "1: ggrepel\n\nOriginalWith ggrepel\n\n\n\nggplot(data=exam_data, aes(x= MATHS, y=ENGLISH)) + geom_point() + geom_smooth(method=lm, size=0.5) +\ngeom_label(aes(label = ID), hjust = .5, vjust = -.5) + coord_cartesian(xlim=c(0,100), ylim=c(0,100)) + ggtitle(\"English scores versus Maths scores for Primary 3\")\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  geom_label_repel(aes(label = ID), \n                   fontface = \"bold\") +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  ggtitle(\"English scores versus Maths scores for Primary 3\")"
  },
  {
    "objectID": "hands-on_Ex/hands-on_Ex02/Hands-on_Ex02.html#ggplot-2-themes",
    "href": "hands-on_Ex/hands-on_Ex02/Hands-on_Ex02.html#ggplot-2-themes",
    "title": "Hands-on_Ex02",
    "section": "2: ggplot 2 themes",
    "text": "2: ggplot 2 themes\n\nOriginalwith ggplot theme\n\n\n\nggplot(data=exam_data, aes(x = MATHS)) + geom_histogram(bins=20, boundary = 100, color=\"grey25\", fill=\"grey90\") + theme_gray() + ggtitle(\"Distribution of Maths scores\")\n\n\n\n\n\n\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_economist()"
  },
  {
    "objectID": "hands-on_Ex/hands-on_Ex02/Hands-on_Ex02.html#hrbrthemes",
    "href": "hands-on_Ex/hands-on_Ex02/Hands-on_Ex02.html#hrbrthemes",
    "title": "Hands-on_Ex02",
    "section": "3: hrbrthemes",
    "text": "3: hrbrthemes\nggplot(data=exam_data, aes(x = MATHS)) + geom_histogram(bins=20, boundary = 100, color=“grey25”, fill=“grey90”) + ggtitle(“Distribution of Maths scores”) + theme_ipsum()\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_ipsum(axis_title_size = 18,\n              base_size = 15,\n              grid = \"Y\")"
  },
  {
    "objectID": "hands-on_Ex/hands-on_Ex02/Hands-on_Ex02.html#creating-individual-graphs",
    "href": "hands-on_Ex/hands-on_Ex02/Hands-on_Ex02.html#creating-individual-graphs",
    "title": "Hands-on_Ex02",
    "section": "4: Creating Individual Graphs",
    "text": "4: Creating Individual Graphs\n\np1p2p3\n\n\n\np1 <- ggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") + \n  coord_cartesian(xlim=c(0,100)) +\n  ggtitle(\"Distribution of Maths scores\")\n\n\n\n\np2 <- ggplot(data=exam_data, \n             aes(x = ENGLISH)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  coord_cartesian(xlim=c(0,100)) +\n  ggtitle(\"Distribution of English scores\")\n\n\n\n\np3 <- ggplot(data=exam_data, \n             aes(x= MATHS, \n                 y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  ggtitle(\"English scores versus Maths scores for Primary 3\")"
  },
  {
    "objectID": "hands-on_Ex/hands-on_Ex02/Hands-on_Ex02.html#merging-graphs",
    "href": "hands-on_Ex/hands-on_Ex02/Hands-on_Ex02.html#merging-graphs",
    "title": "Hands-on_Ex02",
    "section": "5.1 Merging Graphs",
    "text": "5.1 Merging Graphs\n\nMerging p1 & p2Merging p1 p2 p3\n\n\n\np1 + p2\n\n\n\n\n\n\n\n(p1 / p2) | p3"
  },
  {
    "objectID": "hands-on_Ex/hands-on_Ex02/Hands-on_Ex02.html#modifying-composite-graph",
    "href": "hands-on_Ex/hands-on_Ex02/Hands-on_Ex02.html#modifying-composite-graph",
    "title": "Hands-on_Ex02",
    "section": "5.2 Modifying Composite Graph",
    "text": "5.2 Modifying Composite Graph\n\nAdd TagAdd insertComposite using patchwork and ggtheme\n\n\n\n((p1 / p2) | p3) + \n  plot_annotation(tag_levels = 'I')\n\n\n\n\n\n\n\np3 + inset_element(p2, \n                   left = 0.02, \n                   bottom = 0.7, \n                   right = 0.5, \n                   top = 1)\n\n\n\n\n\n\n\npatchwork <- (p1 / p2) | p3\npatchwork & theme_economist()"
  },
  {
    "objectID": "hands-on_Ex/hands-on_Ex03/Hands-on_Ex03.html",
    "href": "hands-on_Ex/hands-on_Ex03/Hands-on_Ex03.html",
    "title": "Hands-on_Ex03",
    "section": "",
    "text": "pacman::p_load(ggiraph, plotly, \n               patchwork, DT, tidyverse)"
  },
  {
    "objectID": "hands-on_Ex/hands-on_Ex03/Hands-on_Ex03.html#creating-interactive-graph-using-ggiraph",
    "href": "hands-on_Ex/hands-on_Ex03/Hands-on_Ex03.html#creating-interactive-graph-using-ggiraph",
    "title": "Hands-on_Ex03",
    "section": "Creating interactive graph using ggiraph",
    "text": "Creating interactive graph using ggiraph\n\np <- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(\n    aes(tooltip = ID),\n    stackgroups = TRUE, \n    binwidth = 1, \n    method = \"histodot\") +\n  scale_y_continuous(NULL, \n                     breaks = NULL)\ngirafe(\n  ggobj = p,\n  width_svg = 6,\n  height_svg = 6*0.618\n)"
  },
  {
    "objectID": "hands-on_Ex/hands-on_Ex03/Hands-on_Ex03.html#displaying-multiple-information",
    "href": "hands-on_Ex/hands-on_Ex03/Hands-on_Ex03.html#displaying-multiple-information",
    "title": "Hands-on_Ex03",
    "section": "Displaying Multiple information",
    "text": "Displaying Multiple information\n\nexam_data$tooltip <- c(paste0(     \n  \"Name = \", exam_data$ID,         \n  \"\\n Class = \", exam_data$CLASS)) \n\np <- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(\n    aes(tooltip = exam_data$tooltip), \n    stackgroups = TRUE,\n    binwidth = 1,\n    method = \"histodot\") +\n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(\n  ggobj = p,\n  width_svg = 8,\n  height_svg = 8*0.618\n)"
  },
  {
    "objectID": "hands-on_Ex/hands-on_Ex03/Hands-on_Ex03.html#customising-tooltip-style",
    "href": "hands-on_Ex/hands-on_Ex03/Hands-on_Ex03.html#customising-tooltip-style",
    "title": "Hands-on_Ex03",
    "section": "Customising Tooltip Style",
    "text": "Customising Tooltip Style\n\ntooltip_css <- \"background-color:white; #<<\nfont-style:bold; color:black;\" #<<\n\np <- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(tooltip = ID),                   \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618,\n  options = list(    #<<\n    opts_tooltip(    #<<\n      css = tooltip_css)) #<<\n) \n\n\n\n\n\n\nDisplaying Statistics\n\ntooltip <- function(y, ymax, accuracy = .01) {\n  mean <- scales::number(y, accuracy = accuracy)\n  sem <- scales::number(ymax - y, accuracy = accuracy)\n  paste(\"Mean maths scores:\", mean, \"+/-\", sem)\n}\n\ngg_point <- ggplot(data=exam_data, \n                   aes(x = RACE),\n) +\n  stat_summary(aes(y = MATHS, \n                   tooltip = after_stat(  \n                     tooltip(y, ymax))),  \n    fun.data = \"mean_se\", \n    geom = GeomInteractiveCol,  \n    fill = \"light blue\"\n  ) +\n  stat_summary(aes(y = MATHS),\n    fun.data = mean_se,\n    geom = \"errorbar\", width = 0.2, size = 0.2\n  )\n\ngirafe(ggobj = gg_point,\n       width_svg = 8,\n       height_svg = 8*0.618)\n\n\n\n\n\n\n\nHover Effect\n\np <- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(           \n    aes(data_id = CLASS),             \n    stackgroups = TRUE,               \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618                      \n)                     \n\n\n\n\n\n\n\nStyling Hover Effect\n\np <- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(data_id = CLASS),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618,\n  options = list(                        \n    opts_hover(css = \"fill: #202020;\"),  \n    opts_hover_inv(css = \"opacity:0.2;\") \n  )                                        \n) \n\n\n\n\n\n\n\nCombining tooltip and hover\n\np <- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(tooltip = CLASS, \n        data_id = CLASS),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618,\n  options = list(                        \n    opts_hover(css = \"fill: #202020;\"),  \n    opts_hover_inv(css = \"opacity:0.2;\") \n  )                                        \n)                                 \n\n\n\n\n\n\n\nClick effect (using onclick)\n\nexam_data$onclick <- sprintf(\"window.open(\\\"%s%s\\\")\",\n\"https://www.moe.gov.sg/schoolfinder?journey=Primary%20school\",\nas.character(exam_data$ID))\n\np <- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(onclick = onclick),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618)"
  },
  {
    "objectID": "hands-on_Ex/hands-on_Ex03/Hands-on_Ex03.html#coordinated-multiple-views-with-ggiraph",
    "href": "hands-on_Ex/hands-on_Ex03/Hands-on_Ex03.html#coordinated-multiple-views-with-ggiraph",
    "title": "Hands-on_Ex03",
    "section": "Coordinated Multiple Views with ggiraph",
    "text": "Coordinated Multiple Views with ggiraph\nIn order to build a coordinated multiple views as shown in the example above, the following programming strategy will be used:\n\nAppropriate interactive functions of ggiraph will be used to create the multiple views.\npatchwork function of patchwork package will be used inside girafe function to create the interactive coordinated multiple views.\n\n\np1 <- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(data_id = ID),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +  \n  coord_cartesian(xlim=c(0,100)) + \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\n\np2 <- ggplot(data=exam_data, \n       aes(x = ENGLISH)) +\n  geom_dotplot_interactive(              \n    aes(data_id = ID),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") + \n  coord_cartesian(xlim=c(0,100)) + \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\n\ngirafe(code = print(p1 + p2), \n       width_svg = 6,\n       height_svg = 3,\n       options = list(\n         opts_hover(css = \"fill: #202020;\"),\n         opts_hover_inv(css = \"opacity:0.2;\")\n         )\n       )"
  },
  {
    "objectID": "hands-on_Ex/hands-on_Ex03/Hands-on_Ex03.html#interactive-data-visualisation-plotly",
    "href": "hands-on_Ex/hands-on_Ex03/Hands-on_Ex03.html#interactive-data-visualisation-plotly",
    "title": "Hands-on_Ex03",
    "section": "Interactive Data Visualisation (Plotly)",
    "text": "Interactive Data Visualisation (Plotly)\nTwo methods; plot_ly() and ggplotly()\n\nplot_ly(data = exam_data, \n             x = ~MATHS, \n             y = ~ENGLISH)\n\n\n\n\n\n\nInteractive Scatter Plot (ggplotly())\n\np <- ggplot(data=exam_data, \n            aes(x = MATHS,\n                y = ENGLISH)) +\n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\nggplotly(p)"
  },
  {
    "objectID": "hands-on_Ex/hands-on_Ex03/Hands-on_Ex03.html#coordinated-multiple-view-with-plotly",
    "href": "hands-on_Ex/hands-on_Ex03/Hands-on_Ex03.html#coordinated-multiple-view-with-plotly",
    "title": "Hands-on_Ex03",
    "section": "Coordinated Multiple View with plotly",
    "text": "Coordinated Multiple View with plotly\nThe creation of a coordinated linked plot by using plotly involves three steps:\n\nhighlight_key() of plotly package is used as shared data.\ntwo scatterplots will be created by using ggplot2 functions.\nlastly, subplot() of plotly package is used to place them next to each other side-by-side.\n\n\nd <- highlight_key(exam_data)\np1 <- ggplot(data=d, \n            aes(x = MATHS,\n                y = ENGLISH)) +\n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\n\np2 <- ggplot(data=d, \n            aes(x = MATHS,\n                y = SCIENCE)) +\n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\nsubplot(ggplotly(p1),\n        ggplotly(p2))"
  },
  {
    "objectID": "hands-on_Ex/hands-on_Ex03/Hands-on_Ex03.html#interactive-data-table---crosstalk-methods",
    "href": "hands-on_Ex/hands-on_Ex03/Hands-on_Ex03.html#interactive-data-table---crosstalk-methods",
    "title": "Hands-on_Ex03",
    "section": "Interactive Data Table - Crosstalk methods",
    "text": "Interactive Data Table - Crosstalk methods\n\nDT Package\n\nDT::datatable(exam_data, class= \"compact\")"
  },
  {
    "objectID": "hands-on_Ex/hands-on_Ex03/Hands-on_Ex03.html#linked-brushing-crosstalk",
    "href": "hands-on_Ex/hands-on_Ex03/Hands-on_Ex03.html#linked-brushing-crosstalk",
    "title": "Hands-on_Ex03",
    "section": "Linked Brushing (crosstalk)",
    "text": "Linked Brushing (crosstalk)\n\nd <- highlight_key(exam_data) \np <- ggplot(d, \n            aes(ENGLISH, \n                MATHS)) + \n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\n\ngg <- highlight(ggplotly(p),        \n                \"plotly_selected\")  \n\ncrosstalk::bscols(gg,               \n                  DT::datatable(d), \n                  widths = 5)"
  },
  {
    "objectID": "hands-on_Ex/hands-on_Ex03/Hands-on_Ex03.html#loading-packages",
    "href": "hands-on_Ex/hands-on_Ex03/Hands-on_Ex03.html#loading-packages",
    "title": "Hands-on_Ex03",
    "section": "Loading Packages",
    "text": "Loading Packages\n\npacman::p_load(readxl, gifski, gapminder,\n               plotly, gganimate, tidyverse)"
  },
  {
    "objectID": "hands-on_Ex/hands-on_Ex03/Hands-on_Ex03.html#importing-data",
    "href": "hands-on_Ex/hands-on_Ex03/Hands-on_Ex03.html#importing-data",
    "title": "Hands-on_Ex03",
    "section": "Importing Data",
    "text": "Importing Data\n\ncol <- c(\"Country\", \"Continent\")\nglobalPop <- read_xls(\"data/GlobalPopulation.xls\",\n                      sheet=\"Data\") %>%\n  mutate_each_(funs(factor(.)), col) %>%\n  mutate(Year = as.integer(Year))"
  },
  {
    "objectID": "hands-on_Ex/hands-on_Ex03/Hands-on_Ex03.html#animated-data-visualisation-gganimate-methods",
    "href": "hands-on_Ex/hands-on_Ex03/Hands-on_Ex03.html#animated-data-visualisation-gganimate-methods",
    "title": "Hands-on_Ex03",
    "section": "Animated Data Visualisation: gganimate methods",
    "text": "Animated Data Visualisation: gganimate methods\n\ntransition_*() defines how the data should be spread out and how it relates to itself across time.\nview_*() defines how the positional scales should change along the animation.\nshadow_*() defines how data from other points in time should be presented in the given point in time.\nenter_()/exit_() defines how new data should appear and how old data should disappear during the course of the animation.\nease_aes() defines how different aesthetics should be eased during transitions.\n\n\nStatic Population Bubble Plot\n\nggplot(globalPop, aes(x = Old, y = Young, \n                      size = Population, \n                      colour = Country)) +\n  geom_point(alpha = 0.7, \n             show.legend = FALSE) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(title = 'Year: {frame_time}', \n       x = '% Aged', \n       y = '% Young')\n\n\n\n\n\n\nAnimated Bubble Plot\n\nggplot(globalPop, aes(x = Old, y = Young, \n                      size = Population, \n                      colour = Country)) +\n  geom_point(alpha = 0.7, \n             show.legend = FALSE) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(title = 'Year: {frame_time}', \n       x = '% Aged', \n       y = '% Young') +\n  transition_time(Year) +       \n  ease_aes('linear')"
  },
  {
    "objectID": "hands-on_Ex/hands-on_Ex03/Hands-on_Ex03.html#adv-plotly",
    "href": "hands-on_Ex/hands-on_Ex03/Hands-on_Ex03.html#adv-plotly",
    "title": "Hands-on_Ex03",
    "section": "ADV: plotly",
    "text": "ADV: plotly\nIn Plotly R package, both ggplotly() and plot_ly() support key frame animations through the frame argument/aesthetic. They also support an ids argument/aesthetic to ensure smooth transitions between objects with the same id (which helps facilitate object constancy).\n\nAnimated Bubble Plot: ggplotly() method\n\ngg <- ggplot(globalPop, \n       aes(x = Old, \n           y = Young, \n           size = Population, \n           colour = Country)) +\n  geom_point(aes(size = Population,\n                 frame = Year),\n             alpha = 0.7, \n             show.legend = FALSE) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(x = '% Aged', \n       y = '% Young')\n\nggplotly(gg)\n\n\n\n\n\n\n\nAnimated Bubble Plot: plot_ly() method\n\nbp <- globalPop %>%\n  plot_ly(x = ~Old, \n          y = ~Young, \n          size = ~Population, \n          color = ~Continent, \n          frame = ~Year, \n          text = ~Country, \n          hoverinfo = \"text\",\n          type = 'scatter',\n          mode = 'markers'\n          )\nbp"
  },
  {
    "objectID": "in-class_Ex/In-class_Ex01/In-class_Ex01.html",
    "href": "in-class_Ex/In-class_Ex01/In-class_Ex01.html",
    "title": "In-class_Ex01",
    "section": "",
    "text": "Tableau Introduction\nRefer to Tableau Public Space for In-class_Ex01 here:\nIn-Class_Ex01"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "ISSS608-VAA",
    "section": "",
    "text": "Welcome to ISSS608 Visual Analytics and Applications. In this website, you will find Leonard Lee’s coursework prepared for this course."
  }
]