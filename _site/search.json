[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "Leonard Lee",
    "section": "",
    "text": "Leonard Lee is an aspiring student of Data Analytics, and has been an infantry officer since 2013. When not honing his hand-eye coordination in the digital realm, he enjoys in-line skating and most sports."
  },
  {
    "objectID": "about.html#education",
    "href": "about.html#education",
    "title": "Leonard Lee",
    "section": "Education",
    "text": "Education\nUniversity of Glasgow, Scotland | United Kingdom\nBachelor of Science in Psychology | Sept 2014 - Sept 2018"
  },
  {
    "objectID": "about.html#experience",
    "href": "about.html#experience",
    "title": "Leonard Lee",
    "section": "Experience",
    "text": "Experience\nSingapore Armed Forces | Training Development Officer | April 2022 - present\nSingapore Armed Forces | Infantry Officer | July 2013 - present"
  },
  {
    "objectID": "hands-on_Ex/hands-on_Ex01/Hands-on_Ex01.html",
    "href": "hands-on_Ex/hands-on_Ex01/Hands-on_Ex01.html",
    "title": "Hands-On_Exercise 1",
    "section": "",
    "text": "The code chunk below uses p_load function of pacman package to check if tidyverse packages are installed in the computer. If they are, then they will be launched into R.\n\npacman::p_load(tidyverse, readr)\n\n\n\n\n\nexam_data <- read_csv(\"data/Exam_data.csv\")\n\nRows: 322 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): ID, CLASS, GENDER, RACE\ndbl (3): ENGLISH, MATHS, SCIENCE\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message."
  },
  {
    "objectID": "hands-on_Ex/hands-on_Ex02/Hands-on_Ex02.html",
    "href": "hands-on_Ex/hands-on_Ex02/Hands-on_Ex02.html",
    "title": "Hands-on_Ex02",
    "section": "",
    "text": "pacman::p_load(ggrepel, patchwork,\n               ggthemes, hrbrthemes,\n               tidyverse)"
  },
  {
    "objectID": "hands-on_Ex/hands-on_Ex02/Hands-on_Ex02.html#ggrepel",
    "href": "hands-on_Ex/hands-on_Ex02/Hands-on_Ex02.html#ggrepel",
    "title": "Hands-on_Ex02",
    "section": "1: ggrepel",
    "text": "1: ggrepel\n\nOriginalWith ggrepel\n\n\n\nggplot(data=exam_data, aes(x= MATHS, y=ENGLISH)) + geom_point() + geom_smooth(method=lm, size=0.5) +\ngeom_label(aes(label = ID), hjust = .5, vjust = -.5) + coord_cartesian(xlim=c(0,100), ylim=c(0,100)) + ggtitle(\"English scores versus Maths scores for Primary 3\")\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  geom_label_repel(aes(label = ID), \n                   fontface = \"bold\") +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  ggtitle(\"English scores versus Maths scores for Primary 3\")"
  },
  {
    "objectID": "hands-on_Ex/hands-on_Ex02/Hands-on_Ex02.html#ggplot-2-themes",
    "href": "hands-on_Ex/hands-on_Ex02/Hands-on_Ex02.html#ggplot-2-themes",
    "title": "Hands-on_Ex02",
    "section": "2: ggplot 2 themes",
    "text": "2: ggplot 2 themes\n\nOriginalwith ggplot theme\n\n\n\nggplot(data=exam_data, aes(x = MATHS)) + geom_histogram(bins=20, boundary = 100, color=\"grey25\", fill=\"grey90\") + theme_gray() + ggtitle(\"Distribution of Maths scores\")\n\n\n\n\n\n\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_economist()"
  },
  {
    "objectID": "hands-on_Ex/hands-on_Ex02/Hands-on_Ex02.html#hrbrthemes",
    "href": "hands-on_Ex/hands-on_Ex02/Hands-on_Ex02.html#hrbrthemes",
    "title": "Hands-on_Ex02",
    "section": "3: hrbrthemes",
    "text": "3: hrbrthemes\nggplot(data=exam_data, aes(x = MATHS)) + geom_histogram(bins=20, boundary = 100, color=“grey25”, fill=“grey90”) + ggtitle(“Distribution of Maths scores”) + theme_ipsum()\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_ipsum(axis_title_size = 18,\n              base_size = 15,\n              grid = \"Y\")"
  },
  {
    "objectID": "hands-on_Ex/hands-on_Ex02/Hands-on_Ex02.html#creating-individual-graphs",
    "href": "hands-on_Ex/hands-on_Ex02/Hands-on_Ex02.html#creating-individual-graphs",
    "title": "Hands-on_Ex02",
    "section": "4: Creating Individual Graphs",
    "text": "4: Creating Individual Graphs\n\np1p2p3\n\n\n\np1 <- ggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") + \n  coord_cartesian(xlim=c(0,100)) +\n  ggtitle(\"Distribution of Maths scores\")\n\n\n\n\np2 <- ggplot(data=exam_data, \n             aes(x = ENGLISH)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  coord_cartesian(xlim=c(0,100)) +\n  ggtitle(\"Distribution of English scores\")\n\n\n\n\np3 <- ggplot(data=exam_data, \n             aes(x= MATHS, \n                 y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  ggtitle(\"English scores versus Maths scores for Primary 3\")"
  },
  {
    "objectID": "hands-on_Ex/hands-on_Ex02/Hands-on_Ex02.html#merging-graphs",
    "href": "hands-on_Ex/hands-on_Ex02/Hands-on_Ex02.html#merging-graphs",
    "title": "Hands-on_Ex02",
    "section": "5.1 Merging Graphs",
    "text": "5.1 Merging Graphs\n\nMerging p1 & p2Merging p1 p2 p3\n\n\n\np1 + p2\n\n\n\n\n\n\n\n(p1 / p2) | p3"
  },
  {
    "objectID": "hands-on_Ex/hands-on_Ex02/Hands-on_Ex02.html#modifying-composite-graph",
    "href": "hands-on_Ex/hands-on_Ex02/Hands-on_Ex02.html#modifying-composite-graph",
    "title": "Hands-on_Ex02",
    "section": "5.2 Modifying Composite Graph",
    "text": "5.2 Modifying Composite Graph\n\nAdd TagAdd insertComposite using patchwork and ggtheme\n\n\n\n((p1 / p2) | p3) + \n  plot_annotation(tag_levels = 'I')\n\n\n\n\n\n\n\np3 + inset_element(p2, \n                   left = 0.02, \n                   bottom = 0.7, \n                   right = 0.5, \n                   top = 1)\n\n\n\n\n\n\n\npatchwork <- (p1 / p2) | p3\npatchwork & theme_economist()"
  },
  {
    "objectID": "hands-on_Ex/hands-on_Ex03/Hands-on_Ex03.html",
    "href": "hands-on_Ex/hands-on_Ex03/Hands-on_Ex03.html",
    "title": "Hands-on_Ex03",
    "section": "",
    "text": "pacman::p_load(ggiraph, plotly, \n               patchwork, DT, tidyverse)"
  },
  {
    "objectID": "hands-on_Ex/hands-on_Ex03/Hands-on_Ex03.html#creating-interactive-graph-using-ggiraph",
    "href": "hands-on_Ex/hands-on_Ex03/Hands-on_Ex03.html#creating-interactive-graph-using-ggiraph",
    "title": "Hands-on_Ex03",
    "section": "Creating interactive graph using ggiraph",
    "text": "Creating interactive graph using ggiraph\n\np <- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(\n    aes(tooltip = ID),\n    stackgroups = TRUE, \n    binwidth = 1, \n    method = \"histodot\") +\n  scale_y_continuous(NULL, \n                     breaks = NULL)\ngirafe(\n  ggobj = p,\n  width_svg = 6,\n  height_svg = 6*0.618\n)"
  },
  {
    "objectID": "hands-on_Ex/hands-on_Ex03/Hands-on_Ex03.html#displaying-multiple-information",
    "href": "hands-on_Ex/hands-on_Ex03/Hands-on_Ex03.html#displaying-multiple-information",
    "title": "Hands-on_Ex03",
    "section": "Displaying Multiple information",
    "text": "Displaying Multiple information\n\nexam_data$tooltip <- c(paste0(     \n  \"Name = \", exam_data$ID,         \n  \"\\n Class = \", exam_data$CLASS)) \n\np <- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(\n    aes(tooltip = exam_data$tooltip), \n    stackgroups = TRUE,\n    binwidth = 1,\n    method = \"histodot\") +\n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(\n  ggobj = p,\n  width_svg = 8,\n  height_svg = 8*0.618\n)"
  },
  {
    "objectID": "hands-on_Ex/hands-on_Ex03/Hands-on_Ex03.html#customising-tooltip-style",
    "href": "hands-on_Ex/hands-on_Ex03/Hands-on_Ex03.html#customising-tooltip-style",
    "title": "Hands-on_Ex03",
    "section": "Customising Tooltip Style",
    "text": "Customising Tooltip Style\n\ntooltip_css <- \"background-color:white; #<<\nfont-style:bold; color:black;\" #<<\n\np <- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(tooltip = ID),                   \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618,\n  options = list(    #<<\n    opts_tooltip(    #<<\n      css = tooltip_css)) #<<\n) \n\n\n\n\n\n\nDisplaying Statistics\n\ntooltip <- function(y, ymax, accuracy = .01) {\n  mean <- scales::number(y, accuracy = accuracy)\n  sem <- scales::number(ymax - y, accuracy = accuracy)\n  paste(\"Mean maths scores:\", mean, \"+/-\", sem)\n}\n\ngg_point <- ggplot(data=exam_data, \n                   aes(x = RACE),\n) +\n  stat_summary(aes(y = MATHS, \n                   tooltip = after_stat(  \n                     tooltip(y, ymax))),  \n    fun.data = \"mean_se\", \n    geom = GeomInteractiveCol,  \n    fill = \"light blue\"\n  ) +\n  stat_summary(aes(y = MATHS),\n    fun.data = mean_se,\n    geom = \"errorbar\", width = 0.2, size = 0.2\n  )\n\ngirafe(ggobj = gg_point,\n       width_svg = 8,\n       height_svg = 8*0.618)\n\n\n\n\n\n\n\nHover Effect\n\np <- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(           \n    aes(data_id = CLASS),             \n    stackgroups = TRUE,               \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618                      \n)                     \n\n\n\n\n\n\n\nStyling Hover Effect\n\np <- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(data_id = CLASS),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618,\n  options = list(                        \n    opts_hover(css = \"fill: #202020;\"),  \n    opts_hover_inv(css = \"opacity:0.2;\") \n  )                                        \n) \n\n\n\n\n\n\n\nCombining tooltip and hover\n\np <- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(tooltip = CLASS, \n        data_id = CLASS),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618,\n  options = list(                        \n    opts_hover(css = \"fill: #202020;\"),  \n    opts_hover_inv(css = \"opacity:0.2;\") \n  )                                        \n)                                 \n\n\n\n\n\n\n\nClick effect (using onclick)\n\nexam_data$onclick <- sprintf(\"window.open(\\\"%s%s\\\")\",\n\"https://www.moe.gov.sg/schoolfinder?journey=Primary%20school\",\nas.character(exam_data$ID))\n\np <- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(onclick = onclick),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618)"
  },
  {
    "objectID": "hands-on_Ex/hands-on_Ex03/Hands-on_Ex03.html#coordinated-multiple-views-with-ggiraph",
    "href": "hands-on_Ex/hands-on_Ex03/Hands-on_Ex03.html#coordinated-multiple-views-with-ggiraph",
    "title": "Hands-on_Ex03",
    "section": "Coordinated Multiple Views with ggiraph",
    "text": "Coordinated Multiple Views with ggiraph\nIn order to build a coordinated multiple views as shown in the example above, the following programming strategy will be used:\n\nAppropriate interactive functions of ggiraph will be used to create the multiple views.\npatchwork function of patchwork package will be used inside girafe function to create the interactive coordinated multiple views.\n\n\np1 <- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(data_id = ID),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +  \n  coord_cartesian(xlim=c(0,100)) + \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\n\np2 <- ggplot(data=exam_data, \n       aes(x = ENGLISH)) +\n  geom_dotplot_interactive(              \n    aes(data_id = ID),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") + \n  coord_cartesian(xlim=c(0,100)) + \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\n\ngirafe(code = print(p1 + p2), \n       width_svg = 6,\n       height_svg = 3,\n       options = list(\n         opts_hover(css = \"fill: #202020;\"),\n         opts_hover_inv(css = \"opacity:0.2;\")\n         )\n       )"
  },
  {
    "objectID": "hands-on_Ex/hands-on_Ex03/Hands-on_Ex03.html#interactive-data-visualisation-plotly",
    "href": "hands-on_Ex/hands-on_Ex03/Hands-on_Ex03.html#interactive-data-visualisation-plotly",
    "title": "Hands-on_Ex03",
    "section": "Interactive Data Visualisation (Plotly)",
    "text": "Interactive Data Visualisation (Plotly)\nTwo methods; plot_ly() and ggplotly()\n\nplot_ly(data = exam_data, \n             x = ~MATHS, \n             y = ~ENGLISH)\n\n\n\n\n\n\nInteractive Scatter Plot (ggplotly())\n\np <- ggplot(data=exam_data, \n            aes(x = MATHS,\n                y = ENGLISH)) +\n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\nggplotly(p)"
  },
  {
    "objectID": "hands-on_Ex/hands-on_Ex03/Hands-on_Ex03.html#coordinated-multiple-view-with-plotly",
    "href": "hands-on_Ex/hands-on_Ex03/Hands-on_Ex03.html#coordinated-multiple-view-with-plotly",
    "title": "Hands-on_Ex03",
    "section": "Coordinated Multiple View with plotly",
    "text": "Coordinated Multiple View with plotly\nThe creation of a coordinated linked plot by using plotly involves three steps:\n\nhighlight_key() of plotly package is used as shared data.\ntwo scatterplots will be created by using ggplot2 functions.\nlastly, subplot() of plotly package is used to place them next to each other side-by-side.\n\n\nd <- highlight_key(exam_data)\np1 <- ggplot(data=d, \n            aes(x = MATHS,\n                y = ENGLISH)) +\n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\n\np2 <- ggplot(data=d, \n            aes(x = MATHS,\n                y = SCIENCE)) +\n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\nsubplot(ggplotly(p1),\n        ggplotly(p2))"
  },
  {
    "objectID": "hands-on_Ex/hands-on_Ex03/Hands-on_Ex03.html#interactive-data-table---crosstalk-methods",
    "href": "hands-on_Ex/hands-on_Ex03/Hands-on_Ex03.html#interactive-data-table---crosstalk-methods",
    "title": "Hands-on_Ex03",
    "section": "Interactive Data Table - Crosstalk methods",
    "text": "Interactive Data Table - Crosstalk methods\n\nDT Package\n\nDT::datatable(exam_data, class= \"compact\")"
  },
  {
    "objectID": "hands-on_Ex/hands-on_Ex03/Hands-on_Ex03.html#linked-brushing-crosstalk",
    "href": "hands-on_Ex/hands-on_Ex03/Hands-on_Ex03.html#linked-brushing-crosstalk",
    "title": "Hands-on_Ex03",
    "section": "Linked Brushing (crosstalk)",
    "text": "Linked Brushing (crosstalk)\n\nd <- highlight_key(exam_data) \np <- ggplot(d, \n            aes(ENGLISH, \n                MATHS)) + \n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\n\ngg <- highlight(ggplotly(p),        \n                \"plotly_selected\")  \n\ncrosstalk::bscols(gg,               \n                  DT::datatable(d), \n                  widths = 5)"
  },
  {
    "objectID": "hands-on_Ex/hands-on_Ex03/Hands-on_Ex03.html#loading-packages",
    "href": "hands-on_Ex/hands-on_Ex03/Hands-on_Ex03.html#loading-packages",
    "title": "Hands-on_Ex03",
    "section": "Loading Packages",
    "text": "Loading Packages\n\npacman::p_load(readxl, gifski, gapminder,\n               plotly, gganimate, tidyverse)"
  },
  {
    "objectID": "hands-on_Ex/hands-on_Ex03/Hands-on_Ex03.html#importing-data",
    "href": "hands-on_Ex/hands-on_Ex03/Hands-on_Ex03.html#importing-data",
    "title": "Hands-on_Ex03",
    "section": "Importing Data",
    "text": "Importing Data\n\ncol <- c(\"Country\", \"Continent\")\nglobalPop <- read_xls(\"data/GlobalPopulation.xls\",\n                      sheet=\"Data\") %>%\n  mutate_each_(funs(factor(.)), col) %>%\n  mutate(Year = as.integer(Year))"
  },
  {
    "objectID": "hands-on_Ex/hands-on_Ex03/Hands-on_Ex03.html#animated-data-visualisation-gganimate-methods",
    "href": "hands-on_Ex/hands-on_Ex03/Hands-on_Ex03.html#animated-data-visualisation-gganimate-methods",
    "title": "Hands-on_Ex03",
    "section": "Animated Data Visualisation: gganimate methods",
    "text": "Animated Data Visualisation: gganimate methods\n\ntransition_*() defines how the data should be spread out and how it relates to itself across time.\nview_*() defines how the positional scales should change along the animation.\nshadow_*() defines how data from other points in time should be presented in the given point in time.\nenter_()/exit_() defines how new data should appear and how old data should disappear during the course of the animation.\nease_aes() defines how different aesthetics should be eased during transitions.\n\n\nStatic Population Bubble Plot\n\nggplot(globalPop, aes(x = Old, y = Young, \n                      size = Population, \n                      colour = Country)) +\n  geom_point(alpha = 0.7, \n             show.legend = FALSE) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(title = 'Year: {frame_time}', \n       x = '% Aged', \n       y = '% Young')\n\n\n\n\n\n\nAnimated Bubble Plot\n\nggplot(globalPop, aes(x = Old, y = Young, \n                      size = Population, \n                      colour = Country)) +\n  geom_point(alpha = 0.7, \n             show.legend = FALSE) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(title = 'Year: {frame_time}', \n       x = '% Aged', \n       y = '% Young') +\n  transition_time(Year) +       \n  ease_aes('linear')"
  },
  {
    "objectID": "hands-on_Ex/hands-on_Ex03/Hands-on_Ex03.html#adv-plotly",
    "href": "hands-on_Ex/hands-on_Ex03/Hands-on_Ex03.html#adv-plotly",
    "title": "Hands-on_Ex03",
    "section": "ADV: plotly",
    "text": "ADV: plotly\nIn Plotly R package, both ggplotly() and plot_ly() support key frame animations through the frame argument/aesthetic. They also support an ids argument/aesthetic to ensure smooth transitions between objects with the same id (which helps facilitate object constancy).\n\nAnimated Bubble Plot: ggplotly() method\n\ngg <- ggplot(globalPop, \n       aes(x = Old, \n           y = Young, \n           size = Population, \n           colour = Country)) +\n  geom_point(aes(size = Population,\n                 frame = Year),\n             alpha = 0.7, \n             show.legend = FALSE) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(x = '% Aged', \n       y = '% Young')\n\nggplotly(gg)\n\n\n\n\n\n\n\nAnimated Bubble Plot: plot_ly() method\n\nbp <- globalPop %>%\n  plot_ly(x = ~Old, \n          y = ~Young, \n          size = ~Population, \n          color = ~Continent, \n          frame = ~Year, \n          text = ~Country, \n          hoverinfo = \"text\",\n          type = 'scatter',\n          mode = 'markers'\n          )\nbp"
  },
  {
    "objectID": "in-class_Ex/In-class_Ex01/In-class_Ex01.html",
    "href": "in-class_Ex/In-class_Ex01/In-class_Ex01.html",
    "title": "In-class Exercise 1",
    "section": "",
    "text": "Note\n\n\n\n\n\nRefer to Tableau Public Space for In-class_Ex01 here:\nIn-Class_Ex01"
  },
  {
    "objectID": "in-class_Ex/In-class_Ex03/In-class_Ex03.html",
    "href": "in-class_Ex/In-class_Ex03/In-class_Ex03.html",
    "title": "In-class Exercise 3",
    "section": "",
    "text": "Note\n\n\n\n\n\nRefer to Tableau Public Space for In-class_Ex03 here:\nIn-Class_Ex03\n\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\n\n\nRefer to Tableau Public Space for In-class_Ex03b here:\nIn-Class_Ex03b"
  },
  {
    "objectID": "in-class_Ex/In-class_Ex04/In-class_Ex04.html",
    "href": "in-class_Ex/In-class_Ex04/In-class_Ex04.html",
    "title": "In-Class Exercise 4",
    "section": "",
    "text": "Load Packages\n\npacman::p_load(rstatix, gt, patchwork, webshot2, tidyverse)\n\n#Importing the data\n\nexam_data4 <- read_csv(\"data/Exam_data.csv\")\n\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\nggplot(exam_data4,\n       aes(sample=ENGLISH)) +\n  stat_qq() +\n  stat_qq_line()\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nWe can see that the points deviate significantly from the straight diagonal line. This is a clear indication that the set of data is not normally distributed.\n\n\n##Combining Statistical Results and\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\nqq <- ggplot(exam_data4,\n       aes(sample=ENGLISH)) +\n  stat_qq() +\n  stat_qq_line()\n\nsw_t <- exam_data4 %>%\n  shapiro_test(ENGLISH) %>%\n  gt()\n\ntmp <- tempfile(fileext = '.png')\ngtsave(sw_t, tmp)\ntable_png <- png::readPNG(tmp, native = TRUE)\n\nqq + table_png"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "ISSS608-VAA",
    "section": "",
    "text": "Welcome to ISSS608 Visual Analytics and Applications. In this website, you will find Leonard Lee’s coursework prepared for this course."
  },
  {
    "objectID": "take-home_Ex/take-home_Ex01/take-home_Ex01.html",
    "href": "take-home_Ex/take-home_Ex01/take-home_Ex01.html",
    "title": "Take-Home Exercise 1",
    "section": "",
    "text": "City of Engagement, with a total population of 50,000, is a small city located at Country of Nowhere. The city serves as a service centre of an agriculture region surrounding the city. The main agriculture of the region is fruit farms and vineyards. The local council of the city is in the process of preparing the Local Plan 2023. A sample survey of 1000 representative residents had been conducted to collect data related to their household demographic and spending patterns, among other things. The city aims to use the data to assist with their major community revitalization efforts, including how to allocate a very large city renewal grant they have recently received."
  },
  {
    "objectID": "take-home_Ex/take-home_Ex01/take-home_Ex01.html#financial-dataset-summary",
    "href": "take-home_Ex/take-home_Ex01/take-home_Ex01.html#financial-dataset-summary",
    "title": "Take-Home Exercise 1",
    "section": "3.1 Financial Dataset Summary",
    "text": "3.1 Financial Dataset Summary\n\n\nShow me the good stuff\nHmisc::describe(Fdata)\n\n\nFdata \n\n 4  Variables      1513636  Observations\n--------------------------------------------------------------------------------\nparticipantId \n       n  missing distinct     Info     Mean      Gmd      .05      .10 \n 1513636        0     1011        1    480.9    341.2       43       86 \n     .25      .50      .75      .90      .95 \n     222      464      726      918      967 \n\nlowest :    0    1    2    3    4, highest: 1006 1007 1008 1009 1010\n--------------------------------------------------------------------------------\ntimestamp \n                  n             missing            distinct                Info \n            1513636                   0               87366                   1 \n               Mean                 Gmd                 .05                 .10 \n2022-08-26 05:00:48            10684501 2022-03-14 14:00:00 2022-03-31 07:20:00 \n                .25                 .50                 .75                 .90 \n2022-05-24 13:25:00 2022-08-25 15:00:00 2022-11-27 07:25:00 2023-01-22 10:20:00 \n                .95 \n2023-02-09 20:10:00 \n\nlowest : 2022-03-01 00:00:00 2022-03-01 04:50:00 2022-03-01 05:30:00 2022-03-01 05:40:00 2022-03-01 05:45:00\nhighest: 2023-02-28 23:35:00 2023-02-28 23:40:00 2023-02-28 23:45:00 2023-02-28 23:50:00 2023-02-28 23:55:00\n--------------------------------------------------------------------------------\ncategory \n       n  missing distinct \n 1513636        0        6 \n                                                                      \nValue           Education           Food     Recreation RentAdjustment\nFrequency            3319         790051         296013            131\nProportion          0.002          0.522          0.196          0.000\n                                        \nValue             Shelter           Wage\nFrequency           11463         412659\nProportion          0.008          0.273\n--------------------------------------------------------------------------------\namount \n       n  missing distinct     Info     Mean      Gmd      .05      .10 \n 1513636        0     6690    0.981    20.05    66.15  -21.050  -15.182 \n     .25      .50      .75      .90      .95 \n  -5.594   -4.000   21.598  107.467  159.561 \n\nlowest : -1562.73 -1556.36 -1499.25 -1475.67 -1458.69\nhighest: 4059.86  4069.45  4078.12  4085.39  4096.53 \n--------------------------------------------------------------------------------"
  },
  {
    "objectID": "take-home_Ex/take-home_Ex01/take-home_Ex01.html#joviality-dataset-summary",
    "href": "take-home_Ex/take-home_Ex01/take-home_Ex01.html#joviality-dataset-summary",
    "title": "Take-Home Exercise 1",
    "section": "3.2 Joviality Dataset Summary",
    "text": "3.2 Joviality Dataset Summary\n\n\nShow me the good stuff\nHmisc::describe(Jdata)\n\n\nJdata \n\n 7  Variables      1011  Observations\n--------------------------------------------------------------------------------\nparticipantId \n       n  missing distinct     Info     Mean      Gmd      .05      .10 \n    1011        0     1011        1      505    337.3     50.5    101.0 \n     .25      .50      .75      .90      .95 \n   252.5    505.0    757.5    909.0    959.5 \n\nlowest :    0    1    2    3    4, highest: 1006 1007 1008 1009 1010\n--------------------------------------------------------------------------------\nhouseholdSize \n       n  missing distinct     Info     Mean      Gmd \n    1011        0        3    0.886    1.964   0.8635 \n                            \nValue          1     2     3\nFrequency    337   373   301\nProportion 0.333 0.369 0.298\n\nFor the frequency table, variable is rounded to the nearest 0.02\n--------------------------------------------------------------------------------\nhaveKids \n       n  missing distinct \n    1011        0        2 \n                      \nValue      FALSE  TRUE\nFrequency    710   301\nProportion 0.702 0.298\n--------------------------------------------------------------------------------\nage \n       n  missing distinct     Info     Mean      Gmd      .05      .10 \n    1011        0       43    0.999    39.07     14.3       20       22 \n     .25      .50      .75      .90      .95 \n      29       39       50       56       58 \n\nlowest : 18 19 20 21 22, highest: 56 57 58 59 60\n--------------------------------------------------------------------------------\neducationLevel \n       n  missing distinct \n    1011        0        4 \n                                                                      \nValue                Bachelors            Graduate HighSchoolOrCollege\nFrequency                  232                 170                 525\nProportion               0.229               0.168               0.519\n                              \nValue                      Low\nFrequency                   84\nProportion               0.083\n--------------------------------------------------------------------------------\ninterestGroup \n       n  missing distinct \n    1011        0       10 \n                                                                      \nValue          A     B     C     D     E     F     G     H     I     J\nFrequency    102    91   102    96    83   106   108   111    96   116\nProportion 0.101 0.090 0.101 0.095 0.082 0.105 0.107 0.110 0.095 0.115\n--------------------------------------------------------------------------------\njoviality \n       n  missing distinct     Info     Mean      Gmd      .05      .10 \n    1011        0     1011        1   0.4938   0.3364  0.05642  0.10871 \n     .25      .50      .75      .90      .95 \n 0.24007  0.47754  0.74682  0.90645  0.96024 \n\nlowest : 0.000204  0.000265  0.000985  0.0013658 0.0016267\nhighest: 0.992602  0.997605  0.997671  0.998644  0.999234 \n--------------------------------------------------------------------------------"
  },
  {
    "objectID": "take-home_Ex/take-home_Ex01/take-home_Ex01.html#correcting-demographic-data-format-jdata",
    "href": "take-home_Ex/take-home_Ex01/take-home_Ex01.html#correcting-demographic-data-format-jdata",
    "title": "Take-Home Exercise 1",
    "section": "3.3 Correcting Demographic Data Format [Jdata]",
    "text": "3.3 Correcting Demographic Data Format [Jdata]\n\n\n\n\n\n\nNote\n\n\n\n\n\n\nparticipantId is currently classified as  instead of nominal, and is cast to  class using as.character().\neducationLevel is currently classified as  categorical data, and is cast as factor type using the ordered() function, in accordance to its inherent hierarchy.\nhouseholdSize and interestGroup are classified as  and  respectively despite being categorical in nature. The two variables are cast as factors using as.factor()\n\n\n\n\n\n\nShow me the good stuff\nJdata_new <- Jdata %>%\n  #change PariticipantId to <chr>\n  mutate(participantId = as.character(Jdata$participantId),\n         \n  #update educationaLevel with ordinal scale\n  educationLevel = ordered(Jdata$educationLevel, levels = c(\"Graduate\", \"Bachelors\", \"HighSchoolOrCollege\", \"Low\")),\n  \n  # Cast householdSize and interestGroup as factors\n  householdSize = as.factor(Jdata$householdSize),\n  interestGroup = as.factor(Jdata$interestGroup)\n  )"
  },
  {
    "objectID": "take-home_Ex/take-home_Ex01/take-home_Ex01.html#correcting-financial-data-format-fdata",
    "href": "take-home_Ex/take-home_Ex01/take-home_Ex01.html#correcting-financial-data-format-fdata",
    "title": "Take-Home Exercise 1",
    "section": "3.4.1 Correcting Financial Data Format [Fdata]",
    "text": "3.4.1 Correcting Financial Data Format [Fdata]\n\n\n\n\n\n\nNote\n\n\n\n\n\n\nparticipantId is currently classified as  instead of nominal, and is cast to  class using as.character().\ncategory is classified as , and is cast as factor using as.factor()\n\n\n\n\n\n\nShow me the good stuff\nFdata_new <- Fdata %>%\n  #change PariticipantId to <chr>\n  mutate(participantId = as.character(Fdata$participantId),\n         \n  #Extract Year-Month from timestamp\n  YMDate = paste0(year(timestamp), \"-\", sprintf(\"%02d\", month(timestamp))),\n         \n  # Cast householdSize and interestGroup as factors\n  category = as.factor(Fdata$category),\n  \n  # Round amount to 2dp\n  amount = as.integer(round(amount, digits = 2))\n  ) %>%\n  \n  # remove original timestamp column\n  select(-timestamp) %>%\n  \n  #sort by ParticipantId\n  arrange(participantId)"
  },
  {
    "objectID": "take-home_Ex/take-home_Ex01/take-home_Ex01.html#pivoting-financial-data-fdata_new",
    "href": "take-home_Ex/take-home_Ex01/take-home_Ex01.html#pivoting-financial-data-fdata_new",
    "title": "Take-Home Exercise 1",
    "section": "3.4.2 Pivoting Financial Data [Fdata_new]",
    "text": "3.4.2 Pivoting Financial Data [Fdata_new]\n\n\nShow me the good stuff\nPivot_Fdata <- Fdata_new %>%\n               #Define row groups\n               group_by(participantId, YMDate) %>%\n  \n               # Sum total amount per category for each month\n               summarise(Education = sum(amount[category == \"Education\"]),\n                         Food = sum(amount[category == \"Food\"]),\n                         Shelter = sum(amount[category == \"Shelter\"]),\n                         Recreation = sum(amount[category == \"Recreation\"]),\n                         RentAdjmt = sum(amount[category == \"RentAdjustment\"]),\n                         Wage = sum(amount[category == \"Wage\"])) %>%\n                ungroup()\n  \nhead(Pivot_Fdata, n = 3)\n\n\n# A tibble: 3 × 8\n  participantId YMDate  Education  Food Shelter Recreation RentAdjmt  Wage\n  <chr>         <chr>       <int> <int>   <int>      <int>     <int> <int>\n1 0             2022-03       -76  -259   -1108       -335         0 11902\n2 0             2022-04       -38  -255    -554       -213         0  8610\n3 0             2022-05       -38  -257    -554       -368         0  9020"
  },
  {
    "objectID": "take-home_Ex/take-home_Ex01/take-home_Ex01.html#establishing-demographic-data-groups",
    "href": "take-home_Ex/take-home_Ex01/take-home_Ex01.html#establishing-demographic-data-groups",
    "title": "Take-Home Exercise 1",
    "section": "4.1 Establishing Demographic Data Groups",
    "text": "4.1 Establishing Demographic Data Groups\n\n4.1.1 Age Groups\nThrough a dotplot, we see that age distribution across the participants is spread between 18 to 60, with minor fluctuations.\n\n\nShow me the good stuff\n# Computing min and max age to annotate plot\nmin_age <- min(Joined_data$age)\nmax_age <- max(Joined_data$age)\n\n\ndem_age <- ggplot(Joined_data, aes(x = age)) +\n  geom_dotplot(binwidth = 1,\n               stackratio = 1.2,\n               stackdir = \"up\",\n               fill = \"#00BF7D\", #< Fill colour same as bar charts\n               color = NA,\n               dotsize = 0.6) +\n  labs(title = \"Age\",\n       x = NULL,\n       y = NULL)\n\ndem_age2 <-dem_age + \n            annotate(geom = \"text\", x = min_age, y = 0.83,\n            label = paste0(\"Youngest:\\n\", min_age)) + #< add text annotation to show age range\n            annotate(geom = \"text\", x = max_age, y = 0.83,\n            label = paste0(\"Oldest:\\n\", max_age)) +\n            theme(axis.text.y = element_blank(), #< remove unnecessary elements from plot\n            panel.grid.major = element_blank())\ndem_age2\n\n\n\n\n\n\nParticipants are further grouped by age into four categories, each encompassing approximately 10 years of age range:\n18-29, 30-39, 40-49, 50-60"
  },
  {
    "objectID": "take-home_Ex/take-home_Ex01/take-home_Ex01.html#grouping-participants-by-age",
    "href": "take-home_Ex/take-home_Ex01/take-home_Ex01.html#grouping-participants-by-age",
    "title": "Take-Home Exercise 1",
    "section": "Grouping Participants by Age",
    "text": "Grouping Participants by Age\n\nCodeDistribution Barchart\n\n\n\n\nShow me the good stuff\nJoined_data$ageGroup <- as.factor(cut(Joined_data$age,\n                                        breaks = c(0,29,39,49,60),\n                                        labels = c(\"18-29\", \"30-39\", \"40-49\", \"50-60\")))\n\n\n\n\n\n\nShow me the good stuff\n# Barchart of ageGroup\ndem_agegrp<- ggplot(Joined_data, aes(x = ageGroup)) +\n            geom_bar() +\n            labs(title = \"Even Distribution of Participants across Age Groups\", #< Linebreak added to title so it does not get truncated\n                  x = \"Age Group\",\n                  y = NULL) +\n            geom_text(stat = \"count\",\n                      aes(label = after_stat(count)),\n                      vjust = -1) +\n            ylim(0,400) + #< Same y-axis limits for both age and wage plots to standardise\n            theme(text = element_text(size = 12))\n\ndem_agegrp"
  },
  {
    "objectID": "take-home_Ex/take-home_Ex01/take-home_Ex01.html#exploratory-data-analysis",
    "href": "take-home_Ex/take-home_Ex01/take-home_Ex01.html#exploratory-data-analysis",
    "title": "Take-Home Exercise 1",
    "section": "5 Exploratory Data Analysis",
    "text": "5 Exploratory Data Analysis\n\n5.1 Joviality\nThe survey returned a range of Joviality scores between 0 and 1, and it is assumed that 1 is the maximum score to which one is most Jovial (or happy), and 0 is conversely the minimum score to which indicates the lowest possible state of happiness.\n\n\nNormality Testing and Distribution\n\nQQ PlotShapiro-Wilk TestDistribution\n\n\n\n\nShow me the good stuff\nset.seed(1234)\nqqnorm(Joined_data$joviality)\nqqline(Joined_data$joviality)\n\n\n\n\n\nThe qqplot compares the distribution of the data against the expected normal distribution. As the points deviate significantly from the line, the qqplot suggests that the data is not normally distributed.\n\n\n\n\nShow me the good stuff\nshapiro.test(Joined_data$joviality)\n\n\n\n    Shapiro-Wilk normality test\n\ndata:  Joined_data$joviality\nW = 0.95039, p-value < 2.2e-16\n\n\nThe Shapiro-Wilk test is a widely used method to test for normality. As p < 0.05, there is sufficient statistical power to reject the null hypothesis that the data is normally distributed.\n\n\n\n\nShow me the good stuff\nmean_j <- mean(Joined_data$joviality)\nmed_j <- median(Joined_data$joviality)\nstd_j <- sd(Joined_data$joviality)\n\nggplot(Joined_data, aes(x = joviality)) + \n      geom_histogram(aes(y = ..density..),\n                    binwidth = 0.05, \n                    fill = \"#CCFF99\",\n                    color = \"grey\") +\n      stat_function(fun = dnorm,\n                args = list(mean = mean_j,\n                            sd = std_j),\n                col = \"skyblue\",\n                linewidth = 1) +\n      geom_vline(aes(xintercept = mean_j),\n                colour=\"#4d5887\", linewidth = 0.8, linetype = \"dashed\") +\n      annotate(geom = \"text\", x = mean_j + 0.12, y = 1.4,\n                  label = paste0(\"Mean Joviality: \", round((mean_j),2)),\n                  color = \"#4d5887\") +\n      geom_vline(aes(xintercept = med_j),\n                colour=\"grey20\", linewidth = 0.8, linetype = \"dashed\") +\n      annotate(geom = \"text\", x = med_j - 0.13, y = 1.5,\n                  label = paste0(\"Median Joviality: \", round((med_j),2)),\n                  color = \"grey20\") +\n      scale_x_continuous(breaks = scales::pretty_breaks(n = 10)) +\n      labs(title = \"Distribution of Participants' Joviality Scores\") +\n      theme(axis.text.y = element_blank(),\n            axis.title.y = element_blank(),\n            panel.grid.major = element_blank())"
  },
  {
    "objectID": "take-home_Ex/take-home_Ex01/take-home_Ex01.html#wage-income",
    "href": "take-home_Ex/take-home_Ex01/take-home_Ex01.html#wage-income",
    "title": "Take-Home Exercise 1",
    "section": "5.2 Wage (Income)",
    "text": "5.2 Wage (Income)\n\nNormality Testing\n\nQQ PlotShapiro-Wilk Test\n\n\n\n\nShow me the good stuff\nset.seed(1234)\nqqnorm(Joined_data$Wage)\nqqline(Joined_data$Wage)\n\n\n\n\n\nThe qqplot compares the distribution of the data against the expected normal distribution. As the points deviate significantly from the line, the qqplot suggests that the data is not normally distributed.\n\n\n\n\nShow me the good stuff\nshapiro.test(Joined_data$Wage)\n\n\n\n    Shapiro-Wilk normality test\n\ndata:  Joined_data$Wage\nW = 0.78556, p-value < 2.2e-16\n\n\nThe Shapiro-Wilk test is a widely used method to test for normality. As p < 0.05, there is sufficient statistical power to reject the null hypothesis that the data is normally distributed.\n\n\n\n\n\nCut Wage into Categories based on quantiles\n\n\nShow me the good stuff\ndescribe(Joined_data$Wage) #to assess best cut points for income levels\n\n\nJoined_data$Wage \n       n  missing distinct     Info     Mean      Gmd      .05      .10 \n    1011        0      984        1     4044     2162     1947     2169 \n     .25      .50      .75      .90      .95 \n    2551     3388     4781     6574     8428 \n\nlowest : 1882    1888.5  1892.83 1896.17 1896.5 \nhighest: 14493.7 14681.2 14912.3 17619.9 17622.8\n\n\n\nBased on the distribution described above, the cut points values matching 25th, 50th and 90th percentile are used to group participants by income level:\nBottom 25th Percentile -> Low Income 26th to 50th Percentile -> Low-Middle Income 50th to 90th Percentile -> Middle-High Income Top 10th Percentile -> High Income"
  },
  {
    "objectID": "take-home_Ex/take-home_Ex01/take-home_Ex01.html#grouping-participants-by-income-levels",
    "href": "take-home_Ex/take-home_Ex01/take-home_Ex01.html#grouping-participants-by-income-levels",
    "title": "Take-Home Exercise 1",
    "section": "Grouping Participants by Income Levels",
    "text": "Grouping Participants by Income Levels\n\nCodeDistribution Barchart\n\n\n\n\nShow me the good stuff\n# Define the breaks for the three bins\nbreaks <- c(0, 2551, 3388, 6574, Inf)\n\n# Bin the Wage variable into three categories using cut()\nincome_levels <- cut(Joined_data$Wage, breaks, labels = c(\"Low\", \"Low-Middle\", \"Middle-High\", \"High\"))\n\n# Add the income levels as a new column in the dataset\nJoined_data$Income_Level <- income_levels\n\n\n\n\n\n\nShow me the good stuff\n# Barchart of Income Level\ndem_incomelvl<- ggplot(Joined_data, aes(x = Income_Level)) +\n            geom_bar() +\n            labs(title = \"High Distribution of \\nParticipants in Middle-High Income Level\", #< Linebreak added \n                  x = \"Income Level\",\n                  y = NULL) +\n            geom_text(stat = \"count\",\n                      aes(label = after_stat(count)),\n                      vjust = -1) +\n            ylim(0,500) + \n            theme(text = element_text(size = 12))\n\ndem_incomelvl\n\n\n\n\n\n\n\n\n## Association Testing (Chi-Squared Test)\n\nSummaryIncome LevelsEducation LevelsAge Group\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nComparison of mean Joviality Scores\n\nIncome LevelsAge GroupsEducation LevelsHousehold SizeInterest Groups\n\n\n\n\nShow me the good stuff\nggbetweenstats(Joined_data, x= Income_Level, y= joviality) +\n  labs(x = \"Income Level\", y = \"Joviality Score\")\n\n\n\n\n\nAs p is less than 0.05, we reject the null hypothesis that there is no significant difference in means across income groups.\n\n\n\n\nShow me the good stuff\nggbetweenstats(Joined_data, x= ageGroup, y= joviality) +\n  labs(x = \"Age Group\", y = \"Joviality Score\")\n\n\n\n\n\nAn interesting insight can be gleaned from this comparison of means- as a significantly higher mean joviality score is observed in both Middle and Lower income groups, while the lowest mean score is observed in the High income group.\n\n\n\n\nShow me the good stuff\nggbetweenstats(Joined_data, x= educationLevel, y= joviality) +\n  labs(x = \"Education Level\", y = \"Joviality Score\")\n\n\n\n\n\nThrough comparison of mean joviality scores across education levels, the null hypothesis is that there is no difference between means. As p > 0.05, we accept the null hypothesis.\n\n\n\n\nShow me the good stuff\nggbetweenstats(Joined_data, x= householdSize, y= joviality) +\n  labs(x = \"Household Size\", y = \"Joviality Score\")\n\n\n\n\n\n\n\n\n\nShow me the good stuff\nggbetweenstats(Joined_data, x = interestGroup, y = joviality) +\n  scale_color_manual(values = viridis(length(levels(Joined_data$interestGroup)))) +\n  labs(x = \"Interest Group\", y = \"Joviality Score\")\n\n\n\n\n\n\n\n\n\nInsights\n\nAn interesting insight can be gleaned from this comparison of means- as a significantly higher mean joviality score is observed in both Middle and Lower income groups, while the lowest mean score is observed in the High income group.\n\n\n\n\n\n\n\n\n\nShow me the good stuff\n# prepare the data\nJoined_data$education_group <- factor(Joined_data$educationLevel, \n                                 levels = c(\"Low\", \"HighSchoolOrCollege\", \"Bachelors\", \"Graduate\"), \n                                 labels = c(\"Low education\", \"High School or College\", \"Bachelor's Degree\", \"Graduate Degree\"))\n\n\n# create the ggplot object\n\np <- ggplot(Joined_data, aes(x = Wage, fill = education_group)) +\n  geom_density(alpha = 0.6) +\n  labs(x = \"Wage ($)\") +\n  labs(title = 'Wage Distribution across Education Levels', fill = 'Education Level') +\n  theme(axis.text.y = element_blank(), axis.title.y = element_blank())\n\n\n\n# convert to interactive plot\nggplotly(p)\n\n\n\n\n\n\n\n\nShow me the good stuff\np2 <- ggplot(Joined_data, aes(y = education_group, x = Wage, fill = education_group)) +\n  geom_density_ridges(alpha = 0.6, scale = 0.9) +\n  scale_x_continuous(limits = c(0, 20000)) +\n  labs(x = \"Wage ($)\", y = \"\", fill = 'Education Level') +\n  labs(title = 'Wage Distribution across Education Levels') +\n  theme(axis.text.y = element_blank(), axis.title.y = element_blank())\n\np2\n\n\n\n\n\n\n\n\n\n\nExpense and Joviality (Build more cost efficient stuff)\n\n\nAge and Joviality (Need more ageing popn stuff?)\n\n\nInterest Group X Joviality (IG related stuff)\n\n\nWage x Kids X Joviality\n\n\nKids and Joviality (Kids related facilities)"
  },
  {
    "objectID": "take-home_Ex/take-home_Ex01/take-home_Ex01.html#wage-and-joviality",
    "href": "take-home_Ex/take-home_Ex01/take-home_Ex01.html#wage-and-joviality",
    "title": "Take-Home Exercise 1",
    "section": "Wage and Joviality",
    "text": "Wage and Joviality\n\n\n\n\n\n\nNote\n\n\n\n\n\n\n\n\n\n\nHeader"
  }
]