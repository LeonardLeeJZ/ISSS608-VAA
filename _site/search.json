[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "Leonard Lee",
    "section": "",
    "text": "Leonard Lee is an aspiring student of Data Analytics, and has been an infantry officer since 2013. When not honing his hand-eye coordination in the digital realm, he enjoys in-line skating and most sports."
  },
  {
    "objectID": "about.html#education",
    "href": "about.html#education",
    "title": "Leonard Lee",
    "section": "Education",
    "text": "Education\nUniversity of Glasgow, Scotland | United Kingdom\nBachelor of Science in Psychology | Sept 2014 - Sept 2018"
  },
  {
    "objectID": "about.html#experience",
    "href": "about.html#experience",
    "title": "Leonard Lee",
    "section": "Experience",
    "text": "Experience\nSingapore Armed Forces | Training Development Officer | April 2022 - present\nSingapore Armed Forces | Infantry Officer | July 2013 - present"
  },
  {
    "objectID": "hands-on_Ex/hands-on_Ex01/Hands-on_Ex01.html",
    "href": "hands-on_Ex/hands-on_Ex01/Hands-on_Ex01.html",
    "title": "Hands-On_Exercise 1",
    "section": "",
    "text": "The code chunk below uses p_load function of pacman package to check if tidyverse packages are installed in the computer. If they are, then they will be launched into R.\n\npacman::p_load(tidyverse, readr)\n\n\n\n\n\nexam_data <- read_csv(\"data/Exam_data.csv\")\n\nRows: 322 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): ID, CLASS, GENDER, RACE\ndbl (3): ENGLISH, MATHS, SCIENCE\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message."
  },
  {
    "objectID": "hands-on_Ex/hands-on_Ex02/Hands-on_Ex02.html",
    "href": "hands-on_Ex/hands-on_Ex02/Hands-on_Ex02.html",
    "title": "Hands-on_Ex02",
    "section": "",
    "text": "pacman::p_load(ggrepel, patchwork,\n               ggthemes, hrbrthemes,\n               tidyverse)"
  },
  {
    "objectID": "hands-on_Ex/hands-on_Ex02/Hands-on_Ex02.html#ggrepel",
    "href": "hands-on_Ex/hands-on_Ex02/Hands-on_Ex02.html#ggrepel",
    "title": "Hands-on_Ex02",
    "section": "1: ggrepel",
    "text": "1: ggrepel\n\nOriginalWith ggrepel\n\n\n\nggplot(data=exam_data, aes(x= MATHS, y=ENGLISH)) + geom_point() + geom_smooth(method=lm, size=0.5) +\ngeom_label(aes(label = ID), hjust = .5, vjust = -.5) + coord_cartesian(xlim=c(0,100), ylim=c(0,100)) + ggtitle(\"English scores versus Maths scores for Primary 3\")\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  geom_label_repel(aes(label = ID), \n                   fontface = \"bold\") +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  ggtitle(\"English scores versus Maths scores for Primary 3\")"
  },
  {
    "objectID": "hands-on_Ex/hands-on_Ex02/Hands-on_Ex02.html#ggplot-2-themes",
    "href": "hands-on_Ex/hands-on_Ex02/Hands-on_Ex02.html#ggplot-2-themes",
    "title": "Hands-on_Ex02",
    "section": "2: ggplot 2 themes",
    "text": "2: ggplot 2 themes\n\nOriginalwith ggplot theme\n\n\n\nggplot(data=exam_data, aes(x = MATHS)) + geom_histogram(bins=20, boundary = 100, color=\"grey25\", fill=\"grey90\") + theme_gray() + ggtitle(\"Distribution of Maths scores\")\n\n\n\n\n\n\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_economist()"
  },
  {
    "objectID": "hands-on_Ex/hands-on_Ex02/Hands-on_Ex02.html#hrbrthemes",
    "href": "hands-on_Ex/hands-on_Ex02/Hands-on_Ex02.html#hrbrthemes",
    "title": "Hands-on_Ex02",
    "section": "3: hrbrthemes",
    "text": "3: hrbrthemes\nggplot(data=exam_data, aes(x = MATHS)) + geom_histogram(bins=20, boundary = 100, color=“grey25”, fill=“grey90”) + ggtitle(“Distribution of Maths scores”) + theme_ipsum()\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_ipsum(axis_title_size = 18,\n              base_size = 15,\n              grid = \"Y\")"
  },
  {
    "objectID": "hands-on_Ex/hands-on_Ex02/Hands-on_Ex02.html#creating-individual-graphs",
    "href": "hands-on_Ex/hands-on_Ex02/Hands-on_Ex02.html#creating-individual-graphs",
    "title": "Hands-on_Ex02",
    "section": "4: Creating Individual Graphs",
    "text": "4: Creating Individual Graphs\n\np1p2p3\n\n\n\np1 <- ggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") + \n  coord_cartesian(xlim=c(0,100)) +\n  ggtitle(\"Distribution of Maths scores\")\n\n\n\n\np2 <- ggplot(data=exam_data, \n             aes(x = ENGLISH)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  coord_cartesian(xlim=c(0,100)) +\n  ggtitle(\"Distribution of English scores\")\n\n\n\n\np3 <- ggplot(data=exam_data, \n             aes(x= MATHS, \n                 y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  ggtitle(\"English scores versus Maths scores for Primary 3\")"
  },
  {
    "objectID": "hands-on_Ex/hands-on_Ex02/Hands-on_Ex02.html#merging-graphs",
    "href": "hands-on_Ex/hands-on_Ex02/Hands-on_Ex02.html#merging-graphs",
    "title": "Hands-on_Ex02",
    "section": "5.1 Merging Graphs",
    "text": "5.1 Merging Graphs\n\nMerging p1 & p2Merging p1 p2 p3\n\n\n\np1 + p2\n\n\n\n\n\n\n\n(p1 / p2) | p3"
  },
  {
    "objectID": "hands-on_Ex/hands-on_Ex02/Hands-on_Ex02.html#modifying-composite-graph",
    "href": "hands-on_Ex/hands-on_Ex02/Hands-on_Ex02.html#modifying-composite-graph",
    "title": "Hands-on_Ex02",
    "section": "5.2 Modifying Composite Graph",
    "text": "5.2 Modifying Composite Graph\n\nAdd TagAdd insertComposite using patchwork and ggtheme\n\n\n\n((p1 / p2) | p3) + \n  plot_annotation(tag_levels = 'I')\n\n\n\n\n\n\n\np3 + inset_element(p2, \n                   left = 0.02, \n                   bottom = 0.7, \n                   right = 0.5, \n                   top = 1)\n\n\n\n\n\n\n\npatchwork <- (p1 / p2) | p3\npatchwork & theme_economist()"
  },
  {
    "objectID": "hands-on_Ex/hands-on_Ex03/Hands-on_Ex03.html",
    "href": "hands-on_Ex/hands-on_Ex03/Hands-on_Ex03.html",
    "title": "Hands-on_Ex03",
    "section": "",
    "text": "pacman::p_load(ggiraph, plotly, \n               patchwork, DT, tidyverse)"
  },
  {
    "objectID": "hands-on_Ex/hands-on_Ex03/Hands-on_Ex03.html#creating-interactive-graph-using-ggiraph",
    "href": "hands-on_Ex/hands-on_Ex03/Hands-on_Ex03.html#creating-interactive-graph-using-ggiraph",
    "title": "Hands-on_Ex03",
    "section": "Creating interactive graph using ggiraph",
    "text": "Creating interactive graph using ggiraph\n\np <- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(\n    aes(tooltip = ID),\n    stackgroups = TRUE, \n    binwidth = 1, \n    method = \"histodot\") +\n  scale_y_continuous(NULL, \n                     breaks = NULL)\ngirafe(\n  ggobj = p,\n  width_svg = 6,\n  height_svg = 6*0.618\n)"
  },
  {
    "objectID": "hands-on_Ex/hands-on_Ex03/Hands-on_Ex03.html#displaying-multiple-information",
    "href": "hands-on_Ex/hands-on_Ex03/Hands-on_Ex03.html#displaying-multiple-information",
    "title": "Hands-on_Ex03",
    "section": "Displaying Multiple information",
    "text": "Displaying Multiple information\n\nexam_data$tooltip <- c(paste0(     \n  \"Name = \", exam_data$ID,         \n  \"\\n Class = \", exam_data$CLASS)) \n\np <- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(\n    aes(tooltip = exam_data$tooltip), \n    stackgroups = TRUE,\n    binwidth = 1,\n    method = \"histodot\") +\n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(\n  ggobj = p,\n  width_svg = 8,\n  height_svg = 8*0.618\n)"
  },
  {
    "objectID": "hands-on_Ex/hands-on_Ex03/Hands-on_Ex03.html#customising-tooltip-style",
    "href": "hands-on_Ex/hands-on_Ex03/Hands-on_Ex03.html#customising-tooltip-style",
    "title": "Hands-on_Ex03",
    "section": "Customising Tooltip Style",
    "text": "Customising Tooltip Style\n\ntooltip_css <- \"background-color:white; #<<\nfont-style:bold; color:black;\" #<<\n\np <- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(tooltip = ID),                   \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618,\n  options = list(    #<<\n    opts_tooltip(    #<<\n      css = tooltip_css)) #<<\n) \n\n\n\n\n\n\nDisplaying Statistics\n\ntooltip <- function(y, ymax, accuracy = .01) {\n  mean <- scales::number(y, accuracy = accuracy)\n  sem <- scales::number(ymax - y, accuracy = accuracy)\n  paste(\"Mean maths scores:\", mean, \"+/-\", sem)\n}\n\ngg_point <- ggplot(data=exam_data, \n                   aes(x = RACE),\n) +\n  stat_summary(aes(y = MATHS, \n                   tooltip = after_stat(  \n                     tooltip(y, ymax))),  \n    fun.data = \"mean_se\", \n    geom = GeomInteractiveCol,  \n    fill = \"light blue\"\n  ) +\n  stat_summary(aes(y = MATHS),\n    fun.data = mean_se,\n    geom = \"errorbar\", width = 0.2, size = 0.2\n  )\n\ngirafe(ggobj = gg_point,\n       width_svg = 8,\n       height_svg = 8*0.618)\n\n\n\n\n\n\n\nHover Effect\n\np <- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(           \n    aes(data_id = CLASS),             \n    stackgroups = TRUE,               \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618                      \n)                     \n\n\n\n\n\n\n\nStyling Hover Effect\n\np <- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(data_id = CLASS),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618,\n  options = list(                        \n    opts_hover(css = \"fill: #202020;\"),  \n    opts_hover_inv(css = \"opacity:0.2;\") \n  )                                        \n) \n\n\n\n\n\n\n\nCombining tooltip and hover\n\np <- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(tooltip = CLASS, \n        data_id = CLASS),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618,\n  options = list(                        \n    opts_hover(css = \"fill: #202020;\"),  \n    opts_hover_inv(css = \"opacity:0.2;\") \n  )                                        \n)                                 \n\n\n\n\n\n\n\nClick effect (using onclick)\n\nexam_data$onclick <- sprintf(\"window.open(\\\"%s%s\\\")\",\n\"https://www.moe.gov.sg/schoolfinder?journey=Primary%20school\",\nas.character(exam_data$ID))\n\np <- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(onclick = onclick),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618)"
  },
  {
    "objectID": "hands-on_Ex/hands-on_Ex03/Hands-on_Ex03.html#coordinated-multiple-views-with-ggiraph",
    "href": "hands-on_Ex/hands-on_Ex03/Hands-on_Ex03.html#coordinated-multiple-views-with-ggiraph",
    "title": "Hands-on_Ex03",
    "section": "Coordinated Multiple Views with ggiraph",
    "text": "Coordinated Multiple Views with ggiraph\nIn order to build a coordinated multiple views as shown in the example above, the following programming strategy will be used:\n\nAppropriate interactive functions of ggiraph will be used to create the multiple views.\npatchwork function of patchwork package will be used inside girafe function to create the interactive coordinated multiple views.\n\n\np1 <- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(data_id = ID),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +  \n  coord_cartesian(xlim=c(0,100)) + \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\n\np2 <- ggplot(data=exam_data, \n       aes(x = ENGLISH)) +\n  geom_dotplot_interactive(              \n    aes(data_id = ID),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") + \n  coord_cartesian(xlim=c(0,100)) + \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\n\ngirafe(code = print(p1 + p2), \n       width_svg = 6,\n       height_svg = 3,\n       options = list(\n         opts_hover(css = \"fill: #202020;\"),\n         opts_hover_inv(css = \"opacity:0.2;\")\n         )\n       )"
  },
  {
    "objectID": "hands-on_Ex/hands-on_Ex03/Hands-on_Ex03.html#interactive-data-visualisation-plotly",
    "href": "hands-on_Ex/hands-on_Ex03/Hands-on_Ex03.html#interactive-data-visualisation-plotly",
    "title": "Hands-on_Ex03",
    "section": "Interactive Data Visualisation (Plotly)",
    "text": "Interactive Data Visualisation (Plotly)\nTwo methods; plot_ly() and ggplotly()\n\nplot_ly(data = exam_data, \n             x = ~MATHS, \n             y = ~ENGLISH)\n\n\n\n\n\n\nInteractive Scatter Plot (ggplotly())\n\np <- ggplot(data=exam_data, \n            aes(x = MATHS,\n                y = ENGLISH)) +\n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\nggplotly(p)"
  },
  {
    "objectID": "hands-on_Ex/hands-on_Ex03/Hands-on_Ex03.html#coordinated-multiple-view-with-plotly",
    "href": "hands-on_Ex/hands-on_Ex03/Hands-on_Ex03.html#coordinated-multiple-view-with-plotly",
    "title": "Hands-on_Ex03",
    "section": "Coordinated Multiple View with plotly",
    "text": "Coordinated Multiple View with plotly\nThe creation of a coordinated linked plot by using plotly involves three steps:\n\nhighlight_key() of plotly package is used as shared data.\ntwo scatterplots will be created by using ggplot2 functions.\nlastly, subplot() of plotly package is used to place them next to each other side-by-side.\n\n\nd <- highlight_key(exam_data)\np1 <- ggplot(data=d, \n            aes(x = MATHS,\n                y = ENGLISH)) +\n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\n\np2 <- ggplot(data=d, \n            aes(x = MATHS,\n                y = SCIENCE)) +\n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\nsubplot(ggplotly(p1),\n        ggplotly(p2))"
  },
  {
    "objectID": "hands-on_Ex/hands-on_Ex03/Hands-on_Ex03.html#interactive-data-table---crosstalk-methods",
    "href": "hands-on_Ex/hands-on_Ex03/Hands-on_Ex03.html#interactive-data-table---crosstalk-methods",
    "title": "Hands-on_Ex03",
    "section": "Interactive Data Table - Crosstalk methods",
    "text": "Interactive Data Table - Crosstalk methods\n\nDT Package\n\nDT::datatable(exam_data, class= \"compact\")"
  },
  {
    "objectID": "hands-on_Ex/hands-on_Ex03/Hands-on_Ex03.html#linked-brushing-crosstalk",
    "href": "hands-on_Ex/hands-on_Ex03/Hands-on_Ex03.html#linked-brushing-crosstalk",
    "title": "Hands-on_Ex03",
    "section": "Linked Brushing (crosstalk)",
    "text": "Linked Brushing (crosstalk)\n\nd <- highlight_key(exam_data) \np <- ggplot(d, \n            aes(ENGLISH, \n                MATHS)) + \n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\n\ngg <- highlight(ggplotly(p),        \n                \"plotly_selected\")  \n\ncrosstalk::bscols(gg,               \n                  DT::datatable(d), \n                  widths = 5)"
  },
  {
    "objectID": "hands-on_Ex/hands-on_Ex03/Hands-on_Ex03.html#loading-packages",
    "href": "hands-on_Ex/hands-on_Ex03/Hands-on_Ex03.html#loading-packages",
    "title": "Hands-on_Ex03",
    "section": "Loading Packages",
    "text": "Loading Packages\n\npacman::p_load(readxl, gifski, gapminder,\n               plotly, gganimate, tidyverse)"
  },
  {
    "objectID": "hands-on_Ex/hands-on_Ex03/Hands-on_Ex03.html#importing-data",
    "href": "hands-on_Ex/hands-on_Ex03/Hands-on_Ex03.html#importing-data",
    "title": "Hands-on_Ex03",
    "section": "Importing Data",
    "text": "Importing Data\n\ncol <- c(\"Country\", \"Continent\")\nglobalPop <- read_xls(\"data/GlobalPopulation.xls\",\n                      sheet=\"Data\") %>%\n  mutate_each_(funs(factor(.)), col) %>%\n  mutate(Year = as.integer(Year))"
  },
  {
    "objectID": "hands-on_Ex/hands-on_Ex03/Hands-on_Ex03.html#animated-data-visualisation-gganimate-methods",
    "href": "hands-on_Ex/hands-on_Ex03/Hands-on_Ex03.html#animated-data-visualisation-gganimate-methods",
    "title": "Hands-on_Ex03",
    "section": "Animated Data Visualisation: gganimate methods",
    "text": "Animated Data Visualisation: gganimate methods\n\ntransition_*() defines how the data should be spread out and how it relates to itself across time.\nview_*() defines how the positional scales should change along the animation.\nshadow_*() defines how data from other points in time should be presented in the given point in time.\nenter_()/exit_() defines how new data should appear and how old data should disappear during the course of the animation.\nease_aes() defines how different aesthetics should be eased during transitions.\n\n\nStatic Population Bubble Plot\n\nggplot(globalPop, aes(x = Old, y = Young, \n                      size = Population, \n                      colour = Country)) +\n  geom_point(alpha = 0.7, \n             show.legend = FALSE) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(title = 'Year: {frame_time}', \n       x = '% Aged', \n       y = '% Young')\n\n\n\n\n\n\nAnimated Bubble Plot\n\nggplot(globalPop, aes(x = Old, y = Young, \n                      size = Population, \n                      colour = Country)) +\n  geom_point(alpha = 0.7, \n             show.legend = FALSE) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(title = 'Year: {frame_time}', \n       x = '% Aged', \n       y = '% Young') +\n  transition_time(Year) +       \n  ease_aes('linear')"
  },
  {
    "objectID": "hands-on_Ex/hands-on_Ex03/Hands-on_Ex03.html#adv-plotly",
    "href": "hands-on_Ex/hands-on_Ex03/Hands-on_Ex03.html#adv-plotly",
    "title": "Hands-on_Ex03",
    "section": "ADV: plotly",
    "text": "ADV: plotly\nIn Plotly R package, both ggplotly() and plot_ly() support key frame animations through the frame argument/aesthetic. They also support an ids argument/aesthetic to ensure smooth transitions between objects with the same id (which helps facilitate object constancy).\n\nAnimated Bubble Plot: ggplotly() method\n\ngg <- ggplot(globalPop, \n       aes(x = Old, \n           y = Young, \n           size = Population, \n           colour = Country)) +\n  geom_point(aes(size = Population,\n                 frame = Year),\n             alpha = 0.7, \n             show.legend = FALSE) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(x = '% Aged', \n       y = '% Young')\n\nggplotly(gg)\n\n\n\n\n\n\n\nAnimated Bubble Plot: plot_ly() method\n\nbp <- globalPop %>%\n  plot_ly(x = ~Old, \n          y = ~Young, \n          size = ~Population, \n          color = ~Continent, \n          frame = ~Year, \n          text = ~Country, \n          hoverinfo = \"text\",\n          type = 'scatter',\n          mode = 'markers'\n          )\nbp"
  },
  {
    "objectID": "hands-on_Ex/hands-on_Ex06/Hands-on_Ex06.html",
    "href": "hands-on_Ex/hands-on_Ex06/Hands-on_Ex06.html",
    "title": "Hands-On Exercise 6",
    "section": "",
    "text": "All required packages for Hands on Exercise 6 are loaded together here.\n\n\nShow me the good stuff\npacman::p_load('plotly', 'tidyverse', 'corrplot', 'ggstatsplot', 'ggcorrplot')\n\n\n\n\nShow me the good stuff\nrequire(devtools)\ninstall_version(\"ggtern\", version = \"3.4.1\", repos = \"http://cran.us.r-project.org\")\n\n\nShow me the good stuff\nlibrary(ggtern)"
  },
  {
    "objectID": "hands-on_Ex/hands-on_Ex06/Hands-on_Ex06.html#importing-the-data",
    "href": "hands-on_Ex/hands-on_Ex06/Hands-on_Ex06.html#importing-the-data",
    "title": "Hands-On Exercise 6",
    "section": "2.1 Importing the Data",
    "text": "2.1 Importing the Data\n\n\nShow me the good stuff\npop_data <- read_csv(\"data/respopagsex2000to2018_tidy.csv\")"
  },
  {
    "objectID": "hands-on_Ex/hands-on_Ex06/Hands-on_Ex06.html#preparing-the-data",
    "href": "hands-on_Ex/hands-on_Ex06/Hands-on_Ex06.html#preparing-the-data",
    "title": "Hands-On Exercise 6",
    "section": "2.2 Preparing the Data",
    "text": "2.2 Preparing the Data\n\n\nShow me the good stuff\n#Deriving young, economy active and old measures\n\nagpop_mutated <- pop_data %>%\n  mutate('Year' = as.character(Year))%>%\n  spread(AG, Population) %>%\n  mutate(YOUNG = rowSums(.[4:8])) %>%\n  mutate(ACTIVE = rowSums(.[9:16])) %>%\n  mutate(OLD = rowSums(.[17:21])) %>%\n  mutate(TOTAL = rowSums(.[22:24])) %>%\n  filter(Year == 2018) %>%\n  filter(TOTAL > 0)"
  },
  {
    "objectID": "hands-on_Ex/hands-on_Ex06/Hands-on_Ex06.html#using-plot_ly",
    "href": "hands-on_Ex/hands-on_Ex06/Hands-on_Ex06.html#using-plot_ly",
    "title": "Hands-On Exercise 6",
    "section": "Using plot_ly",
    "text": "Using plot_ly\n\n\nShow me the good stuff\n# reusable function for creating annotation object\nlabel <- function(txt) {\n  list(\n    text = txt, \n    x = 0.1, y = 1,\n    ax = 0, ay = 0,\n    xref = \"paper\", yref = \"paper\", \n    align = \"center\",\n    font = list(family = \"serif\", size = 15, color = \"white\"),\n    bgcolor = \"#b3b3b3\", bordercolor = \"black\", borderwidth = 2\n  )\n}\n\n# reusable function for axis formatting\naxis <- function(txt) {\n  list(\n    title = txt, tickformat = \".0%\", tickfont = list(size = 10)\n  )\n}\n\nternaryAxes <- list(\n  aaxis = axis(\"Young\"), \n  baxis = axis(\"Active\"), \n  caxis = axis(\"Old\")\n)\n\n# Initiating a plotly visualization \nplot_ly(\n  agpop_mutated, \n  a = ~YOUNG, \n  b = ~ACTIVE, \n  c = ~OLD, \n  color = I(\"black\"), \n  type = \"scatterternary\"\n) %>%\n  layout(\n    annotations = label(\"Ternary Markers\"), \n    ternary = ternaryAxes\n  )"
  },
  {
    "objectID": "hands-on_Ex/hands-on_Ex06/Hands-on_Ex06.html#importing-the-data-1",
    "href": "hands-on_Ex/hands-on_Ex06/Hands-on_Ex06.html#importing-the-data-1",
    "title": "Hands-On Exercise 6",
    "section": "Importing the Data",
    "text": "Importing the Data\n\n\nShow me the good stuff\nwine <- read_csv(\"data/wine_quality.csv\")"
  },
  {
    "objectID": "hands-on_Ex/hands-on_Ex06/Hands-on_Ex06.html#using-pairs-function-of-r-graphics",
    "href": "hands-on_Ex/hands-on_Ex06/Hands-on_Ex06.html#using-pairs-function-of-r-graphics",
    "title": "Hands-On Exercise 6",
    "section": "Using pairs function of R Graphics",
    "text": "Using pairs function of R Graphics"
  },
  {
    "objectID": "hands-on_Ex/hands-on_Ex06/Hands-on_Ex06.html#basic-correlation-matrix",
    "href": "hands-on_Ex/hands-on_Ex06/Hands-on_Ex06.html#basic-correlation-matrix",
    "title": "Hands-On Exercise 6",
    "section": "Basic Correlation Matrix",
    "text": "Basic Correlation Matrix\n\nPairsLower CornerUpper CornerWith Correlation Coeff\n\n\n\n\nShow me the good stuff\npairs(wine[,1:11])\n\n\n\n\n\n\n\n\n\nShow me the good stuff\npairs(wine[,2:12], upper.panel = NULL)\n\n\n\n\n\n\n\n\n\nShow me the good stuff\npairs(wine[,2:12], lower.panel = NULL)\n\n\n\n\n\n\n\n\n\nShow me the good stuff\npanel.cor <- function(x, y, digits=2, prefix=\"\", cex.cor, ...) {\nusr <- par(\"usr\")\non.exit(par(usr))\npar(usr = c(0, 1, 0, 1))\nr <- abs(cor(x, y, use=\"complete.obs\"))\ntxt <- format(c(r, 0.123456789), digits=digits)[1]\ntxt <- paste(prefix, txt, sep=\"\")\nif(missing(cex.cor)) cex.cor <- 0.8/strwidth(txt)\ntext(0.5, 0.5, txt, cex = cex.cor * (1 + r) / 2)\n}\n\npairs(wine[,2:12], \n      upper.panel = panel.cor)"
  },
  {
    "objectID": "hands-on_Ex/hands-on_Ex06/Hands-on_Ex06.html#single-plot",
    "href": "hands-on_Ex/hands-on_Ex06/Hands-on_Ex06.html#single-plot",
    "title": "Hands-On Exercise 6",
    "section": "3.1 Single Plot",
    "text": "3.1 Single Plot\n\nBasic PlotWith Title, Subtitles\n\n\nggstatsplot::ggcorrmat(data = wine, cor.vars = 1:11)\n\n\nggstatsplot::ggcorrmat( data = wine, cor.vars = 1:11, ggcorrplot.args = list(outline.color = “black”, hc.order = TRUE, tl.cex = 10), title = “Correlogram for wine dataset”, subtitle = “Four pairs are no significant at p < 0.05” )\n\n\n\n\nThings to learn from the code chunk above:\ncor.vars argument is used to compute the correlation matrix needed to build the corrgram. ggcorrplot.args argument provide additional (mostly aesthetic) arguments that will be passed to ggcorrplot::ggcorrplot function. The list should avoid any of the following arguments since they are already internally being used: corr, method, p.mat, sig.level, ggtheme, colors, lab, pch, legend.title, digits.\n\n\nThe sample sub-code chunk can be used to control specific component of the plot such as the font size of the x-axis, y-axis, and the statistical report.\nggplot.component = list( theme(text=element_text(size=5), axis.text.x = element_text(size = 8), axis.text.y = element_text(size = 8)))"
  },
  {
    "objectID": "hands-on_Ex/hands-on_Ex06/Hands-on_Ex06.html#using-corrplot-package",
    "href": "hands-on_Ex/hands-on_Ex06/Hands-on_Ex06.html#using-corrplot-package",
    "title": "Hands-On Exercise 6",
    "section": "using corrplot Package",
    "text": "using corrplot Package"
  },
  {
    "objectID": "hands-on_Ex/hands-on_Ex06/Hands-on_Ex06.html#plotting-a-corrgram",
    "href": "hands-on_Ex/hands-on_Ex06/Hands-on_Ex06.html#plotting-a-corrgram",
    "title": "Hands-On Exercise 6",
    "section": "4.1 Plotting a corrgram",
    "text": "4.1 Plotting a corrgram\n\nBasicVisual GeometricsLayoutLayout 2Mixed Layout\n\n\n\n\nShow me the good stuff\nwine.cor <- cor(wine[, 1:11])\n\ncorrplot(wine.cor)\n\n\n\n\n\n\n\n\n\nShow me the good stuff\ncorrplot(wine.cor, \n         method = \"ellipse\") \n\n\n\n\n\n\n\n\n\nShow me the good stuff\ncorrplot(wine.cor, \n         method = \"ellipse\", \n         type=\"lower\")\n\n\n\n\n\n\n\n\n\nShow me the good stuff\ncorrplot(wine.cor, \n         method = \"ellipse\", \n         type=\"lower\",\n         diag = FALSE,\n         tl.col = \"black\")\n\n\n\n\n\n\n\n\n\nShow me the good stuff\ncorrplot.mixed(wine.cor, \n               lower = \"ellipse\", \n               upper = \"number\",\n               tl.pos = \"lt\",\n               diag = \"l\",\n               tl.col = \"black\")"
  },
  {
    "objectID": "in-class_Ex/In-class_Ex01/In-class_Ex01.html",
    "href": "in-class_Ex/In-class_Ex01/In-class_Ex01.html",
    "title": "In-class Exercise 1",
    "section": "",
    "text": "Note\n\n\n\n\n\nRefer to Tableau Public Space for In-class_Ex01 here:\nIn-Class_Ex01"
  },
  {
    "objectID": "in-class_Ex/In-class_Ex03/In-class_Ex03.html",
    "href": "in-class_Ex/In-class_Ex03/In-class_Ex03.html",
    "title": "In-class Exercise 3",
    "section": "",
    "text": "Note\n\n\n\n\n\nRefer to Tableau Public Space for In-class_Ex03 here:\nIn-Class_Ex03\n\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\n\n\nRefer to Tableau Public Space for In-class_Ex03b here:\nIn-Class_Ex03b"
  },
  {
    "objectID": "in-class_Ex/In-class_Ex04/In-class_Ex04.html",
    "href": "in-class_Ex/In-class_Ex04/In-class_Ex04.html",
    "title": "In-Class Exercise 4",
    "section": "",
    "text": "Load Packages\n\npacman::p_load(rstatix, gt, patchwork, webshot2, tidyverse)\n\n#Importing the data\n\nexam_data4 <- read_csv(\"data/Exam_data.csv\")\n\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\nggplot(exam_data4,\n       aes(sample=ENGLISH)) +\n  stat_qq() +\n  stat_qq_line()\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nWe can see that the points deviate significantly from the straight diagonal line. This is a clear indication that the set of data is not normally distributed.\n\n\n##Combining Statistical Results and\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\nqq <- ggplot(exam_data4,\n       aes(sample=ENGLISH)) +\n  stat_qq() +\n  stat_qq_line()\n\nsw_t <- exam_data4 %>%\n  shapiro_test(ENGLISH) %>%\n  gt()\n\ntmp <- tempfile(fileext = '.png')\ngtsave(sw_t, tmp)\ntable_png <- png::readPNG(tmp, native = TRUE)\n\nqq + table_png"
  },
  {
    "objectID": "in-class_Ex/In-class_Ex05/In-class_Ex05.html",
    "href": "in-class_Ex/In-class_Ex05/In-class_Ex05.html",
    "title": "In-Class Exercise 05",
    "section": "",
    "text": "Show me the good stuff\npacman::p_load(igraph, tidygraph, ggraph, \n               visNetwork, lubridate, clock,\n               tidyverse, graphlayouts, jsonlite)\n\n\n\n\n\n\n\nShow me the good stuff\nMC1 <- fromJSON(\"data/MC1.json\")\nGAStech_nodes <- read_csv(\"data/GAStech_email_node.csv\")\nGAStech_edges <- read_csv(\"data/GAStech_email_edge-v2.csv\")\n\n\n\n\nShow me the good stuff\nMC1_nodes <- as_tibble(MC1$nodes) %>%\n  select(id, type, country) #using select function to reorganise into desired order of columns\n\n\n\n\nShow me the good stuff\nMC1_edges <- as_tibble(MC1$links) %>%\n  select(source, target, type, weight, key)\n\n\n\n\n\n\n\nShow me the good stuff\nglimpse(GAStech_edges)\n\n\nRows: 9,063\nColumns: 8\n$ source      <dbl> 43, 43, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 26, 26, 26…\n$ target      <dbl> 41, 40, 51, 52, 53, 45, 44, 46, 48, 49, 47, 54, 27, 28, 29…\n$ SentDate    <chr> \"6/1/2014\", \"6/1/2014\", \"6/1/2014\", \"6/1/2014\", \"6/1/2014\"…\n$ SentTime    <time> 08:39:00, 08:39:00, 08:58:00, 08:58:00, 08:58:00, 08:58:0…\n$ Subject     <chr> \"GT-SeismicProcessorPro Bug Report\", \"GT-SeismicProcessorP…\n$ MainSubject <chr> \"Work related\", \"Work related\", \"Work related\", \"Work rela…\n$ sourceLabel <chr> \"Sven.Flecha\", \"Sven.Flecha\", \"Kanon.Herrero\", \"Kanon.Herr…\n$ targetLabel <chr> \"Isak.Baza\", \"Lucas.Alcazar\", \"Felix.Resumir\", \"Hideki.Coc…\n\n\n\n\n\n\n\nShow me the good stuff\nGAStech_edges <- GAStech_edges %>%\n  mutate(SendDate = dmy(SentDate)) %>%\n  mutate(Weekday = wday(SentDate,\n                        label = TRUE,\n                        abbr = FALSE))\n\n\nglimpse(GAStech_edges) #Review data\n\n\nRows: 9,063\nColumns: 10\n$ source      <dbl> 43, 43, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 26, 26, 26…\n$ target      <dbl> 41, 40, 51, 52, 53, 45, 44, 46, 48, 49, 47, 54, 27, 28, 29…\n$ SentDate    <chr> \"6/1/2014\", \"6/1/2014\", \"6/1/2014\", \"6/1/2014\", \"6/1/2014\"…\n$ SentTime    <time> 08:39:00, 08:39:00, 08:58:00, 08:58:00, 08:58:00, 08:58:0…\n$ Subject     <chr> \"GT-SeismicProcessorPro Bug Report\", \"GT-SeismicProcessorP…\n$ MainSubject <chr> \"Work related\", \"Work related\", \"Work related\", \"Work rela…\n$ sourceLabel <chr> \"Sven.Flecha\", \"Sven.Flecha\", \"Kanon.Herrero\", \"Kanon.Herr…\n$ targetLabel <chr> \"Isak.Baza\", \"Lucas.Alcazar\", \"Felix.Resumir\", \"Hideki.Coc…\n$ SendDate    <date> 2014-01-06, 2014-01-06, 2014-01-06, 2014-01-06, 2014-01-0…\n$ Weekday     <ord> Friday, Friday, Friday, Friday, Friday, Friday, Friday, Fr…\n\n\n\n\n\n\n\nShow me the good stuff\nGAStech_edges_aggregated <- GAStech_edges %>%\n  filter(MainSubject == \"Work related\") %>%\n  group_by(source, target, Weekday) %>%\n    summarise(Weight = n()) %>%\n  filter(source!=target) %>%\n  filter(Weight > 1) %>%\n  ungroup()\n\nglimpse(GAStech_edges_aggregated)\n\n\nRows: 1,372\nColumns: 4\n$ source  <dbl> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,…\n$ target  <dbl> 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 6,…\n$ Weekday <ord> Sunday, Monday, Tuesday, Wednesday, Friday, Sunday, Monday, Tu…\n$ Weight  <int> 5, 2, 3, 4, 6, 5, 2, 3, 4, 6, 5, 2, 3, 4, 6, 5, 2, 3, 4, 6, 5,…"
  },
  {
    "objectID": "in-class_Ex/In-class_Ex05/In-class_Ex05.html#build-tidygraph-data-model-using-tbl_graph",
    "href": "in-class_Ex/In-class_Ex05/In-class_Ex05.html#build-tidygraph-data-model-using-tbl_graph",
    "title": "In-Class Exercise 05",
    "section": "Build tidygraph data model using tbl_graph()",
    "text": "Build tidygraph data model using tbl_graph()\n\n\nShow me the good stuff\nGAStech_graph <- tbl_graph(nodes = GAStech_nodes,\n                           edges = GAStech_edges_aggregated, \n                           directed = TRUE)\nGAStech_graph #Review Graph\n\n\n# A tbl_graph: 54 nodes and 1372 edges\n#\n# A directed multigraph with 1 component\n#\n# A tibble: 54 × 4\n     id label               Department     Title                                \n  <dbl> <chr>               <chr>          <chr>                                \n1     1 Mat.Bramar          Administration Assistant to CEO                     \n2     2 Anda.Ribera         Administration Assistant to CFO                     \n3     3 Rachel.Pantanal     Administration Assistant to CIO                     \n4     4 Linda.Lagos         Administration Assistant to COO                     \n5     5 Ruscella.Mies.Haber Administration Assistant to Engineering Group Manag…\n6     6 Carla.Forluniau     Administration Assistant to IT Group Manager        \n# ℹ 48 more rows\n#\n# A tibble: 1,372 × 4\n   from    to Weekday Weight\n  <int> <int> <ord>    <int>\n1     1     2 Sunday       5\n2     1     2 Monday       2\n3     1     2 Tuesday      3\n# ℹ 1,369 more rows"
  },
  {
    "objectID": "in-class_Ex/In-class_Ex05/In-class_Ex05.html#change-the-active-object",
    "href": "in-class_Ex/In-class_Ex05/In-class_Ex05.html#change-the-active-object",
    "title": "In-Class Exercise 05",
    "section": "Change the Active Object",
    "text": "Change the Active Object\n\n\nShow me the good stuff\nGAStech_graph %>%\n  activate(edges) %>%\n  arrange(desc(Weight))\n\n\n# A tbl_graph: 54 nodes and 1372 edges\n#\n# A directed multigraph with 1 component\n#\n# A tibble: 1,372 × 4\n   from    to Weekday  Weight\n  <int> <int> <ord>     <int>\n1    40    41 Saturday     13\n2    41    43 Monday       11\n3    35    31 Tuesday      10\n4    40    41 Monday       10\n5    40    43 Monday       10\n6    36    32 Sunday        9\n# ℹ 1,366 more rows\n#\n# A tibble: 54 × 4\n     id label           Department     Title           \n  <dbl> <chr>           <chr>          <chr>           \n1     1 Mat.Bramar      Administration Assistant to CEO\n2     2 Anda.Ribera     Administration Assistant to CFO\n3     3 Rachel.Pantanal Administration Assistant to CIO\n# ℹ 51 more rows"
  },
  {
    "objectID": "in-class_Ex/In-class_Ex05/In-class_Ex05.html#plotting-a-basic-network-graph",
    "href": "in-class_Ex/In-class_Ex05/In-class_Ex05.html#plotting-a-basic-network-graph",
    "title": "In-Class Exercise 05",
    "section": "Plotting a basic network graph",
    "text": "Plotting a basic network graph\n\n\nShow me the good stuff\nggraph(GAStech_graph) +\n  geom_edge_link() +\n  geom_node_point()\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\n\n\nThe basic plotting function is ggraph(), which takes the data to be used for the graph and the type of layout desired. Both of the arguments for ggraph() are built around igraph. Therefore, ggraph() can use either an igraph object or a tbl_graph object."
  },
  {
    "objectID": "in-class_Ex/In-class_Ex05/In-class_Ex05.html#changing-the-default-network-graph-theme",
    "href": "in-class_Ex/In-class_Ex05/In-class_Ex05.html#changing-the-default-network-graph-theme",
    "title": "In-Class Exercise 05",
    "section": "Changing the default network graph theme",
    "text": "Changing the default network graph theme\n\n\nShow me the good stuff\ng <- ggraph(GAStech_graph) + \n  geom_edge_link(aes()) +\n  geom_node_point(aes())\n\ng + theme_graph()"
  },
  {
    "objectID": "in-class_Ex/In-class_Ex05/In-class_Ex05.html#changing-the-coloring-of-the-plot",
    "href": "in-class_Ex/In-class_Ex05/In-class_Ex05.html#changing-the-coloring-of-the-plot",
    "title": "In-Class Exercise 05",
    "section": "Changing the coloring of the plot",
    "text": "Changing the coloring of the plot\n\n\nShow me the good stuff\ng <- ggraph(GAStech_graph) + \n  geom_edge_link(aes(colour = 'grey50')) +\n  geom_node_point(aes(colour = 'grey40'))\n\ng + theme_graph(background = 'grey10',\n                text_colour = 'white')"
  },
  {
    "objectID": "in-class_Ex/In-class_Ex05/In-class_Ex05.html#many-models",
    "href": "in-class_Ex/In-class_Ex05/In-class_Ex05.html#many-models",
    "title": "In-Class Exercise 05",
    "section": "Many models",
    "text": "Many models"
  },
  {
    "objectID": "in-class_Ex/In-class_Ex05/In-class_Ex05.html#fruchterman-and-reingold-layout",
    "href": "in-class_Ex/In-class_Ex05/In-class_Ex05.html#fruchterman-and-reingold-layout",
    "title": "In-Class Exercise 05",
    "section": "Fruchterman and Reingold layout",
    "text": "Fruchterman and Reingold layout\n\n\nShow me the good stuff\ng <- ggraph(GAStech_graph, \n            layout = \"fr\") +\n  geom_edge_link(aes()) +\n  geom_node_point(aes())\n\ng + theme_graph()"
  },
  {
    "objectID": "in-class_Ex/In-class_Ex05/In-class_Ex05.html#modifying-network-nodes",
    "href": "in-class_Ex/In-class_Ex05/In-class_Ex05.html#modifying-network-nodes",
    "title": "In-Class Exercise 05",
    "section": "Modifying Network Nodes",
    "text": "Modifying Network Nodes\n\n\nShow me the good stuff\ng <- ggraph(GAStech_graph, \n            layout = \"nicely\") + \n  geom_edge_link(aes()) +\n  geom_node_point(aes(colour = Department, \n                      size = 3))\n\ng + theme_graph()\n\n\n\n\n\n\ngeom_node_point is equivalent in functionality to geo_point of ggplot2. It allows for simple plotting of nodes in different shapes, colours and sizes. In the codes chnuks above colour and size are used."
  },
  {
    "objectID": "in-class_Ex/In-class_Ex05/In-class_Ex05.html#modifying-edges",
    "href": "in-class_Ex/In-class_Ex05/In-class_Ex05.html#modifying-edges",
    "title": "In-Class Exercise 05",
    "section": "Modifying Edges",
    "text": "Modifying Edges\n\n\nShow me the good stuff\ng <- ggraph(GAStech_graph, \n            layout = \"nicely\") +\n  geom_edge_link(aes(width=Weight), \n                 alpha=0.2) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(colour = Department), \n                  size = 3)\n\ng + theme_graph()"
  },
  {
    "objectID": "in-class_Ex/In-class_Ex05/In-class_Ex05.html#working-with-facet_edges",
    "href": "in-class_Ex/In-class_Ex05/In-class_Ex05.html#working-with-facet_edges",
    "title": "In-Class Exercise 05",
    "section": "Working with facet_edges()",
    "text": "Working with facet_edges()\n\nDefaultShift LegendAdd Frame\n\n\n\n\nShow me the good stuff\nset_graph_style()\n\ng <- ggraph(GAStech_graph, \n            layout = \"nicely\") + \n  geom_edge_link(aes(width=Weight), \n                 alpha=0.2) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(colour = Department), \n                  size = 2)\n\ng + facet_edges(~Weekday)\n\n\n\n\n\n\n\n\n\nShow me the good stuff\nset_graph_style()\n\ng <- ggraph(GAStech_graph, \n            layout = \"nicely\") + \n  geom_edge_link(aes(width=Weight), \n                 alpha=0.2) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(colour = Department), \n                  size = 2) +\n  theme(legend.position = 'bottom')\n  \ng + facet_edges(~Weekday)\n\n\n\n\n\n\n\n\n\nShow me the good stuff\nset_graph_style() \n\ng <- ggraph(GAStech_graph, \n            layout = \"nicely\") + \n  geom_edge_link(aes(width=Weight), \n                 alpha=0.2) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(colour = Department), \n                  size = 2)\n  \ng + facet_edges(~Weekday) +\n  th_foreground(foreground = \"grey80\",  \n                border = TRUE) +\n  theme(legend.position = 'bottom')"
  },
  {
    "objectID": "in-class_Ex/In-class_Ex05/In-class_Ex05.html#working-with-facet_nodes",
    "href": "in-class_Ex/In-class_Ex05/In-class_Ex05.html#working-with-facet_nodes",
    "title": "In-Class Exercise 05",
    "section": "Working with facet_nodes()",
    "text": "Working with facet_nodes()\n\n\nShow me the good stuff\nset_graph_style()\n\ng <- ggraph(GAStech_graph, \n            layout = \"nicely\") + \n  geom_edge_link(aes(width=Weight), \n                 alpha=0.2) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(colour = Department), \n                  size = 2)\n  \ng + facet_nodes(~Department)+\n  th_foreground(foreground = \"grey80\",  \n                border = TRUE) +\n  theme(legend.position = 'bottom')"
  },
  {
    "objectID": "in-class_Ex/In-class_Ex05/In-class_Ex05.html#computing-centrality-indices",
    "href": "in-class_Ex/In-class_Ex05/In-class_Ex05.html#computing-centrality-indices",
    "title": "In-Class Exercise 05",
    "section": "Computing centrality indices",
    "text": "Computing centrality indices\nCentrality measures are a collection of statistical indices use to describe the relative important of the actors are to a network. There are four well-known centrality measures, namely: degree, betweenness, closeness and eigenvector.\n\n\nShow me the good stuff\ng <- GAStech_graph %>%\n  mutate(betweenness_centrality = centrality_betweenness()) %>%\n  ggraph(layout = \"fr\") + \n  geom_edge_link(aes(width=Weight), \n                 alpha=0.2) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(colour = Department,\n            size=betweenness_centrality))\ng + theme_graph()"
  },
  {
    "objectID": "in-class_Ex/In-class_Ex05/In-class_Ex05.html#visualising-network-metrics",
    "href": "in-class_Ex/In-class_Ex05/In-class_Ex05.html#visualising-network-metrics",
    "title": "In-Class Exercise 05",
    "section": "Visualising network metrics",
    "text": "Visualising network metrics\n\n\nShow me the good stuff\ng <- GAStech_graph %>%\n  ggraph(layout = \"fr\") + \n  geom_edge_link(aes(width=Weight), \n                 alpha=0.2) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(colour = Department, \n                      size = centrality_betweenness()))\ng + theme_graph()"
  },
  {
    "objectID": "in-class_Ex/In-class_Ex05/In-class_Ex05.html#visualising-community",
    "href": "in-class_Ex/In-class_Ex05/In-class_Ex05.html#visualising-community",
    "title": "In-Class Exercise 05",
    "section": "Visualising Community",
    "text": "Visualising Community\n\n\nShow me the good stuff\ng <- GAStech_graph %>%\n  mutate(community = as.factor(group_edge_betweenness(weights = Weight, directed = TRUE))) %>%\n  ggraph(layout = \"fr\") + \n  geom_edge_link(aes(width=Weight), \n                 alpha=0.2) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(colour = community))  \n\ng + theme_graph()"
  },
  {
    "objectID": "in-class_Ex/In-class_Ex05/In-class_Ex05.html#data-prep",
    "href": "in-class_Ex/In-class_Ex05/In-class_Ex05.html#data-prep",
    "title": "In-Class Exercise 05",
    "section": "Data Prep",
    "text": "Data Prep\n\n\nShow me the good stuff\nGAStech_edges_aggregated <- GAStech_edges %>%\n  left_join(GAStech_nodes, by = c(\"sourceLabel\" = \"label\")) %>%\n  rename(from = id) %>%\n  left_join(GAStech_nodes, by = c(\"targetLabel\" = \"label\")) %>%\n  rename(to = id) %>%\n  filter(MainSubject == \"Work related\") %>%\n  group_by(from, to) %>%\n    summarise(weight = n()) %>%\n  filter(from!=to) %>%\n  filter(weight > 1) %>%\n  ungroup()"
  },
  {
    "objectID": "in-class_Ex/In-class_Ex05/In-class_Ex05.html#plotting-the-first-interactive-network-graph",
    "href": "in-class_Ex/In-class_Ex05/In-class_Ex05.html#plotting-the-first-interactive-network-graph",
    "title": "In-Class Exercise 05",
    "section": "Plotting the first interactive network graph",
    "text": "Plotting the first interactive network graph\n\n\nShow me the good stuff\nvisNetwork(GAStech_nodes, \n           GAStech_edges_aggregated)"
  },
  {
    "objectID": "in-class_Ex/In-class_Ex05/In-class_Ex05.html#working-with-layout",
    "href": "in-class_Ex/In-class_Ex05/In-class_Ex05.html#working-with-layout",
    "title": "In-Class Exercise 05",
    "section": "Working with layout",
    "text": "Working with layout\n\n\nShow me the good stuff\nvisNetwork(GAStech_nodes,\n           GAStech_edges_aggregated) %>%\n  visIgraphLayout(layout = \"layout_with_fr\")"
  },
  {
    "objectID": "in-class_Ex/In-class_Ex05/In-class_Ex05.html#working-with-visual-attributes---nodes",
    "href": "in-class_Ex/In-class_Ex05/In-class_Ex05.html#working-with-visual-attributes---nodes",
    "title": "In-Class Exercise 05",
    "section": "Working with visual attributes - Nodes",
    "text": "Working with visual attributes - Nodes\nvisNetwork() looks for a field called “group” in the nodes object and colour the nodes according to the values of the group field.\nThe code chunk below rename Department field to group.\n\n\nShow me the good stuff\nGAStech_nodes <- GAStech_nodes %>%\n  rename(group = Department) \n\n\nWhen we rerun the code chunk below, visNetwork shades the nodes by assigning unique colour to each category in the group field.\n\n\nShow me the good stuff\nvisNetwork(GAStech_nodes,\n           GAStech_edges_aggregated) %>%\n  visIgraphLayout(layout = \"layout_with_fr\") %>%\n  visLegend() %>%\n  visLayout(randomSeed = 123)"
  },
  {
    "objectID": "in-class_Ex/In-class_Ex05/In-class_Ex05.html#working-with-visual-attributes---edges",
    "href": "in-class_Ex/In-class_Ex05/In-class_Ex05.html#working-with-visual-attributes---edges",
    "title": "In-Class Exercise 05",
    "section": "Working with visual attributes - Edges",
    "text": "Working with visual attributes - Edges\nIn the code run below visEdges() is used to symbolise the edges. - The argument arrows is used to define where to place the arrow. - The smooth argument is used to plot the edges using a smooth curve.\n\n\nShow me the good stuff\nvisNetwork(GAStech_nodes,\n           GAStech_edges_aggregated) %>%\n  visIgraphLayout(layout = \"layout_with_fr\") %>%\n  visEdges(arrows = \"to\", \n           smooth = list(enabled = TRUE, \n                         type = \"curvedCW\")) %>%\n  visLegend() %>%\n  visLayout(randomSeed = 123)"
  },
  {
    "objectID": "in-class_Ex/In-class_Ex05/In-class_Ex05.html#interactivity",
    "href": "in-class_Ex/In-class_Ex05/In-class_Ex05.html#interactivity",
    "title": "In-Class Exercise 05",
    "section": "Interactivity",
    "text": "Interactivity\n\n\nShow me the good stuff\nvisNetwork(GAStech_nodes,\n           GAStech_edges_aggregated) %>%\n  visIgraphLayout(layout = \"layout_with_fr\") %>%\n  visOptions(highlightNearest = TRUE,\n             nodesIdSelection = TRUE) %>%\n  visLegend() %>%\n  visLayout(randomSeed = 123)"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "ISSS608-VAA",
    "section": "",
    "text": "Welcome to ISSS608 Visual Analytics and Applications. In this website, you will find Leonard Lee’s coursework prepared for this course."
  },
  {
    "objectID": "take-home_Ex/take-home_Ex01/take-home_Ex01.html",
    "href": "take-home_Ex/take-home_Ex01/take-home_Ex01.html",
    "title": "Take-Home Exercise 1",
    "section": "",
    "text": "City of Engagement, with a total population of 50,000, is a small city located at Country of Nowhere. The city serves as a service centre of an agriculture region surrounding the city. The main agriculture of the region is fruit farms and vineyards. The local council of the city is in the process of preparing the Local Plan 2023. A sample survey of 1000 representative residents had been conducted to collect data related to their household demographic and spending patterns, among other things. The city aims to use the data to assist with their major community revitalization efforts, including how to allocate a very large city renewal grant they have recently received."
  },
  {
    "objectID": "take-home_Ex/take-home_Ex01/take-home_Ex01.html#financial-dataset-summary",
    "href": "take-home_Ex/take-home_Ex01/take-home_Ex01.html#financial-dataset-summary",
    "title": "Take-Home Exercise 1",
    "section": "3.1 Financial Dataset Summary",
    "text": "3.1 Financial Dataset Summary\n\n\nShow me the good stuff\nHmisc::describe(Fdata)\n\n\nFdata \n\n 4  Variables      1513636  Observations\n--------------------------------------------------------------------------------\nparticipantId \n       n  missing distinct     Info     Mean      Gmd      .05      .10 \n 1513636        0     1011        1    480.9    341.2       43       86 \n     .25      .50      .75      .90      .95 \n     222      464      726      918      967 \n\nlowest :    0    1    2    3    4, highest: 1006 1007 1008 1009 1010\n--------------------------------------------------------------------------------\ntimestamp \n                  n             missing            distinct                Info \n            1513636                   0               87366                   1 \n               Mean                 Gmd                 .05                 .10 \n2022-08-26 05:00:48            10684501 2022-03-14 14:00:00 2022-03-31 07:20:00 \n                .25                 .50                 .75                 .90 \n2022-05-24 13:25:00 2022-08-25 15:00:00 2022-11-27 07:25:00 2023-01-22 10:20:00 \n                .95 \n2023-02-09 20:10:00 \n\nlowest : 2022-03-01 00:00:00 2022-03-01 04:50:00 2022-03-01 05:30:00 2022-03-01 05:40:00 2022-03-01 05:45:00\nhighest: 2023-02-28 23:35:00 2023-02-28 23:40:00 2023-02-28 23:45:00 2023-02-28 23:50:00 2023-02-28 23:55:00\n--------------------------------------------------------------------------------\ncategory \n       n  missing distinct \n 1513636        0        6 \n                                                                      \nValue           Education           Food     Recreation RentAdjustment\nFrequency            3319         790051         296013            131\nProportion          0.002          0.522          0.196          0.000\n                                        \nValue             Shelter           Wage\nFrequency           11463         412659\nProportion          0.008          0.273\n--------------------------------------------------------------------------------\namount \n       n  missing distinct     Info     Mean      Gmd      .05      .10 \n 1513636        0     6690    0.981    20.05    66.15  -21.050  -15.182 \n     .25      .50      .75      .90      .95 \n  -5.594   -4.000   21.598  107.467  159.561 \n\nlowest : -1562.73 -1556.36 -1499.25 -1475.67 -1458.69\nhighest: 4059.86  4069.45  4078.12  4085.39  4096.53 \n--------------------------------------------------------------------------------"
  },
  {
    "objectID": "take-home_Ex/take-home_Ex01/take-home_Ex01.html#joviality-dataset-summary",
    "href": "take-home_Ex/take-home_Ex01/take-home_Ex01.html#joviality-dataset-summary",
    "title": "Take-Home Exercise 1",
    "section": "3.2 Joviality Dataset Summary",
    "text": "3.2 Joviality Dataset Summary\n\n\nShow me the good stuff\nHmisc::describe(Jdata)\n\n\nJdata \n\n 7  Variables      1011  Observations\n--------------------------------------------------------------------------------\nparticipantId \n       n  missing distinct     Info     Mean      Gmd      .05      .10 \n    1011        0     1011        1      505    337.3     50.5    101.0 \n     .25      .50      .75      .90      .95 \n   252.5    505.0    757.5    909.0    959.5 \n\nlowest :    0    1    2    3    4, highest: 1006 1007 1008 1009 1010\n--------------------------------------------------------------------------------\nhouseholdSize \n       n  missing distinct     Info     Mean      Gmd \n    1011        0        3    0.886    1.964   0.8635 \n                            \nValue          1     2     3\nFrequency    337   373   301\nProportion 0.333 0.369 0.298\n\nFor the frequency table, variable is rounded to the nearest 0.02\n--------------------------------------------------------------------------------\nhaveKids \n       n  missing distinct \n    1011        0        2 \n                      \nValue      FALSE  TRUE\nFrequency    710   301\nProportion 0.702 0.298\n--------------------------------------------------------------------------------\nage \n       n  missing distinct     Info     Mean      Gmd      .05      .10 \n    1011        0       43    0.999    39.07     14.3       20       22 \n     .25      .50      .75      .90      .95 \n      29       39       50       56       58 \n\nlowest : 18 19 20 21 22, highest: 56 57 58 59 60\n--------------------------------------------------------------------------------\neducationLevel \n       n  missing distinct \n    1011        0        4 \n                                                                      \nValue                Bachelors            Graduate HighSchoolOrCollege\nFrequency                  232                 170                 525\nProportion               0.229               0.168               0.519\n                              \nValue                      Low\nFrequency                   84\nProportion               0.083\n--------------------------------------------------------------------------------\ninterestGroup \n       n  missing distinct \n    1011        0       10 \n                                                                      \nValue          A     B     C     D     E     F     G     H     I     J\nFrequency    102    91   102    96    83   106   108   111    96   116\nProportion 0.101 0.090 0.101 0.095 0.082 0.105 0.107 0.110 0.095 0.115\n--------------------------------------------------------------------------------\njoviality \n       n  missing distinct     Info     Mean      Gmd      .05      .10 \n    1011        0     1011        1   0.4938   0.3364  0.05642  0.10871 \n     .25      .50      .75      .90      .95 \n 0.24007  0.47754  0.74682  0.90645  0.96024 \n\nlowest : 0.000204  0.000265  0.000985  0.0013658 0.0016267\nhighest: 0.992602  0.997605  0.997671  0.998644  0.999234 \n--------------------------------------------------------------------------------"
  },
  {
    "objectID": "take-home_Ex/take-home_Ex01/take-home_Ex01.html#correcting-demographic-data-format-jdata",
    "href": "take-home_Ex/take-home_Ex01/take-home_Ex01.html#correcting-demographic-data-format-jdata",
    "title": "Take-Home Exercise 1",
    "section": "3.3 Correcting Demographic Data Format [Jdata]",
    "text": "3.3 Correcting Demographic Data Format [Jdata]\n\n\n\n\n\n\nNote\n\n\n\n\n\n\nparticipantId is currently classified as  instead of nominal, and is cast to  class using as.character().\neducationLevel is currently classified as  categorical data, and is cast as factor type using the ordered() function, in accordance to its inherent hierarchy.\nhouseholdSize and interestGroup are classified as  and  respectively despite being categorical in nature. The two variables are cast as factors using as.factor()\n\n\n\n\n\n\nShow me the good stuff\nJdata_new <- Jdata %>%\n  #change PariticipantId to <chr>\n  mutate(participantId = as.character(Jdata$participantId),\n         \n  #update educationaLevel with ordinal scale\n  educationLevel = ordered(Jdata$educationLevel, levels = c(\"Graduate\", \"Bachelors\", \"HighSchoolOrCollege\", \"Low\")),\n  \n  # Cast householdSize and interestGroup as factors\n  householdSize = as.factor(Jdata$householdSize),\n  interestGroup = as.factor(Jdata$interestGroup)\n  )"
  },
  {
    "objectID": "take-home_Ex/take-home_Ex01/take-home_Ex01.html#correcting-financial-data-format-fdata",
    "href": "take-home_Ex/take-home_Ex01/take-home_Ex01.html#correcting-financial-data-format-fdata",
    "title": "Take-Home Exercise 1",
    "section": "3.4.1 Correcting Financial Data Format [Fdata]",
    "text": "3.4.1 Correcting Financial Data Format [Fdata]\n\n\n\n\n\n\nNote\n\n\n\n\n\n\nparticipantId is currently classified as  instead of nominal, and is cast to  class using as.character().\ncategory is classified as , and is cast as factor using as.factor()\n\n\n\n\n\n\nShow me the good stuff\nFdata_new <- Fdata %>%\n  #change PariticipantId to <chr>\n  mutate(participantId = as.character(Fdata$participantId),\n         \n  #Extract Year-Month from timestamp\n  YMDate = paste0(year(timestamp), \"-\", sprintf(\"%02d\", month(timestamp))),\n         \n  # Cast householdSize and interestGroup as factors\n  category = as.factor(Fdata$category),\n  \n  # Round amount to 2dp\n  amount = as.integer(round(amount, digits = 2))\n  ) %>%\n  \n  # remove original timestamp column\n  select(-timestamp) %>%\n  \n  #sort by ParticipantId\n  arrange(participantId)"
  },
  {
    "objectID": "take-home_Ex/take-home_Ex01/take-home_Ex01.html#pivoting-financial-data-fdata_new",
    "href": "take-home_Ex/take-home_Ex01/take-home_Ex01.html#pivoting-financial-data-fdata_new",
    "title": "Take-Home Exercise 1",
    "section": "3.4.2 Pivoting Financial Data [Fdata_new]",
    "text": "3.4.2 Pivoting Financial Data [Fdata_new]\n\n\nShow me the good stuff\nPivot_Fdata <- Fdata_new %>%\n               #Define row groups\n               group_by(participantId, YMDate) %>%\n  \n               # Sum total amount per category for each month\n               summarise(Education = sum(amount[category == \"Education\"]),\n                         Food = sum(amount[category == \"Food\"]),\n                         Shelter = sum(amount[category == \"Shelter\"]),\n                         Recreation = sum(amount[category == \"Recreation\"]),\n                         RentAdjmt = sum(amount[category == \"RentAdjustment\"]),\n                         Wage = sum(amount[category == \"Wage\"])) %>%\n                ungroup()\n  \nhead(Pivot_Fdata, n = 3)\n\n\n# A tibble: 3 × 8\n  participantId YMDate  Education  Food Shelter Recreation RentAdjmt  Wage\n  <chr>         <chr>       <int> <int>   <int>      <int>     <int> <int>\n1 0             2022-03       -76  -259   -1108       -335         0 11902\n2 0             2022-04       -38  -255    -554       -213         0  8610\n3 0             2022-05       -38  -257    -554       -368         0  9020"
  },
  {
    "objectID": "take-home_Ex/take-home_Ex01/take-home_Ex01.html#examining-demographic-data-groups",
    "href": "take-home_Ex/take-home_Ex01/take-home_Ex01.html#examining-demographic-data-groups",
    "title": "Take-Home Exercise 1",
    "section": "4.1 Examining Demographic Data Groups",
    "text": "4.1 Examining Demographic Data Groups\n\n4.1.1 Age Groups\nThrough a dotplot, we see that age distribution across the participants is spread between 18 to 60, with minor fluctuations.\n\n\nShow me the good stuff\n# Computing min and max age to annotate plot\nmin_age <- min(Joined_data$age)\nmax_age <- max(Joined_data$age)\n\n\ndem_age <- ggplot(Joined_data, aes(x = age)) +\n  geom_dotplot(binwidth = 1,\n               stackratio = 1.2,\n               stackdir = \"up\",\n               fill = \"#00BF7D\", #< Fill colour same as bar charts\n               color = NA,\n               dotsize = 0.6) +\n  labs(title = \"Age\",\n       x = NULL,\n       y = NULL)\n\ndem_age2 <-dem_age + \n            annotate(geom = \"text\", x = min_age, y = 0.83,\n            label = paste0(\"Youngest:\\n\", min_age)) + #< add text annotation to show age range\n            annotate(geom = \"text\", x = max_age, y = 0.83,\n            label = paste0(\"Oldest:\\n\", max_age)) +\n            theme(axis.text.y = element_blank(), #< remove unnecessary elements from plot\n            panel.grid.major = element_blank())\ndem_age2\n\n\n\n\n\n\nParticipants are further grouped by age into four categories, each encompassing approximately 10 years of age range:\n18-29, 30-39, 40-49, 50-60\n\n\n\n4.1.2 Grouping Participants by Age\n\nCodeDistribution Barchart\n\n\n\n\nShow me the good stuff\nJoined_data$ageGroup <- as.factor(cut(Joined_data$age,\n                                        breaks = c(0,29,39,49,60),\n                                        labels = c(\"18-29\", \"30-39\", \"40-49\", \"50-60\")))\n\n\n\n\n\n\nShow me the good stuff\n# Barchart of ageGroup\ndem_agegrp<- ggplot(Joined_data, aes(x = ageGroup, fill = ageGroup)) +\n            geom_bar() +\n            labs(title = \"Even Distribution of Participants across Age Groups\", #< Linebreak added to title so it does not get truncated\n                  x = \"Age Group\",\n                  y = NULL) +\n            geom_text(stat = \"count\",\n                      aes(label = after_stat(count)),\n                      vjust = -1) +\n            ylim(0,400) + #< Same y-axis limits for both age and wage plots to standardise\n            theme(text = element_text(size = 12))\n\ndem_agegrp\n\n\n\n\n\n\n\n\n\n\n4.1.3 Household Size\n\n\nShow me the good stuff\n# Calculate proportion of household sizes\nproportion <- Joined_data %>%\n  count(householdSize) %>%\n  mutate(prop = n / sum(n))\n\n# Create pie chart\npie_chart <- ggplot(proportion, aes(x = \"\", y = prop, fill = householdSize)) +\n  geom_bar(stat = \"identity\", color = \"black\") +\n  coord_polar(\"y\", start = 0) +\n  geom_text(aes(label = percent(prop)), position = position_stack(vjust = 0.5)) +\n  scale_y_continuous(labels = percent_format()) +\n  labs(fill = \"Household Size\") +\n  ggtitle(\"Proportion of Household Sizes\") +\n  theme_void() +\n  theme(legend.position = \"right\")\n\n# Display pie chart\npie_chart\n\n\n\n\n\n\nHere, we see that there is a relatively even proportion of household sizes throughout the surveyed participants, with household size of 2 being slightly more prevalent."
  },
  {
    "objectID": "take-home_Ex/take-home_Ex01/take-home_Ex01.html#joviality",
    "href": "take-home_Ex/take-home_Ex01/take-home_Ex01.html#joviality",
    "title": "Take-Home Exercise 1",
    "section": "5.1 Joviality",
    "text": "5.1 Joviality\nThe survey returned a range of Joviality scores between 0 and 1, and it is assumed that 1 is the maximum score to which one is most Jovial (or happy), and 0 is conversely the minimum score to which indicates the lowest possible state of happiness at the time of survey.\n\nNormality Testing and Distribution\n\nNormality TestingDistribution\n\n\n\n\nShow me the good stuff\nqq <- ggplot(Joined_data, \n       aes(sample=joviality)) +\n  stat_qq() +\n  stat_qq_line()\n\nsw_t <- Joined_data %>%\n  shapiro_test(joviality) %>%\n  gt()\n\ntmp <- tempfile(fileext = '.png')\ngtsave(sw_t, tmp)\ntable_png <- png::readPNG(tmp, native = TRUE)\n\nqq + table_png\n\n\n\n\n\nThe qqplot compares the distribution of the data against the expected normal distribution. As the points deviate significantly from the line, the qqplot suggests that the data is not normally distributed.\nThe Shapiro-Wilk test is a widely used method to test for normality. As p < 0.05, there is sufficient statistical power to reject the null hypothesis that the data is normally distributed.\n\n\n\n\nShow me the good stuff\nmean_j <- mean(Joined_data$joviality)\nmed_j <- median(Joined_data$joviality)\nstd_j <- sd(Joined_data$joviality)\n\nggplot(Joined_data, aes(x = joviality)) + \n      geom_histogram(aes(y = ..density..),\n                    binwidth = 0.05, \n                    fill = \"#CCFF99\",\n                    color = \"grey\") +\n      stat_function(fun = dnorm,\n                args = list(mean = mean_j,\n                            sd = std_j),\n                col = \"skyblue\",\n                linewidth = 1) +\n      geom_vline(aes(xintercept = mean_j),\n                colour=\"#4d5887\", linewidth = 0.8, linetype = \"dashed\") +\n      annotate(geom = \"text\", x = mean_j + 0.12, y = 1.4,\n                  label = paste0(\"Mean Joviality: \", round((mean_j),2)),\n                  color = \"#4d5887\") +\n      geom_vline(aes(xintercept = med_j),\n                colour=\"grey20\", linewidth = 0.8, linetype = \"dashed\") +\n      annotate(geom = \"text\", x = med_j - 0.13, y = 1.5,\n                  label = paste0(\"Median Joviality: \", round((med_j),2)),\n                  color = \"grey20\") +\n      scale_x_continuous(breaks = scales::pretty_breaks(n = 10)) +\n      labs(title = \"Distribution of Participants' Joviality Scores\") +\n      theme(axis.text.y = element_blank(),\n            axis.title.y = element_blank(),\n            panel.grid.major = element_blank())"
  },
  {
    "objectID": "take-home_Ex/take-home_Ex01/take-home_Ex01.html#collinearity-check",
    "href": "take-home_Ex/take-home_Ex01/take-home_Ex01.html#collinearity-check",
    "title": "Take-Home Exercise 1",
    "section": "Collinearity Check",
    "text": "Collinearity Check\n\nThe variables householdSize and haveKids cause aliasing when run together, therefore two separate collinearity checks are run using each at a time.\n\n\nhouseholdSizehaveKidsModel 1 Visualisation\n\n\n\n\nShow me the good stuff\n# Load the car package\nlibrary(car)\n\n# Fit the linear regression model\nmodel <- lm(joviality ~ Education + Food + Recreation + \n              Shelter + Wage + RentAdjmt + householdSize + age + educationLevel + interestGroup, data = Joined_data)\n\nsummary(model)\n\n\n\nCall:\nlm(formula = joviality ~ Education + Food + Recreation + Shelter + \n    Wage + RentAdjmt + householdSize + age + educationLevel + \n    interestGroup, data = Joined_data)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-0.5659 -0.1675 -0.0186  0.1547  0.9198 \n\nCoefficients:\n                   Estimate Std. Error t value Pr(>|t|)    \n(Intercept)       5.359e-01  4.611e-02  11.623  < 2e-16 ***\nEducation        -6.120e-04  3.385e-04  -1.808  0.07092 .  \nFood             -9.295e-04  1.092e-04  -8.515  < 2e-16 ***\nRecreation       -6.234e-04  4.810e-05 -12.960  < 2e-16 ***\nShelter           6.775e-04  4.738e-05  14.300  < 2e-16 ***\nWage             -6.876e-05  4.217e-06 -16.306  < 2e-16 ***\nRentAdjmt         2.609e-03  2.859e-04   9.125  < 2e-16 ***\nhouseholdSize2    2.782e-01  2.322e-02  11.984  < 2e-16 ***\nhouseholdSize3    2.593e-01  3.240e-02   8.002  3.4e-15 ***\nage              -1.174e-03  5.763e-04  -2.037  0.04191 *  \neducationLevel.L -2.713e-01  2.563e-02 -10.585  < 2e-16 ***\neducationLevel.Q  3.047e-02  1.777e-02   1.715  0.08674 .  \neducationLevel.C  4.646e-02  1.421e-02   3.269  0.00111 ** \ninterestGroupB    1.286e-02  3.263e-02   0.394  0.69354    \ninterestGroupC    5.876e-02  3.175e-02   1.851  0.06450 .  \ninterestGroupD    6.739e-03  3.232e-02   0.209  0.83488    \ninterestGroupE    4.198e-02  3.347e-02   1.254  0.21004    \ninterestGroupF    6.389e-03  3.148e-02   0.203  0.83922    \ninterestGroupG    5.862e-02  3.148e-02   1.862  0.06290 .  \ninterestGroupH   -1.497e-02  3.103e-02  -0.483  0.62954    \ninterestGroupI    7.354e-02  3.225e-02   2.280  0.02282 *  \ninterestGroupJ    2.276e-02  3.075e-02   0.740  0.45938    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.2253 on 989 degrees of freedom\nMultiple R-squared:  0.4146,    Adjusted R-squared:  0.4021 \nF-statistic: 33.35 on 21 and 989 DF,  p-value: < 2.2e-16\n\n\nShow me the good stuff\n# Calculate the VIFs using the vif() function\nvif_values <- vif(model)\n\n# Print the VIFs\nprint(vif_values)\n\n\n                   GVIF Df GVIF^(1/(2*Df))\nEducation      2.908455  1        1.705419\nFood           3.217499  1        1.793739\nRecreation     2.026892  1        1.423690\nShelter        4.497444  1        2.120718\nWage           1.751992  1        1.323628\nRentAdjmt      1.082507  1        1.040436\nhouseholdSize  5.687538  2        1.544298\nage            1.013009  1        1.006484\neducationLevel 2.043000  3        1.126449\ninterestGroup  1.121875  9        1.006409\n\n\n\n\n\n\nShow me the good stuff\n# Load the car package\nlibrary(car)\n\n# Fit the linear regression model\nmodel2 <- lm(joviality ~ Education + Food + Recreation + \n              Shelter + Wage + RentAdjmt + haveKids + age + educationLevel + interestGroup, data = Joined_data)\n\nsummary(model2)\n\n\n\nCall:\nlm(formula = joviality ~ Education + Food + Recreation + Shelter + \n    Wage + RentAdjmt + haveKids + age + educationLevel + interestGroup, \n    data = Joined_data)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-0.56878 -0.17546 -0.00286  0.16902  0.60775 \n\nCoefficients:\n                   Estimate Std. Error t value Pr(>|t|)    \n(Intercept)       7.151e-01  4.665e-02  15.328  < 2e-16 ***\nEducation        -9.051e-04  3.611e-04  -2.507   0.0124 *  \nFood             -2.016e-04  9.702e-05  -2.078   0.0380 *  \nRecreation       -5.279e-04  5.074e-05 -10.404  < 2e-16 ***\nShelter           3.130e-04  3.886e-05   8.056 2.25e-15 ***\nWage             -6.377e-05  4.488e-06 -14.208  < 2e-16 ***\nRentAdjmt         2.127e-03  3.028e-04   7.025 3.99e-12 ***\nhaveKidsTRUE      4.370e-02  2.882e-02   1.516   0.1298    \nage              -1.365e-03  6.162e-04  -2.216   0.0269 *  \neducationLevel.L -2.366e-01  2.724e-02  -8.687  < 2e-16 ***\neducationLevel.Q  2.275e-02  1.899e-02   1.198   0.2314    \neducationLevel.C  2.781e-02  1.511e-02   1.840   0.0660 .  \ninterestGroupB    5.587e-03  3.489e-02   0.160   0.8728    \ninterestGroupC    4.290e-02  3.393e-02   1.264   0.2064    \ninterestGroupD    2.610e-03  3.457e-02   0.076   0.9398    \ninterestGroupE    4.234e-02  3.580e-02   1.183   0.2372    \ninterestGroupF   -7.587e-03  3.365e-02  -0.225   0.8217    \ninterestGroupG    4.723e-02  3.366e-02   1.403   0.1608    \ninterestGroupH   -1.364e-02  3.319e-02  -0.411   0.6811    \ninterestGroupI    5.149e-02  3.444e-02   1.495   0.1353    \ninterestGroupJ    2.821e-02  3.288e-02   0.858   0.3912    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.241 on 990 degrees of freedom\nMultiple R-squared:  0.3295,    Adjusted R-squared:  0.316 \nF-statistic: 24.33 on 20 and 990 DF,  p-value: < 2.2e-16\n\n\nShow me the good stuff\n# Calculate the VIFs using the vif() function\nvif_values2 <- vif(model)\n\n# Print the VIFs\nprint(vif_values2)\n\n\n                   GVIF Df GVIF^(1/(2*Df))\nEducation      2.908455  1        1.705419\nFood           3.217499  1        1.793739\nRecreation     2.026892  1        1.423690\nShelter        4.497444  1        2.120718\nWage           1.751992  1        1.323628\nRentAdjmt      1.082507  1        1.040436\nhouseholdSize  5.687538  2        1.544298\nage            1.013009  1        1.006484\neducationLevel 2.043000  3        1.126449\ninterestGroup  1.121875  9        1.006409\n\n\n\n\n\n\nShow me the good stuff\n# create plot\nmodel1V <- lm(joviality ~ Education + Food + Recreation + \n              Shelter + Wage + RentAdjmt + householdSize + haveKids + age + educationLevel + interestGroup, data = Joined_data)\n\ncheck_c <- check_collinearity(model1V)\nplot(check_c)\n\n\n\n\n\nShow me the good stuff\n# rotate x-axis labels\npar(las=2) #doesn't work to rotate labels\n\n\n\n\n\n\nBased on the collinearity checks, we observe that the highest scoring variable (householdSize) scored at 5.69, suggesting moderate correlation between householdSize and joviality, which means they may share some common variance but are not highly correlated to cause multicollinearity."
  },
  {
    "objectID": "take-home_Ex/take-home_Ex01/take-home_Ex01.html#financial-variables",
    "href": "take-home_Ex/take-home_Ex01/take-home_Ex01.html#financial-variables",
    "title": "Take-Home Exercise 1",
    "section": "5.2 Financial Variables",
    "text": "5.2 Financial Variables\n\nCut Wage and Expense Proportion into Categories based on Quantiles\nFor insights involving Financial Variables, the participants will be grouped by income level, as well as the proportion of their income (Wage) being spent (Expense_Prop).\n\n\nShow me the good stuff\ndescribe(Joined_data$Wage) #to assess best cut points for income levels\n\n\nJoined_data$Wage \n       n  missing distinct     Info     Mean      Gmd      .05      .10 \n    1011        0      984        1     4044     2162     1947     2169 \n     .25      .50      .75      .90      .95 \n    2551     3388     4781     6574     8428 \n\nlowest : 1882    1888.5  1892.83 1896.17 1896.5 \nhighest: 14493.7 14681.2 14912.3 17619.9 17622.8\n\n\n\n\nShow me the good stuff\ndescribe(Joined_data$Expense_Prop) #to assess best cut points for income levels\n\n\nJoined_data$Expense_Prop \n       n  missing distinct     Info     Mean      Gmd      .05      .10 \n    1011        0     1011        1    36.54    26.32    2.196    5.549 \n     .25      .50      .75      .90      .95 \n  18.854   33.714   53.571   69.468   76.885 \n\nlowest : 1.19863 1.21166 1.23352 1.45849 1.45884\nhighest: 89.507  90.5418 91.4664 94.9011 96.6968\n\n\n\nBased on the distribution described above, the cut points values matching 25th, 50th and 90th percentile are used to group participants by income level and expense proportion:\nBottom 25th Percentile -> Low Income 26th to 50th Percentile -> Low-Middle Income 50th to 90th Percentile -> Middle-High Income Top 10th Percentile -> High Income\nBottom 25th Percentile -> Low Proportion 26th to 50th Percentile -> Low-Middle Proportion 50th to 90th Percentile -> Middle-High Proportion Top 10th Percentile -> High Proportion\n\n\n\n5.2.1 Grouping Participants by Income Levels\n\nCodeDistribution Barchart\n\n\n\n\nShow me the good stuff\n# Define the breaks for the three bins\nbreaks <- c(0, 2551, 3388, 6574, Inf)\n\n# Bin the Wage variable into three categories using cut()\nincome_levels <- cut(Joined_data$Wage, breaks, labels = c(\"Low\", \"Low-Middle\", \"Middle-High\", \"High\"))\n\n# Add the income levels as a new column in the dataset\nJoined_data$Income_Level <- income_levels\n\n\n\n\n\n\nShow me the good stuff\n# Barchart of Income Level\ndem_incomelvl<- ggplot(Joined_data, aes(x = Income_Level, fill = Income_Level)) +\n            geom_bar() +\n            labs(title = \"High Distribution of \\nParticipants in Middle-High Income Level\", #< Linebreak added \n                  x = \"Income Level\",\n                  y = NULL) +\n            geom_text(stat = \"count\",\n                      aes(label = after_stat(count)),\n                      vjust = -1) +\n            ylim(0,500) + \n            theme(text = element_text(size = 12))\n\ndem_incomelvl\n\n\n\n\n\n\n\n\n\n\n5.2.2 Grouping Participants by Expense Proportion Category\n\nCodeDistribution Barchart\n\n\n\n\nShow me the good stuff\n# Define the breaks for the three bins\nbreaks <- c(0, 18.854, 33.714, 69.468, Inf)\n\n# Bin the Wage variable into three categories using cut()\nExpense_PropC <- cut(Joined_data$Expense_Prop, breaks, labels = c(\"Low\", \"Low-Middle\", \"Middle-High\", \"High\"))\n\n# Add the income levels as a new column in the dataset\nJoined_data$Expense_PropCat <- Expense_PropC\n\n\n\n\n\n\nShow me the good stuff\n# Barchart of Income Level\ndem_Exp_PropC<- ggplot(Joined_data, aes(x = Expense_PropCat, fill = Expense_PropCat)) +\n            geom_bar() +\n            labs(title = \"High Distribution of \\nParticipants in Middle-High Expense Proportion Cat\", #< Linebreak added \n                  x = \"Expense Prop Cat\",\n                  y = NULL) +\n            geom_text(stat = \"count\",\n                      aes(label = after_stat(count)),\n                      vjust = -1) +\n            ylim(0,500) + \n            theme(text = element_text(size = 12))\n\ndem_Exp_PropC"
  },
  {
    "objectID": "take-home_Ex/take-home_Ex01/take-home_Ex01.html#association-testing-chi-squared-test",
    "href": "take-home_Ex/take-home_Ex01/take-home_Ex01.html#association-testing-chi-squared-test",
    "title": "Take-Home Exercise 1",
    "section": "5.3 Association Testing (Chi-Squared Test)",
    "text": "5.3 Association Testing (Chi-Squared Test)\n\nOf the variables tested, only Education Level is significantly associated with Expense Proportion Category (p <0.05).\nWe therefore reject the null hypothesis that there is no association between the variables.\n\n\nChildrenEducation LevelsInterest GroupIncome Level\n\n\n\n\nShow me the good stuff\nset.seed(1234)\ntest_kids <- ggbarstats(Joined_data,\n                          x = haveKids, y = Expense_PropCat, \n                        bf.message = FALSE)+\n            labs(title = \"Constant Proportion of Children Across Expense Proportion Categories\",\n                 x = \"Expense Proportion Category\") +\n            theme(plot.background = element_rect(fill=\"#F8F3E6\",colour=\"#F8F3E6\"))\ntest_kids\n\n\n\n\n\n\n\n\n\nShow me the good stuff\nset.seed(1234)\ntest_edlvl <- ggbarstats(Joined_data,\n                          x = educationLevel, y = Expense_PropCat,\n                          bf.message = FALSE) +\n            labs(title = \"Large Proportion of Low Expense Proportion Category are Higher Educated\",\n                 x = \"Expense Proportion Category\") +\n            theme(plot.background = element_rect(fill=\"#F8F3E6\",colour=\"#F8F3E6\"))\ntest_edlvl\n\n\n\n\n\n\n\n\n\nShow me the good stuff\nset.seed(1234)\ntest_age <- ggbarstats(Joined_data,\n                          x = ageGroup, y = Expense_PropCat,\n                          bf.message = FALSE) +\n            labs(title = \"Even Proportion of Expense Proportion Category Across Age Groups\",\n                 x = \"Expense Proportion Category\") +\n            theme(plot.background = element_rect(fill=\"#F8F3E6\",colour=\"#F8F3E6\"))\ntest_age\n\n\n\n\n\n\n\n\n\nShow me the good stuff\nset.seed(1234)\ntest_inclvl <- ggbarstats(Joined_data,\n                          x = Income_Level, y = Expense_PropCat,\n                          bf.message = FALSE) +\n            labs(title = \"High Income Level Earners Exclusively Within Low and Low Middle \\n Expense Proportion Categories\",\n                 x = \"Expense Proportion Category\") +\n            theme(plot.background = element_rect(fill=\"#F8F3E6\",colour=\"#F8F3E6\"))\ntest_inclvl\n\n\n\n\n\n\n\n\n\n5.4 Comparison of mean Joviality Scores (ANOVA)\nA non-parametric Kruskal-Wallis one-way ANOVA test is conducted to determine if there is a significant difference in mean joviality score between the following factors. We test for the null hypothesis that there is no difference in mean between the variable factors, at confidence level of 0.05.\n\nIncome LevelsAge GroupsEducation LevelsHousehold SizeInterest Groups\n\n\n\n\nShow me the good stuff\nggbetweenstats(Joined_data, x= Income_Level, y= joviality) +\n  labs(x = \"Income Level\", y = \"Joviality Score\")\n\n\n\n\n\nAs p is less than 0.05, we reject the null hypothesis that there is no significant difference in means across income groups.\n\n\n\n\nShow me the good stuff\nggbetweenstats(Joined_data, x= ageGroup, y= joviality) +\n  labs(x = \"Age Group\", y = \"Joviality Score\")\n\n\n\n\n\nAn interesting insight can be gleaned from this comparison of means- as a significantly higher mean joviality score is observed in both Middle and Lower income groups, while the lowest mean score is observed in the High income group.\n\n\n\n\nShow me the good stuff\nggbetweenstats(Joined_data, x= educationLevel, y= joviality) +\n  labs(x = \"Education Level\", y = \"Joviality Score\")\n\n\n\n\n\nThrough comparison of mean joviality scores across education levels, the null hypothesis is that there is no difference between means. As p > 0.05, we accept the null hypothesis.\n\n\n\n\nShow me the good stuff\nggbetweenstats(Joined_data, x= householdSize, y= joviality) +\n  labs(x = \"Household Size\", y = \"Joviality Score\")\n\n\n\n\n\n\n\n\n\nShow me the good stuff\nggbetweenstats(Joined_data, x = interestGroup, y = joviality) +\n  scale_color_manual(values = viridis(length(levels(Joined_data$interestGroup)))) +\n  labs(x = \"Interest Group\", y = \"Joviality Score\")\n\n\n\n\n\n\n\n\n\nInsights\n\nA significantly higher mean joviality score is observed in both Middle and Lower income groups, while the lowest mean score is observed in the High income group.\nP-value is >0.05 for all variables except for Income Group, with marginal difference between means within the variables."
  },
  {
    "objectID": "take-home_Ex/take-home_Ex01/take-home_Ex01.html#wage-across-education-levels",
    "href": "take-home_Ex/take-home_Ex01/take-home_Ex01.html#wage-across-education-levels",
    "title": "Take-Home Exercise 1",
    "section": "5.5 Wage across Education Levels",
    "text": "5.5 Wage across Education Levels\n\nInteractive Density PlotRidgeplotRaincloud Plot (sans dotplot)\n\n\n\n\nShow me the good stuff\n# prepare the data\nJoined_data$education_group <- factor(Joined_data$educationLevel, \n                                 levels = c(\"Low\", \"HighSchoolOrCollege\", \"Bachelors\", \"Graduate\"), \n                                 labels = c(\"Low education\", \"High School or College\", \"Bachelor's Degree\", \"Graduate Degree\"))\n\n\n# create the ggplot object\n\np <- ggplot(Joined_data, aes(x = Wage, fill = education_group)) +\n  geom_density(alpha = 0.6) +\n  labs(x = \"Wage ($)\") +\n  labs(title = 'Wage Distribution across Education Levels', fill = 'Education Level') +\n  theme(axis.text.y = element_blank(), axis.title.y = element_blank())\n\n\n\n# convert to interactive plot\nggplotly(p)\n\n\n\n\n\n\n\n\n\n\nShow me the good stuff\np2 <- ggplot(Joined_data, aes(y = education_group, x = Wage, fill = education_group)) +\n  geom_density_ridges(alpha = 0.6, scale = 0.9) +\n  scale_x_continuous(limits = c(0, 20000)) +\n  labs(x = \"Wage ($)\", y = \"\", fill = 'Education Level') +\n  labs(title = 'Wage Distribution across Education Levels') +\n  theme(axis.text.y = element_blank(), axis.title.y = element_blank())\n\np2\n\n\n\n\n\n\n\n\n\nShow me the good stuff\nJoined_data %>%\n  ggplot(aes(x = education_group, y = Wage, fill = education_group)) +\n  stat_halfeye(adjust = 0.5, justification = -0.2, .width = 0, point_colour = NA) +\n  geom_boxplot(position = position_nudge(x = 0.3), width = 0.2, outlier.color = NA, alpha = 0.5) +\n  stat_dots(side = \"left\", justification = 1.1, binwidth = 0.25, size = 0.5) +\n  scale_fill_manual(values = c(\"#F8766D\", \"#00BFC4\", \"#FFC200\", \"#C77CFF\")) +\n  theme_minimal() +\n  theme(axis.text.y = element_blank(), axis.title.y = element_blank(), legend.position = \"top\") +\n  labs(title = 'Wage Distribution across Education Levels', x = \"Education Level\", y = \"\", fill = \"Education Level\") +\n  coord_flip() +\n  lims(y = c(0, 10000))\n\n\n\n\n\nFor Visualisation ease, values > 10,000 for Wage have been obscured through limiting of the graph’s axis.\n\n\n\n\nIt is observed that the mean wage/income for participants is higher when they have been educated to a further extent, as observed in Visualisation, where the boxplot depicts increasing mean values as education level increases."
  },
  {
    "objectID": "take-home_Ex/take-home_Ex01/take-home_Ex01.html#have-kidsjoviality",
    "href": "take-home_Ex/take-home_Ex01/take-home_Ex01.html#have-kidsjoviality",
    "title": "Take-Home Exercise 1",
    "section": "5.6 Have Kids/Joviality",
    "text": "5.6 Have Kids/Joviality\n\n\nAnimated Plot Depicting Uncertainty\n\n\nShow me the good stuff\nggplot(data = Joined_data, \n       aes(x = factor(haveKids), y = joviality)) +\n  geom_point(position = position_jitter(\n    height = 0.3, width = 0.05), \n    size = 0.4, color = \"#0072B2\", alpha = 1/2) +\n  geom_hpline(data = sampler(25, group = haveKids), height = 0.6, color = \"#D55E00\") +\n  theme_bw() + \n  # `.draw` is a generated column indicating the sample draw\n  transition_states(.draw, 1, 3) +\n  labs(x = \"Have Children?\",\n       y = \"Joviality\",\n       title = \"Joviality by Having Children\")\n\n\n\n\n\n\n\nBoxplot Comparison\n\n\nShow me the good stuff\np <- ggplot(Joined_data, aes(x = haveKids, y = joviality, fill = haveKids)) +\n  geom_boxplot() +\n  labs(x = \"Have Kids\",\n       y = \"Joviality\",\n       title = \"Comparison of Joviality Scores by whether Participant has Children\")\n\nggplotly(p, tooltip = c(\"y\", \"group_mean\", \"group_median\", \"lower\", \"upper\")) %>%\n  layout(xaxis = list(title = \"Have Children\"),\n         yaxis = list(title = \"Joviality Score\"),\n         showlegend = FALSE)\n\n\n\n\n\n\n\n\n\nThe plot highlights the uncertainty associated with comparing joviality with the variable of having children, this is supported by the boxplot, which depicts relatively equal mean scores for joviality between participants with and without children. This indicates that there is no significant inclination observed between the two different states (having children or not).\n\n\n5.7 EPC/Have Kids/Education Level/Joviality\n\n\nShow me the good stuff\nExpP <- ggplot(Joined_data, aes(x = Expense_PropCat, y = joviality, fill = Expense_PropCat)) + \n  geom_boxplot() + \n  facet_grid(haveKids~educationLevel) +\n  theme_bw() + \n  scale_y_continuous(breaks = scales::pretty_breaks(n=3)) + \n  theme(panel.spacing = unit(1, 'lines'),\n        axis.text.x = element_blank(),\n        axis.ticks.x = element_blank()) +\n  labs(x = \" \",\n       y = \"Joviality\",\n       fill = \"Expense Proportion \\n Category\")\n\n# Make into interactive diagram to show Statistics  \nggplotly(ExpP)\n\n\n\n\n\n\n\n\nParticipants who spent a high proportion of their income record the highest mean joviality score across all categories observed in the plot.\nHowever, in less educated groups (High School or College, Low Education), joviality scores are higher when participants spend a low proportion of their income."
  },
  {
    "objectID": "take-home_Ex/take-home_Ex01/take-home_Ex01.html#spending-streams-and-joviality",
    "href": "take-home_Ex/take-home_Ex01/take-home_Ex01.html#spending-streams-and-joviality",
    "title": "Take-Home Exercise 1",
    "section": "Spending Streams and Joviality",
    "text": "Spending Streams and Joviality\n\n\nShow me the good stuff\n# Calculate the correlation coefficients between joviality and the types of expenses\ncorrelation_matrix <- cor(Joined_data[c(\"Shelter\", \"Education\", \"Food\", \"Recreation\", \"joviality\")])\n\n# Check the correlation matrix\ncorrelation_matrix\n\n\n                Shelter   Education       Food Recreation    joviality\nShelter     1.000000000 -0.09978659  0.6833510  0.6425394  0.008609283\nEducation  -0.099786592  1.00000000 -0.2411865 -0.1013488 -0.076523516\nFood        0.683351024 -0.24118654  1.0000000  0.6004242 -0.119628336\nRecreation  0.642539436 -0.10134878  0.6004242  1.0000000 -0.250878305\njoviality   0.008609283 -0.07652352 -0.1196283 -0.2508783  1.000000000\n\n\n\nCorrelation Analysis tells us that of all the types of expenditure, Recreation has the largest correlation coeffiecient (-0.25), but is still considered a weak negative association.\nThe results suggest that while slight shifts in joviality might be observed with reductions in Food and Recreation spending, it may not be significant enough to justify the town’s spendings."
  },
  {
    "objectID": "take-home_Ex/take-home_Ex01/take-home_Ex01.html#recommendations",
    "href": "take-home_Ex/take-home_Ex01/take-home_Ex01.html#recommendations",
    "title": "Take-Home Exercise 1",
    "section": "6 Recommendations",
    "text": "6 Recommendations\n\n\nBased on the analyses performed thus far, Income Level and Expense Proportion Category comparisons seem to draw the most difference in joviality scores.\n\nSpecifically, proportion of spending between education levels seems to suggest that despite the relatively higher mean income associated with better education, those who spend less actually feel less happy than those who have a high expense proportion.\nThis suggests there is a population of Graduates and High School/College Graduants who may benefit from new sources of expenditure. Despite weak positive correlation between Shelter spending and joviality, it is suggested that the town explore developing a small number of high quality residences for this group of people.\n\nThe town can also look into affordability schemes for middle to low income earners, so as to reduce the number of people within the Low-Middle and Middle-High Expense Proportion Categories."
  },
  {
    "objectID": "take-home_Ex/take-home_Ex01/take-home_Ex01.html#data-limitations-and-further-analysis",
    "href": "take-home_Ex/take-home_Ex01/take-home_Ex01.html#data-limitations-and-further-analysis",
    "title": "Take-Home Exercise 1",
    "section": "Data Limitations and Further Analysis",
    "text": "Data Limitations and Further Analysis\n\n\nSample selection method does not assure us of accurate representation, as there is no information on demographic distribution and survey methods.\nCorrelation does not equate causation. While there are indicative signs of some association between joviality scores and select variables, the data collected may not be holistic enough to completely capture the nuance of all factors involved. This can be mitigated through conducting several rounds of survey and to ensure the population is well-accounted for."
  }
]