to = as.character(target))
shark_graph <- visNetwork(nodes = shark_nodes_extract, edges = mshark_edges) %>%
visIgraphLayout(layout = "layout_with_fr") %>%
visEdges(arrows = "to", color = list(color = "blue", highlight = "red")) %>%
visNodes() %>%
visOptions(highlightNearest = list(enabled = TRUE, degree = 2, hover = TRUE),
nodesIdSelection = TRUE)
shark_graph
# Match the rows from pol_edges_aggregated with MC2_edges
matched_pollock <- pol_edges_aggregated[
pol_edges_aggregated$source %in% MC2_edges$source &
pol_edges_aggregated$target %in% MC2_edges$target,
]
# Modify the column names in matched_pollock
colnames(matched_pollock) <- c("from", "to")
# Create a data frame of unique nodes
nodes_df_pollock <- data.frame(id = unique(c(matched_pollock$from, matched_pollock$to)))
# Create the network graph using visNetwork
mpol_graph <- visNetwork(nodes = nodes_df_pollock, edges = matched_pollock,
width = "100%", height = "400px") %>%
visIgraphLayout(layout = "layout_with_fr") %>%
visEdges(arrows = "to", color = list(color = "blue", highlight = "red")) %>%
visNodes(title = "id") %>%
visOptions(highlightNearest = list(enabled = T, degree = 2, hover = T),
nodesIdSelection = TRUE)
mpol_graph
pol_nodes_extract <- pol_edges_aggregated %>%
select(source) %>%
rename(id = source) %>%
bind_rows(pol_edges_aggregated %>%
select(target) %>%
rename(id = target)) %>%
distinct()
pol_nodes <- pol_nodes_extract %>%
mutate(id = as.character(id))  # Convert id column to character type
mpol_edges <- pol_edges_aggregated %>%
mutate(from = as.character(source),  # Convert source and target columns to character type
to = as.character(target))
pol_graph <- visNetwork(nodes = pol_nodes, edges = mpol_edges) %>%
visIgraphLayout(layout = "layout_with_fr") %>%
visEdges(arrows = "to", color = list(color = "blue", highlight = "red")) %>%
visNodes() %>%
visOptions(highlightNearest = list(enabled = TRUE, degree = 2, hover = TRUE),
nodesIdSelection = TRUE)
pol_graph
# Match the rows from mac_edges_aggregated with MC2_edges
matched_mackerel <- mac_edges_aggregated[
mac_edges_aggregated$source %in% MC2_edges$source &
mac_edges_aggregated$target %in% MC2_edges$target,
]
# Modify the column names in matched_mackerel
colnames(matched_mackerel) <- c("from", "to")
# Create a data frame of unique nodes
nodes_df_mackerel <- data.frame(id = unique(c(matched_mackerel$from, matched_mackerel$to)))
# Create the network graph using visNetwork
mmackerel_graph <- visNetwork(nodes = nodes_df_mackerel, edges = matched_mackerel,
width = "100%", height = "400px") %>%
visIgraphLayout(layout = "layout_with_fr") %>%
visEdges(arrows = "to", color = list(color = "blue", highlight = "red")) %>%
visNodes(title = "id") %>%
visOptions(highlightNearest = list(enabled = T, degree = 2, hover = T),
nodesIdSelection = TRUE)
mmackerel_graph
mac_nodes_extract <- mac_edges_aggregated %>%
select(source) %>%
rename(id = source) %>%
bind_rows(mac_edges_aggregated %>%
select(target) %>%
rename(id = target)) %>%
distinct()
mac_nodes <- mac_nodes_extract %>%
mutate(id = as.character(id))  # Convert id column to character type
mmac_edges <- mac_edges_aggregated %>%
mutate(from = as.character(source),  # Convert source and target columns to character type
to = as.character(target))
mackerel_graph <- visNetwork(nodes = mac_nodes, edges = mmac_edges) %>%
visIgraphLayout(layout = "layout_with_fr") %>%
visEdges(arrows = "to", color = list(color = "blue", highlight = "red")) %>%
visNodes() %>%
visOptions(highlightNearest = list(enabled = TRUE, degree = 2, hover = TRUE),
nodesIdSelection = TRUE)
mackerel_graph
# Match the rows from lichen_edges_aggregated with MC2_edges
matched_lichen <- lichen_edges_aggregated[
lichen_edges_aggregated$source %in% MC2_edges$source &
lichen_edges_aggregated$target %in% MC2_edges$target,
]
# Modify the column names in matched_lichen
colnames(matched_lichen) <- c("from", "to")
# Create a data frame of unique nodes
nodes_df_lichen <- data.frame(id = unique(c(matched_lichen$from, matched_lichen$to)))
# Create the network graph using visNetwork
mlichen_graph <- visNetwork(nodes = nodes_df_lichen, edges = matched_lichen,
width = "100%", height = "400px") %>%
visIgraphLayout(layout = "layout_with_fr") %>%
visEdges(arrows = "to", color = list(color = "blue", highlight = "red")) %>%
visNodes(title = "id") %>%
visOptions(highlightNearest = list(enabled = T, degree = 2, hover = T),
nodesIdSelection = TRUE)
mlichen_graph
lichen_nodes_extract <- lichen_edges_aggregated %>%
select(source) %>%
rename(id = source) %>%
bind_rows(lichen_edges_aggregated %>%
select(target) %>%
rename(id = target)) %>%
distinct()
lichen_nodes <- lichen_nodes_extract %>%
mutate(id = as.character(id))  # Convert id column to character type
mlichen_edges <- lichen_edges_aggregated %>%
mutate(from = as.character(source),  # Convert source and target columns to character type
to = as.character(target))
lichen_graph <- visNetwork(nodes = lichen_nodes, edges = mlichen_edges) %>%
visIgraphLayout(layout = "layout_with_fr") %>%
visEdges(arrows = "to", color = list(color = "blue", highlight = "red")) %>%
visNodes() %>%
visOptions(highlightNearest = list(enabled = TRUE, degree = 2, hover = TRUE),
nodesIdSelection = TRUE)
lichen_graph
# Match the rows from herring_edges_aggregated with MC2_edges
matched_herring <- herring_edges_aggregated[
herring_edges_aggregated$source %in% MC2_edges$source &
herring_edges_aggregated$target %in% MC2_edges$target,
]
# Modify the column names in matched_herring
colnames(matched_herring) <- c("from", "to")
# Create a data frame of unique nodes
nodes_df_herring <- data.frame(id = unique(c(matched_herring$from, matched_herring$to)))
# Create the network graph using visNetwork
mherring_graph <- visNetwork(nodes = nodes_df_herring, edges = matched_herring,
width = "100%", height = "400px") %>%
visIgraphLayout(layout = "layout_with_fr") %>%
visEdges(arrows = "to", color = list(color = "blue", highlight = "red")) %>%
visNodes(title = "id") %>%
visOptions(highlightNearest = list(enabled = T, degree = 2, hover = T),
nodesIdSelection = TRUE)
mherring_graph
herring_nodes_extract <- herring_edges_aggregated %>%
select(source) %>%
rename(id = source) %>%
bind_rows(herring_edges_aggregated %>%
select(target) %>%
rename(id = target)) %>%
distinct()
mherring_edges <- herring_edges_aggregated %>%
mutate(from = as.character(source),  # Convert source and target columns to character type
to = as.character(target))
herring_graph <- visNetwork(nodes = herring_nodes_extract, edges = mherring_edges) %>%
visIgraphLayout(layout = "layout_with_fr") %>%
visEdges(arrows = "to", color = list(color = "blue", highlight = "red")) %>%
visNodes() %>%
visOptions(highlightNearest = list(enabled = TRUE, degree = 2, hover = TRUE),
nodesIdSelection = TRUE)
herring_graph
catfish_nodes_extract <- catfish_edges_aggregated %>%
select(source) %>%
rename(id = source) %>%
bind_rows(catfish_edges_aggregated %>%
select(target) %>%
rename(id = target)) %>%
distinct()
catfish_nodes <- catfish_nodes_extract %>%
mutate(id = as.character(id))  # Convert id column to character type
mcatfish_edges <- catfish_edges_aggregated %>%
mutate(from = as.character(source),  # Convert source and target columns to character type
to = as.character(target))
cat_graph <- visNetwork(nodes = catfish_nodes, edges = mcatfish_edges) %>%
visIgraphLayout(layout = "layout_with_fr") %>%
visEdges(arrows = "to", color = list(color = "blue", highlight = "red")) %>%
visNodes() %>%
visOptions(highlightNearest = list(enabled = TRUE, degree = 2, hover = TRUE),
nodesIdSelection = TRUE)
cat_graph
cod_nodes_extract <- cod_edges_aggregated %>%
select(source) %>%
rename(id = source) %>%
bind_rows(cod_edges_aggregated %>%
select(target) %>%
rename(id = target)) %>%
distinct()
cod_nodes <- cod_nodes_extract %>%
mutate(id = as.character(id))  # Convert id column to character type
mcod_edges <- cod_edges_aggregated %>%
mutate(from = as.character(source),  # Convert source and target columns to character type
to = as.character(target))
cod_graph <- visNetwork(nodes = cod_nodes, edges = mcod_edges) %>%
visIgraphLayout(layout = "layout_with_fr") %>%
visEdges(arrows = "to", color = list(color = "blue", highlight = "red")) %>%
visNodes() %>%
visOptions(highlightNearest = list(enabled = TRUE, degree = 2, hover = TRUE),
nodesIdSelection = TRUE)
cod_graph
matched_cmac <- cmac_edges_aggregated[
cmac_edges_aggregated$source %in% MC2_edges$source &
cmac_edges_aggregated$target %in% MC2_edges$target,
]
colnames(matched_cmac) <- c("from", "to")
nodes_df2 <- data.frame(id = unique(c(matched_cmac$from, matched_cmac$to)))
cmac_graph <-visNetwork(nodes = nodes_df2, edges = matched_cmac,
width = "100%", height = "400px") %>%
visIgraphLayout(layout = "layout_with_fr") %>%
visEdges(arrows = "to", color = list(color = "blue", highlight = "red")) %>%
visNodes(title = "id") %>%
visOptions(highlightNearest = list(enabled = TRUE, degree = 2, hover = TRUE),
nodesIdSelection = TRUE)
cmac_graph
matched_cmac <- cmac_edges_aggregated[
cmac_edges_aggregated$source %in% MC2_edges$source &
cmac_edges_aggregated$target %in% MC2_edges$target,
]
colnames(matched_cmac) <- c("from", "to")
nodes_df2 <- data.frame(id = unique(c(matched_cmac$from, matched_cmac$to)))
mcmac_graph <-visNetwork(nodes = nodes_df2, edges = matched_cmac,
width = "100%", height = "400px") %>%
visIgraphLayout(layout = "layout_with_fr") %>%
visEdges(arrows = "to", color = list(color = "blue", highlight = "red")) %>%
visNodes(title = "id") %>%
visOptions(highlightNearest = list(enabled = TRUE, degree = 2, hover = TRUE),
nodesIdSelection = TRUE)
mcmac_graph
cmac_nodes_extract <- cmac_edges_aggregated %>%
select(source) %>%
rename(id = source) %>%
bind_rows(cmac_edges_aggregated %>%
select(target) %>%
rename(id = target)) %>%
distinct()
cmac_nodes <- cmac_nodes_extract %>%
mutate(id = as.character(id))  # Convert id column to character type
mcmac_edges <- cmac_edges_aggregated %>%
mutate(from = as.character(source),  # Convert source and target columns to character type
to = as.character(target))
cmac_graph <- visNetwork(nodes = cmac_nodes, edges = mcmac_edges) %>%
visIgraphLayout(layout = "layout_with_fr") %>%
visEdges(arrows = "to", color = list(color = "blue", highlight = "red")) %>%
visNodes() %>%
visOptions(highlightNearest = list(enabled = TRUE, degree = 2, hover = TRUE),
nodesIdSelection = TRUE)
cmac_graph
matched_carp <- carp_edges_aggregated[
carp_edges_aggregated$source %in% MC2_edges$source &
carp_edges_aggregated$target %in% MC2_edges$target,
]
colnames(matched_carp) <- c("from", "to")
nodes_df1 <- data.frame(id = unique(c(matched_carp$from, matched_carp$to)))
mcarp_graph <- visNetwork(nodes = nodes_df1, edges = matched_carp,
width = "100%", height = "400px") %>%
visIgraphLayout(layout = "layout_with_fr") %>%
visEdges(arrows = "to", color = list(color = "blue", highlight = "red")) %>%
visNodes(title = "id") %>%
visOptions(highlightNearest = list(enabled = TRUE, degree = 2, hover = TRUE),
nodesIdSelection = TRUE)
mcarp_graph
carp_nodes_extract <- carp_edges_aggregated %>%
select(source) %>%
rename(id = source) %>%
bind_rows(carp_edges_aggregated %>%
select(target) %>%
rename(id = target)) %>%
distinct()
carp_nodes <- carp_nodes_extract %>%
mutate(id = as.character(id))  # Convert id column to character type
mcarp_edges <- carp_edges_aggregated %>%
mutate(from = as.character(source),  # Convert source and target columns to character type
to = as.character(target))
mcarp_graph <- visNetwork(nodes = carp_nodes, edges = mcarp_edges) %>%
visIgraphLayout(layout = "layout_with_fr") %>%
visEdges(arrows = "to", color = list(color = "blue", highlight = "red")) %>%
visNodes() %>%
visOptions(highlightNearest = list(enabled = TRUE, degree = 2, hover = TRUE),
nodesIdSelection = TRUE)
carp_graph
carp_nodes_extract <- carp_edges_aggregated %>%
select(source) %>%
rename(id = source) %>%
bind_rows(carp_edges_aggregated %>%
select(target) %>%
rename(id = target)) %>%
distinct()
carp_nodes <- carp_nodes_extract %>%
mutate(id = as.character(id))  # Convert id column to character type
carp_edges <- carp_edges_aggregated %>%
mutate(from = as.character(source),  # Convert source and target columns to character type
to = as.character(target))
carp_graph <- visNetwork(nodes = carp_nodes, edges = carp_edges) %>%
visIgraphLayout(layout = "layout_with_fr") %>%
visEdges(arrows = "to", color = list(color = "blue", highlight = "red")) %>%
visNodes() %>%
visOptions(highlightNearest = list(enabled = TRUE, degree = 2, hover = TRUE),
nodesIdSelection = TRUE)
carp_graph
cmac_nodes_extract <- cmac_edges_aggregated %>%
select(source) %>%
rename(id = source) %>%
bind_rows(cmac_edges_aggregated %>%
select(target) %>%
rename(id = target)) %>%
distinct()
cmac_nodes <- cmac_nodes_extract %>%
mutate(id = as.character(id))  # Convert id column to character type
cmac_edges <- cmac_edges_aggregated %>%
mutate(from = as.character(source),  # Convert source and target columns to character type
to = as.character(target))
cmac_graph <- visNetwork(nodes = cmac_nodes, edges = cmac_edges) %>%
visIgraphLayout(layout = "layout_with_fr") %>%
visEdges(arrows = "to", color = list(color = "blue", highlight = "red")) %>%
visNodes() %>%
visOptions(highlightNearest = list(enabled = TRUE, degree = 2, hover = TRUE),
nodesIdSelection = TRUE)
cmac_graph
cod_nodes_extract <- cod_edges_aggregated %>%
select(source) %>%
rename(id = source) %>%
bind_rows(cod_edges_aggregated %>%
select(target) %>%
rename(id = target)) %>%
distinct()
cod_nodes <- cod_nodes_extract %>%
mutate(id = as.character(id))  # Convert id column to character type
cod_edges <- cod_edges_aggregated %>%
mutate(from = as.character(source),  # Convert source and target columns to character type
to = as.character(target))
cod_graph <- visNetwork(nodes = cod_nodes, edges = cod_edges) %>%
visIgraphLayout(layout = "layout_with_fr") %>%
visEdges(arrows = "to", color = list(color = "blue", highlight = "red")) %>%
visNodes() %>%
visOptions(highlightNearest = list(enabled = TRUE, degree = 2, hover = TRUE),
nodesIdSelection = TRUE)
cod_graph
catfish_nodes_extract <- catfish_edges_aggregated %>%
select(source) %>%
rename(id = source) %>%
bind_rows(catfish_edges_aggregated %>%
select(target) %>%
rename(id = target)) %>%
distinct()
catfish_nodes <- catfish_nodes_extract %>%
mutate(id = as.character(id))  # Convert id column to character type
catfish_edges <- catfish_edges_aggregated %>%
mutate(from = as.character(source),  # Convert source and target columns to character type
to = as.character(target))
cat_graph <- visNetwork(nodes = catfish_nodes, edges = catfish_edges) %>%
visIgraphLayout(layout = "layout_with_fr") %>%
visEdges(arrows = "to", color = list(color = "blue", highlight = "red")) %>%
visNodes() %>%
visOptions(highlightNearest = list(enabled = TRUE, degree = 2, hover = TRUE),
nodesIdSelection = TRUE)
cat_graph
# Match the rows from catfish_edges_aggregated with MC2_edges
matched_cat <- catfish_edges_aggregated[
catfish_edges_aggregated$source %in% MC2_edges$source &
catfish_edges_aggregated$target %in% MC2_edges$target,
]
# Modify the column names in matched_cat
colnames(matched_cat) <- c("from", "to")
# Create a data frame of unique nodes
nodes_df4 <- data.frame(id = unique(c(matched_cat$from, matched_cat$to)))
# Create the network graph using visNetwork
mcat_graph <- visNetwork(nodes = nodes_df4, edges = matched_cat,
width = "100%", height = "400px") %>%
visIgraphLayout(layout = "layout_with_fr") %>%
visEdges(arrows = "to", color = list(color = "blue", highlight = "red")) %>%
visNodes(title = "id") %>%
visOptions(highlightNearest = list(enabled = T, degree = 2, hover = T),
nodesIdSelection = TRUE)
mcat_graph
herring_nodes_extract <- herring_edges_aggregated %>%
select(source) %>%
rename(id = source) %>%
bind_rows(herring_edges_aggregated %>%
select(target) %>%
rename(id = target)) %>%
distinct()
herring_edges <- herring_edges_aggregated %>%
mutate(from = as.character(source),  # Convert source and target columns to character type
to = as.character(target))
herring_graph <- visNetwork(nodes = herring_nodes_extract, edges = herring_edges) %>%
visIgraphLayout(layout = "layout_with_fr") %>%
visEdges(arrows = "to", color = list(color = "blue", highlight = "red")) %>%
visNodes() %>%
visOptions(highlightNearest = list(enabled = TRUE, degree = 2, hover = TRUE),
nodesIdSelection = TRUE)
herring_graph
lichen_nodes_extract <- lichen_edges_aggregated %>%
select(source) %>%
rename(id = source) %>%
bind_rows(lichen_edges_aggregated %>%
select(target) %>%
rename(id = target)) %>%
distinct()
lichen_nodes <- lichen_nodes_extract %>%
mutate(id = as.character(id))  # Convert id column to character type
lichen_edges <- lichen_edges_aggregated %>%
mutate(from = as.character(source),  # Convert source and target columns to character type
to = as.character(target))
lichen_graph <- visNetwork(nodes = lichen_nodes, edges = lichen_edges) %>%
visIgraphLayout(layout = "layout_with_fr") %>%
visEdges(arrows = "to", color = list(color = "blue", highlight = "red")) %>%
visNodes() %>%
visOptions(highlightNearest = list(enabled = TRUE, degree = 2, hover = TRUE),
nodesIdSelection = TRUE)
lichen_graph
mac_nodes_extract <- mac_edges_aggregated %>%
select(source) %>%
rename(id = source) %>%
bind_rows(mac_edges_aggregated %>%
select(target) %>%
rename(id = target)) %>%
distinct()
mac_nodes <- mac_nodes_extract %>%
mutate(id = as.character(id))  # Convert id column to character type
mac_edges <- mac_edges_aggregated %>%
mutate(from = as.character(source),  # Convert source and target columns to character type
to = as.character(target))
mackerel_graph <- visNetwork(nodes = mac_nodes, edges = mac_edges) %>%
visIgraphLayout(layout = "layout_with_fr") %>%
visEdges(arrows = "to", color = list(color = "blue", highlight = "red")) %>%
visNodes() %>%
visOptions(highlightNearest = list(enabled = TRUE, degree = 2, hover = TRUE),
nodesIdSelection = TRUE)
mackerel_graph
pol_nodes_extract <- pol_edges_aggregated %>%
select(source) %>%
rename(id = source) %>%
bind_rows(pol_edges_aggregated %>%
select(target) %>%
rename(id = target)) %>%
distinct()
pol_nodes <- pol_nodes_extract %>%
mutate(id = as.character(id))  # Convert id column to character type
pol_edges <- pol_edges_aggregated %>%
mutate(from = as.character(source),  # Convert source and target columns to character type
to = as.character(target))
pol_graph <- visNetwork(nodes = pol_nodes, edges = pol_edges) %>%
visIgraphLayout(layout = "layout_with_fr") %>%
visEdges(arrows = "to", color = list(color = "blue", highlight = "red")) %>%
visNodes() %>%
visOptions(highlightNearest = list(enabled = TRUE, degree = 2, hover = TRUE),
nodesIdSelection = TRUE)
pol_graph
sal_wgl_nodes_extract <- salw_edges_aggregated %>%
select(source) %>%
rename(id = source) %>%
bind_rows(salw_edges_aggregated %>%
select(target) %>%
rename(id = target)) %>%
distinct()
sal_wgl_nodes <- sal_wgl_nodes_extract %>%
mutate(id = as.character(id))  # Convert id column to character type
sal_wgl_edges <- salw_edges_aggregated %>%
mutate(from = as.character(source),  # Convert source and target columns to character type
to = as.character(target))
salwgl_graph <- visNetwork(nodes = sal_wgl_nodes, edges = sal_wgl_edges) %>%
visIgraphLayout(layout = "layout_with_fr") %>%
visEdges(arrows = "to", color = list(color = "blue", highlight = "red")) %>%
visNodes() %>%
visOptions(highlightNearest = list(enabled = TRUE, degree = 2, hover = TRUE),
nodesIdSelection = TRUE)
salwgl_graph
salmon_nodes_extract <- salmon_edges_aggregated %>%
select(source) %>%
rename(id = source) %>%
bind_rows(salmon_edges_aggregated %>%
select(target) %>%
rename(id = target)) %>%
distinct()
salmon_nodes <- salmon_nodes_extract %>%
mutate(id = as.character(id))  # Convert id column to character type
salmon_edges <- salmon_edges_aggregated %>%
mutate(from = as.character(source),  # Convert source and target columns to character type
to = as.character(target))
salmon_graph <- visNetwork(nodes = salmon_nodes, edges = salmon_edges) %>%
visIgraphLayout(layout = "layout_with_fr") %>%
visEdges(arrows = "to", color = list(color = "blue", highlight = "red")) %>%
visNodes() %>%
visOptions(highlightNearest = list(enabled = TRUE, degree = 2, hover = TRUE),
nodesIdSelection = TRUE)
salmon_graph
shark_nodes_extract <- shark_edges_aggregated %>%
select(source) %>%
rename(id = source) %>%
bind_rows(shark_edges_aggregated %>%
select(target) %>%
rename(id = target)) %>%
distinct()
shark_edges <- shark_edges_aggregated %>%
mutate(from = as.character(source),  # Convert source and target columns to character type
to = as.character(target))
shark_graph <- visNetwork(nodes = shark_nodes_extract, edges = shark_edges) %>%
visIgraphLayout(layout = "layout_with_fr") %>%
visEdges(arrows = "to", color = list(color = "blue", highlight = "red")) %>%
visNodes() %>%
visOptions(highlightNearest = list(enabled = TRUE, degree = 2, hover = TRUE),
nodesIdSelection = TRUE)
shark_graph
tuna_nodes_extract <- tuna_edges_aggregated %>%
select(source) %>%
rename(id = source) %>%
bind_rows(tuna_edges_aggregated %>%
select(target) %>%
rename(id = target)) %>%
distinct()
tuna_edges <- tuna_edges_aggregated %>%
mutate(from = as.character(source),  # Convert source and target columns to character type
to = as.character(target))
tuna_graph <- visNetwork(nodes = tuna_nodes_extract, edges = tuna_edges) %>%
visIgraphLayout(layout = "layout_with_fr") %>%
visEdges(arrows = "to", color = list(color = "blue", highlight = "red")) %>%
visNodes() %>%
visOptions(highlightNearest = list(enabled = TRUE, degree = 2, hover = TRUE),
nodesIdSelection = TRUE)
tuna_graph
