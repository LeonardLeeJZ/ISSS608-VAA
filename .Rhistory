# Create a title for the graph
carp_title <- "Carp Network Graph"
# Add a title to the Carp graph using visNetworkProxy
carp_graph_proxy <- visNetworkProxy(carp_graph) %>%
visNodes(id = "title", label = carp_title, shape = "box", color = "lightblue", borderWidth = 0)
carp_nodes_extract <- carp_edges_aggregated %>%
select(source) %>%
rename(id = source) %>%
bind_rows(carp_edges_aggregated %>%
select(target) %>%
rename(id = target)) %>%
distinct()
carp_nodes <- carp_nodes_extract %>%
mutate(id = as.character(id))  # Convert id column to character type
carp_edges <- carp_edges_aggregated %>%
mutate(from = as.character(source),  # Convert source and target columns to character type
to = as.character(target))
carp_graph <- visNetwork(nodes = carp_nodes, edges = carp_edges) %>%
visIgraphLayout(layout = "layout_with_fr") %>%
visEdges(arrows = "to", color = list(color = "blue", highlight = "red")) %>%
visNodes() %>%
visOptions(highlightNearest = list(enabled = TRUE, degree = 2, hover = TRUE),
nodesIdSelection = TRUE)
carp_graph_with_title <- carp_graph %>%
visAddNodes(id = "title", label = carp_title, shape = "box", color = "lightblue", borderWidth = 0)
carp_nodes_extract <- carp_edges_aggregated %>%
select(source) %>%
rename(id = source) %>%
bind_rows(carp_edges_aggregated %>%
select(target) %>%
rename(id = target)) %>%
distinct()
carp_nodes <- carp_nodes_extract %>%
mutate(id = as.character(id))  # Convert id column to character type
carp_edges <- carp_edges_aggregated %>%
mutate(from = as.character(source),  # Convert source and target columns to character type
to = as.character(target))
carp_graph <- visNetwork(nodes = carp_nodes, edges = carp_edges) %>%
visIgraphLayout(layout = "layout_with_fr") %>%
visEdges(arrows = "to", color = list(color = "blue", highlight = "red")) %>%
visNodes() %>%
visOptions(highlightNearest = list(enabled = TRUE, degree = 2, hover = TRUE),
nodesIdSelection = TRUE)
c# Create a title for the graph
carp_title <- "Carp Network Graph"
# Add a title node to the Carp graph
carp_graph <- carp_graph %>%
visNodes(id = "title", label = carp_title, shape = "box", color = "lightblue", borderWidth = 0)
# Display the Carp graph with the title using patchwork
carp_graph_with_title <- carp_graph + plot_annotation(title = carp_title)
carp_nodes_extract <- carp_edges_aggregated %>%
select(source) %>%
rename(id = source) %>%
bind_rows(carp_edges_aggregated %>%
select(target) %>%
rename(id = target)) %>%
distinct()
carp_nodes <- carp_nodes_extract %>%
mutate(id = as.character(id))  # Convert id column to character type
carp_edges <- carp_edges_aggregated %>%
mutate(from = as.character(source),  # Convert source and target columns to character type
to = as.character(target))
carp_graph <- visNetwork(nodes = carp_nodes, edges = carp_edges) %>%
visIgraphLayout(layout = "layout_with_fr") %>%
visEdges(arrows = "to", color = list(color = "blue", highlight = "red")) %>%
visNodes() %>%
visOptions(highlightNearest = list(enabled = TRUE, degree = 2, hover = TRUE),
nodesIdSelection = TRUE)
# Create a title for the graph
carp_title <- "Carp Network Graph"
# Add a title node to the Carp graph
carp_graph <- carp_graph %>%
visNodes(id = "title", label = carp_title, shape = "box", color = "lightblue", borderWidth = 0)
# Create a plot annotation with the title
title_annotation <- plot_annotation(title = carp_title)
# Combine the Carp graph and the title using patchwork
carp_graph_with_title <- carp_graph / title_annotation
carp_nodes_extract <- carp_edges_aggregated %>%
select(source) %>%
rename(id = source) %>%
bind_rows(carp_edges_aggregated %>%
select(target) %>%
rename(id = target)) %>%
distinct()
carp_nodes <- carp_nodes_extract %>%
mutate(id = as.character(id))  # Convert id column to character type
carp_edges <- carp_edges_aggregated %>%
mutate(from = as.character(source),  # Convert source and target columns to character type
to = as.character(target))
carp_graph <- visNetwork(nodes = carp_nodes, edges = carp_edges) %>%
visIgraphLayout(layout = "layout_with_fr") %>%
visEdges(arrows = "to", color = list(color = "blue", highlight = "red")) %>%
visNodes() %>%
visOptions(highlightNearest = list(enabled = TRUE, degree = 2, hover = TRUE),
nodesIdSelection = TRUE)
# Create a title for the graph
carp_title <- "Carp Network Graph"
# Create a plot annotation with the title
title_annotation <- textGrob(carp_title, gp = gpar(fontsize = 16, fontface = "bold"))
pacman::p_load(igraph, tidygraph, ggraph,
visNetwork, lubridate, clock,
tidyverse, graphlayouts, jsonlite, patchwor, gridextra)
pacman::p_load(igraph, tidygraph, ggraph,
visNetwork, lubridate, clock,
tidyverse, graphlayouts, jsonlite, patchwor, gridExtra)
carp_nodes_extract <- carp_edges_aggregated %>%
select(source) %>%
rename(id = source) %>%
bind_rows(carp_edges_aggregated %>%
select(target) %>%
rename(id = target)) %>%
distinct()
carp_nodes <- carp_nodes_extract %>%
mutate(id = as.character(id))  # Convert id column to character type
carp_edges <- carp_edges_aggregated %>%
mutate(from = as.character(source),  # Convert source and target columns to character type
to = as.character(target))
carp_graph <- visNetwork(nodes = carp_nodes, edges = carp_edges) %>%
visIgraphLayout(layout = "layout_with_fr") %>%
visEdges(arrows = "to", color = list(color = "blue", highlight = "red")) %>%
visNodes() %>%
visOptions(highlightNearest = list(enabled = TRUE, degree = 2, hover = TRUE),
nodesIdSelection = TRUE)
carp_nodes_extract <- carp_edges_aggregated %>%
select(source) %>%
rename(id = source) %>%
bind_rows(carp_edges_aggregated %>%
select(target) %>%
rename(id = target)) %>%
distinct()
carp_nodes <- carp_nodes_extract %>%
mutate(id = as.character(id))  # Convert id column to character type
carp_edges <- carp_edges_aggregated %>%
mutate(from = as.character(source),  # Convert source and target columns to character type
to = as.character(target))
carp_graph <- visNetwork(nodes = carp_nodes, edges = carp_edges) %>%
visIgraphLayout(layout = "layout_with_fr") %>%
visEdges(arrows = "to", color = list(color = "blue", highlight = "red")) %>%
visNodes() %>%
visOptions(highlightNearest = list(enabled = TRUE, degree = 2, hover = TRUE),
nodesIdSelection = TRUE)
carp_graph
carp_nodes_extract <- carp_edges_aggregated %>%
select(source) %>%
rename(id = source) %>%
bind_rows(carp_edges_aggregated %>%
select(target) %>%
rename(id = target)) %>%
distinct()
carp_nodes <- carp_nodes_extract %>%
mutate(id = as.character(id))  # Convert id column to character type
carp_edges <- carp_edges_aggregated %>%
mutate(from = as.character(source),  # Convert source and target columns to character type
to = as.character(target))
carp_graph <- visNetwork(nodes = carp_nodes, edges = carp_edges) %>%
visIgraphLayout(layout = "layout_with_fr") %>%
visEdges(arrows = "to", color = list(color = "blue", highlight = "red")) %>%
visNodes() %>%
visOptions(highlightNearest = list(enabled = TRUE, degree = 2, hover = TRUE),
nodesIdSelection = TRUE) %>%
visLegend(main = "Carp Network Graph")
carp_graph
carp_nodes_extract <- carp_edges_aggregated %>%
select(source) %>%
rename(id = source) %>%
bind_rows(carp_edges_aggregated %>%
select(target) %>%
rename(id = target)) %>%
distinct()
carp_nodes <- carp_nodes_extract %>%
mutate(id = as.character(id))  # Convert id column to character type
carp_edges <- carp_edges_aggregated %>%
mutate(from = as.character(source),  # Convert source and target columns to character type
to = as.character(target))
carp_graph <- visNetwork(nodes = carp_nodes, edges = carp_edges) %>%
visIgraphLayout(layout = "layout_with_fr") %>%
visEdges(arrows = "to", color = list(color = "blue", highlight = "red")) %>%
visNodes() %>%
visOptions(highlightNearest = list(enabled = TRUE, degree = 2, hover = TRUE),
nodesIdSelection = TRUE) %>%
visLegend(graph, enabled = TRUE, main = "Carp Network Graph")
carp_nodes_extract <- carp_edges_aggregated %>%
select(source) %>%
rename(id = source) %>%
bind_rows(carp_edges_aggregated %>%
select(target) %>%
rename(id = target)) %>%
distinct()
carp_nodes <- carp_nodes_extract %>%
mutate(id = as.character(id))  # Convert id column to character type
carp_edges <- carp_edges_aggregated %>%
mutate(from = as.character(source),  # Convert source and target columns to character type
to = as.character(target))
carp_graph <- visNetwork(nodes = carp_nodes, edges = carp_edges) %>%
visIgraphLayout(layout = "layout_with_fr") %>%
visEdges(arrows = "to", color = list(color = "blue", highlight = "red")) %>%
visNodes() %>%
visOptions(highlightNearest = list(enabled = TRUE, degree = 2, hover = TRUE),
nodesIdSelection = TRUE)
carp_grapht <- visLegend(carp_graph, enabled = TRUE, main = "Carp Network Graph")
carp_grapht
carp_nodes_extract <- carp_edges_aggregated %>%
select(source) %>%
rename(id = source) %>%
bind_rows(carp_edges_aggregated %>%
select(target) %>%
rename(id = target)) %>%
distinct()
carp_nodes <- carp_nodes_extract %>%
mutate(id = as.character(id))  # Convert id column to character type
carp_edges <- carp_edges_aggregated %>%
mutate(from = as.character(source),  # Convert source and target columns to character type
to = as.character(target))
carp_graph <- visNetwork(nodes = carp_nodes, edges = carp_edges) %>%
visIgraphLayout(layout = "layout_with_fr") %>%
visEdges(arrows = "to", color = list(color = "blue", highlight = "red")) %>%
visNodes() %>%
visOptions(highlightNearest = list(enabled = TRUE, degree = 2, hover = TRUE),
nodesIdSelection = TRUE)
# Define the legend
legend <- list(title = list(text = "Carp Network Legend"))
carp_graph <- visLegend(carp_graph, legend = legend)
carp_nodes_extract <- carp_edges_aggregated %>%
select(source) %>%
rename(id = source) %>%
bind_rows(carp_edges_aggregated %>%
select(target) %>%
rename(id = target)) %>%
distinct()
carp_nodes <- carp_nodes_extract %>%
mutate(id = as.character(id))  # Convert id column to character type
carp_edges <- carp_edges_aggregated %>%
mutate(from = as.character(source),  # Convert source and target columns to character type
to = as.character(target))
carp_graph <- visNetwork(nodes = carp_nodes, edges = carp_edges) %>%
visIgraphLayout(layout = "layout_with_fr") %>%
visEdges(arrows = "to", color = list(color = "blue", highlight = "red")) %>%
visNodes() %>%
visOptions(highlightNearest = list(enabled = TRUE, degree = 2, hover = TRUE),
nodesIdSelection = TRUE) %>%
visLegend( carp_graph ,enabled = TRUE, useGroups = TRUE, addNodes = NULL,  addEdges = NULL, width = 0.2, position = "left", main = NULL, ncol = 1, stepX = 100, stepY = 100, zoom = TRUE)
carp_nodes_extract <- carp_edges_aggregated %>%
select(source) %>%
rename(id = source) %>%
bind_rows(carp_edges_aggregated %>%
select(target) %>%
rename(id = target)) %>%
distinct()
carp_nodes <- carp_nodes_extract %>%
mutate(id = as.character(id))  # Convert id column to character type
carp_edges <- carp_edges_aggregated %>%
mutate(from = as.character(source),  # Convert source and target columns to character type
to = as.character(target))
carp_graph <- visNetwork(nodes = carp_nodes, edges = carp_edges) %>%
visIgraphLayout(layout = "layout_with_fr") %>%
visEdges(arrows = "to", color = list(color = "blue", highlight = "red")) %>%
visNodes() %>%
visOptions(highlightNearest = list(enabled = TRUE, degree = 2, hover = TRUE),
nodesIdSelection = TRUE) %>%
visLegend(carp_graph, enabled = TRUE, useGroups = TRUE, addNodes = NULL,  addEdges = NULL, width = 0.2, position = "left", main = NULL, ncol = 1, stepX = 100, stepY = 100, zoom = TRUE)
carp_nodes_extract <- carp_edges_aggregated %>%
select(source) %>%
rename(id = source) %>%
bind_rows(carp_edges_aggregated %>%
select(target) %>%
rename(id = target)) %>%
distinct()
carp_nodes <- carp_nodes_extract %>%
mutate(id = as.character(id))  # Convert id column to character type
carp_edges <- carp_edges_aggregated %>%
mutate(from = as.character(source),  # Convert source and target columns to character type
to = as.character(target))
carp_graph <- visNetwork(nodes = carp_nodes, edges = carp_edges) %>%
visIgraphLayout(layout = "layout_with_fr") %>%
visEdges(arrows = "to", color = list(color = "blue", highlight = "red")) %>%
visNodes() %>%
visOptions(highlightNearest = list(enabled = TRUE, degree = 2, hover = TRUE),
nodesIdSelection = TRUE) %>%
visLegend(graph, enabled = TRUE, useGroups = TRUE, addNodes = NULL,  addEdges = NULL, width = 0.2, position = "left", main = NULL, ncol = 1, stepX = 100, stepY = 100, zoom = TRUE)
carp_nodes_extract <- carp_edges_aggregated %>%
select(source) %>%
rename(id = source) %>%
bind_rows(carp_edges_aggregated %>%
select(target) %>%
rename(id = target)) %>%
distinct()
carp_nodes <- carp_nodes_extract %>%
mutate(id = as.character(id))  # Convert id column to character type
carp_edges <- carp_edges_aggregated %>%
mutate(from = as.character(source),  # Convert source and target columns to character type
to = as.character(target))
carp_graph <- visNetwork(nodes = carp_nodes, edges = carp_edges) %>%
visIgraphLayout(layout = "layout_with_fr") %>%
visEdges(arrows = "to", color = list(color = "blue", highlight = "red")) %>%
visNodes() %>%
visOptions(highlightNearest = list(enabled = TRUE, degree = 2, hover = TRUE),
nodesIdSelection = TRUE) %>%
visLegend(enabled = TRUE, useGroups = TRUE, addNodes = NULL,  addEdges = NULL, width = 0.2, position = "left", main = NULL, ncol = 1, stepX = 100, stepY = 100, zoom = TRUE)
carp_grapht
carp_nodes_extract <- carp_edges_aggregated %>%
select(source) %>%
rename(id = source) %>%
bind_rows(carp_edges_aggregated %>%
select(target) %>%
rename(id = target)) %>%
distinct()
carp_nodes <- carp_nodes_extract %>%
mutate(id = as.character(id))  # Convert id column to character type
carp_edges <- carp_edges_aggregated %>%
mutate(from = as.character(source),  # Convert source and target columns to character type
to = as.character(target))
carp_graph <- visNetwork(nodes = carp_nodes, edges = carp_edges) %>%
visIgraphLayout(layout = "layout_with_fr") %>%
visEdges(arrows = "to", color = list(color = "blue", highlight = "red")) %>%
visNodes() %>%
visOptions(highlightNearest = list(enabled = TRUE, degree = 2, hover = TRUE),
nodesIdSelection = TRUE) %>%
visLegend(enabled = TRUE, useGroups = TRUE, addNodes = NULL,  addEdges = NULL, width = 0.2, position = "left", main = NULL, ncol = 1, stepX = 100, stepY = 100, zoom = TRUE)
carp_graph
carp_nodes_extract <- carp_edges_aggregated %>%
select(source) %>%
rename(id = source) %>%
bind_rows(carp_edges_aggregated %>%
select(target) %>%
rename(id = target)) %>%
distinct()
carp_nodes <- carp_nodes_extract %>%
mutate(id = as.character(id))  # Convert id column to character type
carp_edges <- carp_edges_aggregated %>%
mutate(from = as.character(source),  # Convert source and target columns to character type
to = as.character(target))
carp_graph <- visNetwork(nodes = carp_nodes, edges = carp_edges) %>%
visIgraphLayout(layout = "layout_with_fr") %>%
visEdges(arrows = "to", color = list(color = "blue", highlight = "red")) %>%
visNodes() %>%
visOptions(highlightNearest = list(enabled = TRUE, degree = 2, hover = TRUE),
nodesIdSelection = TRUE)
carp_graph
carp_nodes <- carp_nodes_extract %>%
mutate(id = as.character(id))  # Convert id column to character type
carp_edges <- carp_edges_aggregated %>%
mutate(from = as.character(source),  # Convert source and target columns to character type
to = as.character(target))
carp_graph <- carp_edges_aggregated %>%
ggraph(layout = "fr") +
geom_edge_link(aes(edge_width = Value_OMU_Total),
color = "blue",
arrow = arrow(length = unit(0.3, "cm"))) +
geom_node_point() +
geom_node_text(aes(label = id),
repel = TRUE) +
theme_void() +
labs(title = "Carp Network Graph")  # Add the title
carp_nodes <- carp_nodes_extract %>%
mutate(id = as.character(id))  # Convert id column to character type
carp_edges <- carp_edges_aggregated %>%
mutate(from = as.character(source),  # Convert source and target columns to character type
to = as.character(target))
carp_graph2 <- carp_edges_aggregated %>%
ggraph(layout = "fr") +
geom_edge_link(aes(edge_width = Value_OMU_Total),
color = "blue",
arrow = arrow(length = unit(0.3, "cm"))) +
geom_node_point() +
geom_node_text(aes(label = id),
repel = TRUE) +
theme_void() +
labs(title = "Carp Network Graph")  # Add the title
carp_graph2
carp_nodes <- carp_nodes_extract %>%
mutate(id = as.character(id))  # Convert id column to character type
carp_edges <- carp_edges_aggregated %>%
mutate(from = as.character(source),  # Convert source and target columns to character type
to = as.character(target))
carp_graph2 <- carp_edges_aggregated %>%
ggraph(layout = "fr") +
geom_edge_link(aes(edge_width = Value_OMU_Total),
color = "blue",
arrow = arrow(length = unit(0.3, "cm"))) +
geom_node_point() +
geom_node_text(aes(label = id),
repel = TRUE) +
theme_void() +
labs(title = "Carp Network Graph")  # Add the title
print(carp_graph2)
pacman::p_load(igraph, tidygraph, ggraph,
visNetwork, lubridate, clock,
tidyverse, graphlayouts, jsonlite, patchwork, ggrepel)
carp_nodes <- carp_nodes_extract %>%
mutate(id = as.character(id))  # Convert id column to character type
carp_edges <- carp_edges_aggregated %>%
mutate(from = as.character(source),  # Convert source and target columns to character type
to = as.character(target))
carp_graph <- carp_edges_aggregated %>%
ggraph(layout = "fr") +
geom_edge_link(aes(edge_width = Value_OMU_Total),
color = "blue",
arrow = arrow(length = unit(0.3, "cm"))) +
geom_node_point() +
geom_node_text2(aes(label = id),
repel = TRUE) +
theme_void() +
labs(title = "Carp Network Graph")  # Add the title
pacman::p_load(igraph, tidygraph, ggraph,
visNetwork, lubridate, clock,
tidyverse, graphlayouts, jsonlite, patchwork, ggrepel)
carp_nodes <- carp_nodes_extract %>%
mutate(id = as.character(id))  # Convert id column to character type
carp_edges <- carp_edges_aggregated %>%
mutate(from = as.character(source),  # Convert source and target columns to character type
to = as.character(target))
carp_graph <- carp_edges_aggregated %>%
ggraph(layout = "fr") +
geom_edge_link(aes(edge_width = Value_OMU_Total),
color = "blue",
arrow = arrow(length = unit(0.3, "cm"))) +
geom_node_point() +
geom_node_text2(aes(label = id),
repel = TRUE) +
theme_void() +
labs(title = "Carp Network Graph")  # Add the title
install.packages(c("DT", "future.apply", "gifski", "igraph", "insight", "knitr", "lwgeom", "matrixStats", "mvtnorm", "parallelly", "parameters", "performance", "plotly", "rmarkdown", "sf", "sp", "statsExpressions", "sys"))
carp_nodes_extract <- carp_edges_aggregated %>%
select(source) %>%
rename(id = source) %>%
bind_rows(carp_edges_aggregated %>%
select(target) %>%
rename(id = target)) %>%
distinct()
pacman::p_load(igraph, tidygraph, ggraph,
visNetwork, lubridate, clock,
tidyverse, graphlayouts, jsonlite, patchwork, ggrepel)
MC2 <- fromJSON("data/mc2_challenge_graph.json")
pacman::p_load(igraph, tidygraph, ggraph,
visNetwork, lubridate, clock,
tidyverse, graphlayouts, jsonlite, patchwork, ggrepel)
MC2 <- fromJSON("data/mc2_challenge_graph.json")
carp <- fromJSON("data/carp.json")
catfish <- fromJSON("data/catfish.json")
c_mac <- fromJSON("data/chub_mackerel.json")
cod <- fromJSON("data/cod2.json")
herring <- fromJSON("data/herring.json")
lichen <- fromJSON("data/lichen.json")
mac <- fromJSON("data/mackerel.json")
pol <- fromJSON("data/pollock.json")
salmon <- fromJSON("data/salmon.json")
sal_wgl <- fromJSON("data/salmon_wgl.json")
shark <- fromJSON("data/shark.json")
tuna <- fromJSON("data/tuna.json")
MC2_nodes <- as_tibble(MC2$nodes) %>%
select(id,shpcountry, rcvcountry) #using select function to reorganise into desired order of columns
MC2_edges <- as_tibble(MC2$links) %>%
select(source, target, valueofgoods_omu, valueofgoodsusd, weightkg, hscode, arrivaldate)
MC2_edges <- MC2_edges %>% distinct()
MC2_nodes <- MC2_nodes %>% distinct()
MC2_edges <- MC2_edges %>%
mutate(Month = month(arrivaldate,
label = TRUE,
abbr = FALSE))
# rename columns
MC2_edges <- MC2_edges %>%
rename('Value_OMU' = 'valueofgoods_omu',
'Value_USD' = 'valueofgoodsusd',
'Weight_KG' = 'weightkg',
'HS_Code' = 'hscode',
'Arrival_Date' = 'arrivaldate')
MC2_edges <- MC2_edges[complete.cases(MC2_edges[, c("source", "target")]), ]
colSums(is.na(MC2_edges))
carp_nodes <- as_tibble(carp$nodes) %>%
select(id,shpcountry, rcvcountry) #using select function to reorganise into desired order of columns
carp_edges <- as_tibble(carp$links) %>%
select(source, target, valueofgoods_omu, weightkg, hscode, arrivaldate)
# rename columns
carp_edges <- carp_edges %>%
rename('source' = 'source',
'target' = 'target',
'Value_OMU' = 'valueofgoods_omu',
'Weight_KG' = 'weightkg',
'HS_Code' = 'hscode',
'Arrival_Date' = 'arrivaldate')
carp_edges_aggregated <- carp_edges %>%
group_by(source,target, HS_Code) %>%
summarise(Value_OMU_Total = sum(Value_OMU, na.rm = TRUE),
Count = n(),
Average_OMU = mean(Value_OMU, na.rm = TRUE),
Total_Weight_KG = sum(Weight_KG, na.rm = TRUE),
Average_Weight_KG = mean(Weight_KG, na.rm = TRUE)) %>%
ungroup()
carp_nodes <- carp_nodes_extract %>%
mutate(id = as.character(id))  # Convert id column to character type
carp_nodes_extract <- carp_edges_aggregated %>%
select(source) %>%
rename(id = source) %>%
bind_rows(carp_edges_aggregated %>%
select(target) %>%
rename(id = target)) %>%
distinct()
carp_nodes <- carp_nodes_extract %>%
mutate(id = as.character(id))  # Convert id column to character type
carp_edges <- carp_edges_aggregated %>%
mutate(from = as.character(source),  # Convert source and target columns to character type
to = as.character(target))
carp_graph <- carp_edges_aggregated %>%
ggraph(layout = "fr") +
geom_edge_link(aes(edge_width = Value_OMU_Total),
color = "blue",
arrow = arrow(length = unit(0.3, "cm"))) +
geom_node_point() +
geom_node_text2(aes(label = id),
repel = TRUE) +
theme_void() +
labs(title = "Carp Network Graph")  # Add the title
