# create plot
model1V <- lm(joviality ~ Education + Food + Recreation +
Shelter + Wage + RentAdjustment + householdSize + haveKids + age + educationLevel + interestGroup, data = Joined_data)
# create plot
model1V <- lm(joviality ~ Education + Food + Recreation +
Shelter + Wage + RentAdjmt + householdSize + haveKids + age + educationLevel + interestGroup, data = Joined_data)
check_c <- check_collinearity(model1V)
plot(check_c)
# rotate x-axis labels
par(las=2)
# create plot
model1V <- lm(joviality ~ Education + Food + Recreation +
Shelter + Wage + RentAdjmt + householdSize + haveKids + age + educationLevel + interestGroup, data = Joined_data)
check_c <- check_model(model1V)
plot(check_c)
# rotate x-axis labels
par(las=2) #doesn't work to rotate labels
# create plot
model1V <- lm(joviality ~ Education + Food + Recreation +
Shelter + Wage + RentAdjmt + householdSize + haveKids + age + educationLevel + interestGroup, data = Joined_data)
check_c <- check_collinearity(model1V)
plot(check_c)
# rotate x-axis labels
par(las=2) #doesn't work to rotate labels
# create contingency table
tableAT <- table(Joined_data$haveKids, Joined_data$educationLevel, Joined_data$ageGroup, Joined_data$Income_Level, Joined_data$Expense_PropCat)
set.seed(1234)
test_age <- ggbarstats(Joined_data,
x = InterestGroup, y = Expense_PropCat,
bf.message = FALSE) +
labs(title = "Even Proportion of Expense Proportion Category Across Age Groups",
x = "Expense Proportion Category") +
theme(plot.background = element_rect(fill="#F8F3E6",colour="#F8F3E6"))
set.seed(1234)
test_age <- ggbarstats(Joined_data,
x = interestGroup, y = Expense_PropCat,
bf.message = FALSE) +
labs(title = "Even Proportion of Expense Proportion Category Across Age Groups",
x = "Expense Proportion Category") +
theme(plot.background = element_rect(fill="#F8F3E6",colour="#F8F3E6"))
# Define the breaks for the three bins
breaks <- c(0, 18.854, 33.714, 69.468, Inf)
# Bin the Wage variable into three categories using cut()
Expense_PropC <- cut(Joined_data$Expense_Prop, breaks, labels = c("Low", "Low-Middle", "Middle-High", "High"))
# Add the income levels as a new column in the dataset
Joined_data$Expense_PropCat <- Expense_PropC
# Barchart of Income Level
dem_Exp_PropC<- ggplot(Joined_data, aes(x = Expense_PropCat, fill = Expense_PropCat)) +
geom_bar() +
labs(title = "High Distribution of \nParticipants in Middle-High Expense Proportion Cat", #< Linebreak added
x = "Expense Prop Cat",
y = NULL) +
geom_text(stat = "count",
aes(label = after_stat(count)),
vjust = -1) +
ylim(0,500) +
theme(text = element_text(size = 12))
dem_Exp_PropC
# create contingency table
tableAT <- table(Joined_data$haveKids, Joined_data$educationLevel, Joined_data$ageGroup, Joined_data$Income_Level, Joined_data$Expense_PropCat)
# create contingency table
tableAT <- table(Joined_data$haveKids, Joined_data$educationLevel, Joined_data$ageGroup, Joined_data$Income_Level, Joined_data$Expense_PropCat)
set.seed(1234)
test_kids <- ggbarstats(Joined_data,
x = haveKids, y = Expense_PropCat,
bf.message = FALSE)+
labs(title = "Constant Proportion of Children Across Expense Proportion Categories",
x = "Expense Proportion Category") +
theme(plot.background = element_rect(fill="#F8F3E6",colour="#F8F3E6"))
test_kids
set.seed(1234)
test_edlvl <- ggbarstats(Joined_data,
x = educationLevel, y = Expense_PropCat,
bf.message = FALSE) +
labs(title = "Large Proportion of Low Expense Proportion Category are Higher Educated",
x = "Expense Proportion Category") +
theme(plot.background = element_rect(fill="#F8F3E6",colour="#F8F3E6"))
test_edlvl
set.seed(1234)
test_age <- ggbarstats(Joined_data,
x = interestGroup, y = Expense_PropCat,
bf.message = FALSE) +
labs(title = "Even Proportion of Expense Proportion Category Across Age Groups",
x = "Expense Proportion Category") +
theme(plot.background = element_rect(fill="#F8F3E6",colour="#F8F3E6"))
test_age
# create contingency table
tableAT <- table(Joined_data$haveKids, Joined_data$educationLevel, Joined_data$interestGroup, Joined_data$Income_Level, Joined_data$Expense_PropCat)
set.seed(1234)
test_age <- ggbarstats(Joined_data,
x = ageGroup, y = Expense_PropCat,
bf.message = FALSE) +
labs(title = "Even Proportion of Expense Proportion Category Across Age Groups",
x = "Expense Proportion Category") +
theme(plot.background = element_rect(fill="#F8F3E6",colour="#F8F3E6"))
test_age
A Summary of results from Chi-Square Tests of Association:
set.seed(1234)
test_kids <- ggbarstats(Joined_data,
x = haveKids, y = Expense_PropCat,
bf.message = FALSE)+
labs(title = "Constant Proportion of Children Across Expense Proportion Categories",
x = "Expense Proportion Category") +
theme(plot.background = element_rect(fill="#F8F3E6",colour="#F8F3E6"))
test_kids
set.seed(1234)
test_edlvl <- ggbarstats(Joined_data,
x = educationLevel, y = Expense_PropCat,
bf.message = FALSE) +
labs(title = "Large Proportion of Low Expense Proportion Category are Higher Educated",
x = "Expense Proportion Category") +
theme(plot.background = element_rect(fill="#F8F3E6",colour="#F8F3E6"))
test_edlvl
set.seed(1234)
test_age <- ggbarstats(Joined_data,
x = ageGroup, y = Expense_PropCat,
bf.message = FALSE) +
labs(title = "Even Proportion of Expense Proportion Category Across Age Groups",
x = "Expense Proportion Category") +
theme(plot.background = element_rect(fill="#F8F3E6",colour="#F8F3E6"))
test_age
set.seed(1234)
test_inclvl <- ggbarstats(Joined_data,
x = Income_Level, y = Expense_PropCat,
bf.message = FALSE) +
labs(title = "High Income Level Earners Exclusively Within Low and Low Middle \n Expense Proportion Categories",
x = "Expense Proportion Category") +
theme(plot.background = element_rect(fill="#F8F3E6",colour="#F8F3E6"))
pacman::p_load(readr, ggrepel, patchwork, Hmisc, ggthemes, hrbrthemes, ggstatsplot, ggiraph, plotly, dplyr, patchwork, DT, tidyverse, ggplot2, stats, ggridges, viridis, scales, cowplot, ggdist, tidyquant, ggthemes, gt, rstatix, performance, see, gganimate)
devtools::install_github("wilkelab/ungeviz")
library(ungeviz)
Fdata <- read_csv("data/FinancialJournal.csv")
Jdata <- read_csv("data/Participants.csv")
Hmisc::describe(Fdata)
Hmisc::describe(Jdata)
Jdata_new <- Jdata %>%
#change PariticipantId to <chr>
mutate(participantId = as.character(Jdata$participantId),
#update educationaLevel with ordinal scale
educationLevel = ordered(Jdata$educationLevel, levels = c("Graduate", "Bachelors", "HighSchoolOrCollege", "Low")),
# Cast householdSize and interestGroup as factors
householdSize = as.factor(Jdata$householdSize),
interestGroup = as.factor(Jdata$interestGroup)
)
Fdata_new <- Fdata %>%
#change PariticipantId to <chr>
mutate(participantId = as.character(Fdata$participantId),
#Extract Year-Month from timestamp
YMDate = paste0(year(timestamp), "-", sprintf("%02d", month(timestamp))),
# Cast householdSize and interestGroup as factors
category = as.factor(Fdata$category),
# Round amount to 2dp
amount = as.integer(round(amount, digits = 2))
) %>%
# remove original timestamp column
select(-timestamp) %>%
#sort by ParticipantId
arrange(participantId)
Pivot_Fdata <- Fdata_new %>%
#Define row groups
group_by(participantId, YMDate) %>%
# Sum total amount per category for each month
summarise(Education = sum(amount[category == "Education"]),
Food = sum(amount[category == "Food"]),
Shelter = sum(amount[category == "Shelter"]),
Recreation = sum(amount[category == "Recreation"]),
RentAdjmt = sum(amount[category == "RentAdjustment"]),
Wage = sum(amount[category == "Wage"])) %>%
ungroup()
head(Pivot_Fdata, n = 3)
Pivot_Fdata <- Pivot_Fdata %>%
#create new column with financial outflow (expenses)
mutate(Total_Expense = Education + Food + Shelter + Recreation) %>%
#calculate proportion of expense wrt wage
mutate (Expense_Prop = (abs(Total_Expense)/Wage)*100)
Pivot_Avg_Fdata <- Pivot_Fdata %>%
# Group by Participant ID to get average values
group_by(participantId) %>%
summarise(NumT = n(),
Education = (sum(Education)/NumT),
Food = (sum(Food)/NumT),
Shelter = (sum(Shelter)/NumT),
Recreation = (sum(Recreation)/NumT),
RentAdjmt = (sum(RentAdjmt)/NumT),
Wage = (sum(Wage)/NumT),
Total_Expense = (sum(Total_Expense)/NumT),
Expense_Prop = (sum(Expense_Prop)/NumT))
Joined_data <- merge(Pivot_Avg_Fdata, Jdata_new, by = "participantId") %>%
select(unique(colnames(.))) %>%
arrange(as.numeric(participantId))
head(Joined_data, n= 3)
# Computing min and max age to annotate plot
min_age <- min(Joined_data$age)
max_age <- max(Joined_data$age)
dem_age <- ggplot(Joined_data, aes(x = age)) +
geom_dotplot(binwidth = 1,
stackratio = 1.2,
stackdir = "up",
fill = "#00BF7D", #< Fill colour same as bar charts
color = NA,
dotsize = 0.6) +
labs(title = "Age",
x = NULL,
y = NULL)
dem_age2 <-dem_age +
annotate(geom = "text", x = min_age, y = 0.83,
label = paste0("Youngest:\n", min_age)) + #< add text annotation to show age range
annotate(geom = "text", x = max_age, y = 0.83,
label = paste0("Oldest:\n", max_age)) +
theme(axis.text.y = element_blank(), #< remove unnecessary elements from plot
panel.grid.major = element_blank())
dem_age2
Joined_data$ageGroup <- as.factor(cut(Joined_data$age,
breaks = c(0,29,39,49,60),
labels = c("18-29", "30-39", "40-49", "50-60")))
# Barchart of ageGroup
dem_agegrp<- ggplot(Joined_data, aes(x = ageGroup, fill = ageGroup)) +
geom_bar() +
labs(title = "Even Distribution of Participants across Age Groups", #< Linebreak added to title so it does not get truncated
x = "Age Group",
y = NULL) +
geom_text(stat = "count",
aes(label = after_stat(count)),
vjust = -1) +
ylim(0,400) + #< Same y-axis limits for both age and wage plots to standardise
theme(text = element_text(size = 12))
dem_agegrp
# Calculate proportion of household sizes
proportion <- Joined_data %>%
count(householdSize) %>%
mutate(prop = n / sum(n))
# Create pie chart
pie_chart <- ggplot(proportion, aes(x = "", y = prop, fill = householdSize)) +
geom_bar(stat = "identity", color = "black") +
coord_polar("y", start = 0) +
geom_text(aes(label = percent(prop)), position = position_stack(vjust = 0.5)) +
scale_y_continuous(labels = percent_format()) +
labs(fill = "Household Size") +
ggtitle("Proportion of Household Sizes") +
theme_void() +
theme(legend.position = "right")
# Display pie chart
pie_chart
qq <- ggplot(Joined_data,
aes(sample=joviality)) +
stat_qq() +
stat_qq_line()
sw_t <- Joined_data %>%
shapiro_test(joviality) %>%
gt()
tmp <- tempfile(fileext = '.png')
gtsave(sw_t, tmp)
table_png <- png::readPNG(tmp, native = TRUE)
qq + table_png
mean_j <- mean(Joined_data$joviality)
med_j <- median(Joined_data$joviality)
std_j <- sd(Joined_data$joviality)
ggplot(Joined_data, aes(x = joviality)) +
geom_histogram(aes(y = ..density..),
binwidth = 0.05,
fill = "#CCFF99",
color = "grey") +
stat_function(fun = dnorm,
args = list(mean = mean_j,
sd = std_j),
col = "skyblue",
linewidth = 1) +
geom_vline(aes(xintercept = mean_j),
colour="#4d5887", linewidth = 0.8, linetype = "dashed") +
annotate(geom = "text", x = mean_j + 0.12, y = 1.4,
label = paste0("Mean Joviality: ", round((mean_j),2)),
color = "#4d5887") +
geom_vline(aes(xintercept = med_j),
colour="grey20", linewidth = 0.8, linetype = "dashed") +
annotate(geom = "text", x = med_j - 0.13, y = 1.5,
label = paste0("Median Joviality: ", round((med_j),2)),
color = "grey20") +
scale_x_continuous(breaks = scales::pretty_breaks(n = 10)) +
labs(title = "Distribution of Participants' Joviality Scores") +
theme(axis.text.y = element_blank(),
axis.title.y = element_blank(),
panel.grid.major = element_blank())
# Load the car package
library(car)
# Fit the linear regression model
model <- lm(joviality ~ Education + Food + Recreation +
Shelter + Wage + RentAdjmt + householdSize + age + educationLevel + interestGroup, data = Joined_data)
summary(model)
# Calculate the VIFs using the vif() function
vif_values <- vif(model)
# Print the VIFs
print(vif_values)
# Load the car package
library(car)
# Fit the linear regression model
model2 <- lm(joviality ~ Education + Food + Recreation +
Shelter + Wage + RentAdjmt + haveKids + age + educationLevel + interestGroup, data = Joined_data)
summary(model2)
# Calculate the VIFs using the vif() function
vif_values2 <- vif(model)
# Print the VIFs
print(vif_values2)
# create plot
model1V <- lm(joviality ~ Education + Food + Recreation +
Shelter + Wage + RentAdjmt + householdSize + haveKids + age + educationLevel + interestGroup, data = Joined_data)
check_c <- check_collinearity(model1V)
plot(check_c)
# rotate x-axis labels
par(las=2) #doesn't work to rotate labels
describe(Joined_data$Wage) #to assess best cut points for income levels
describe(Joined_data$Expense_Prop) #to assess best cut points for income levels
# Define the breaks for the three bins
breaks <- c(0, 2551, 3388, 6574, Inf)
# Bin the Wage variable into three categories using cut()
income_levels <- cut(Joined_data$Wage, breaks, labels = c("Low", "Low-Middle", "Middle-High", "High"))
# Add the income levels as a new column in the dataset
Joined_data$Income_Level <- income_levels
# Barchart of Income Level
dem_incomelvl<- ggplot(Joined_data, aes(x = Income_Level, fill = Income_Level)) +
geom_bar() +
labs(title = "High Distribution of \nParticipants in Middle-High Income Level", #< Linebreak added
x = "Income Level",
y = NULL) +
geom_text(stat = "count",
aes(label = after_stat(count)),
vjust = -1) +
ylim(0,500) +
theme(text = element_text(size = 12))
dem_incomelvl
# Define the breaks for the three bins
breaks <- c(0, 18.854, 33.714, 69.468, Inf)
# Bin the Wage variable into three categories using cut()
Expense_PropC <- cut(Joined_data$Expense_Prop, breaks, labels = c("Low", "Low-Middle", "Middle-High", "High"))
# Add the income levels as a new column in the dataset
Joined_data$Expense_PropCat <- Expense_PropC
# Barchart of Income Level
dem_Exp_PropC<- ggplot(Joined_data, aes(x = Expense_PropCat, fill = Expense_PropCat)) +
geom_bar() +
labs(title = "High Distribution of \nParticipants in Middle-High Expense Proportion Cat", #< Linebreak added
x = "Expense Prop Cat",
y = NULL) +
geom_text(stat = "count",
aes(label = after_stat(count)),
vjust = -1) +
ylim(0,500) +
theme(text = element_text(size = 12))
dem_Exp_PropC
set.seed(1234)
test_kids <- ggbarstats(Joined_data,
x = haveKids, y = Expense_PropCat,
bf.message = FALSE)+
labs(title = "Constant Proportion of Children Across Expense Proportion Categories",
x = "Expense Proportion Category") +
theme(plot.background = element_rect(fill="#F8F3E6",colour="#F8F3E6"))
test_kids
set.seed(1234)
test_edlvl <- ggbarstats(Joined_data,
x = educationLevel, y = Expense_PropCat,
bf.message = FALSE) +
labs(title = "Large Proportion of Low Expense Proportion Category are Higher Educated",
x = "Expense Proportion Category") +
theme(plot.background = element_rect(fill="#F8F3E6",colour="#F8F3E6"))
test_edlvl
set.seed(1234)
test_age <- ggbarstats(Joined_data,
x = ageGroup, y = Expense_PropCat,
bf.message = FALSE) +
labs(title = "Even Proportion of Expense Proportion Category Across Age Groups",
x = "Expense Proportion Category") +
theme(plot.background = element_rect(fill="#F8F3E6",colour="#F8F3E6"))
test_age
set.seed(1234)
test_inclvl <- ggbarstats(Joined_data,
x = Income_Level, y = Expense_PropCat,
bf.message = FALSE) +
labs(title = "High Income Level Earners Exclusively Within Low and Low Middle \n Expense Proportion Categories",
x = "Expense Proportion Category") +
theme(plot.background = element_rect(fill="#F8F3E6",colour="#F8F3E6"))
test_inclvl
ggbetweenstats(Joined_data, x= Income_Level, y= joviality) +
labs(x = "Income Level", y = "Joviality Score")
ggbetweenstats(Joined_data, x= ageGroup, y= joviality) +
labs(x = "Age Group", y = "Joviality Score")
ggbetweenstats(Joined_data, x= educationLevel, y= joviality) +
labs(x = "Education Level", y = "Joviality Score")
ggbetweenstats(Joined_data, x= householdSize, y= joviality) +
labs(x = "Household Size", y = "Joviality Score")
ggbetweenstats(Joined_data, x = interestGroup, y = joviality) +
scale_color_manual(values = viridis(length(levels(Joined_data$interestGroup)))) +
labs(x = "Interest Group", y = "Joviality Score")
# prepare the data
Joined_data$education_group <- factor(Joined_data$educationLevel,
levels = c("Low", "HighSchoolOrCollege", "Bachelors", "Graduate"),
labels = c("Low education", "High School or College", "Bachelor's Degree", "Graduate Degree"))
# create the ggplot object
p <- ggplot(Joined_data, aes(x = Wage, fill = education_group)) +
geom_density(alpha = 0.6) +
labs(x = "Wage ($)") +
labs(title = 'Wage Distribution across Education Levels', fill = 'Education Level') +
theme(axis.text.y = element_blank(), axis.title.y = element_blank())
# convert to interactive plot
ggplotly(p)
p2 <- ggplot(Joined_data, aes(y = education_group, x = Wage, fill = education_group)) +
geom_density_ridges(alpha = 0.6, scale = 0.9) +
scale_x_continuous(limits = c(0, 20000)) +
labs(x = "Wage ($)", y = "", fill = 'Education Level') +
labs(title = 'Wage Distribution across Education Levels') +
theme(axis.text.y = element_blank(), axis.title.y = element_blank())
p2
Joined_data %>%
ggplot(aes(x = education_group, y = Wage, fill = education_group)) +
stat_halfeye(adjust = 0.5, justification = -0.2, .width = 0, point_colour = NA) +
geom_boxplot(position = position_nudge(x = 0.3), width = 0.2, outlier.color = NA, alpha = 0.5) +
stat_dots(side = "left", justification = 1.1, binwidth = 0.25, size = 0.5) +
scale_fill_manual(values = c("#F8766D", "#00BFC4", "#FFC200", "#C77CFF")) +
theme_minimal() +
theme(axis.text.y = element_blank(), axis.title.y = element_blank(), legend.position = "top") +
labs(title = 'Wage Distribution across Education Levels', x = "Education Level", y = "", fill = "Education Level") +
coord_flip() +
lims(y = c(0, 10000))
ggplot(data = Joined_data,
aes(x = factor(haveKids), y = joviality)) +
geom_point(position = position_jitter(
height = 0.3, width = 0.05),
size = 0.4, color = "#0072B2", alpha = 1/2) +
geom_hpline(data = sampler(25, group = haveKids), height = 0.6, color = "#D55E00") +
theme_bw() +
# `.draw` is a generated column indicating the sample draw
transition_states(.draw, 1, 3) +
labs(x = "Have Children?",
y = "Joviality",
title = "Joviality by Having Children")
p <- ggplot(Joined_data, aes(x = haveKids, y = joviality, fill = haveKids)) +
geom_boxplot() +
labs(x = "Have Kids",
y = "Joviality",
title = "Comparison of Joviality Scores by whether Participant has Children")
ggplotly(p, tooltip = c("y", "group_mean", "group_median", "lower", "upper")) %>%
layout(xaxis = list(title = "Have Children"),
yaxis = list(title = "Joviality Score"),
showlegend = FALSE)
ExpP <- ggplot(Joined_data, aes(x = Expense_PropCat, y = joviality, fill = Expense_PropCat)) +
geom_boxplot() +
facet_grid(haveKids~educationLevel) +
theme_bw() +
scale_y_continuous(breaks = scales::pretty_breaks(n=3)) +
theme(panel.spacing = unit(1, 'lines'),
axis.text.x = element_blank(),
axis.ticks.x = element_blank()) +
labs(x = " ",
y = "Joviality",
fill = "Expense Proportion \n Category")
# Make into interactive diagram to show Statistics
ggplotly(ExpP)
ggplot(Joined_data, aes(x = joviality, fill = ageGroup, color = ageGroup)) +
geom_density(adjust = 1/4, alpha = 0.1) +
scale_x_continuous(breaks = scales::pretty_breaks(n=5)) +
labs(title = "Joviality Score Distribution Across Age Groups") +
theme(axis.text.y = element_blank(),
axis.title.y = element_blank(),
panel.grid.major = element_blank())
# Load the Joined_data dataframe
data("Joined_data")
# Calculate the correlation coefficients between joviality and the types of expenses
correlation_matrix <- cor(Joined_data[c("Shelter", "Education", "Food", "Recreation", "joviality")])
# Check the correlation matrix
correlation_matrix
# Calculate the correlation coefficients between joviality and the types of expenses
correlation_matrix <- cor(Joined_data[c("Shelter", "Education", "Food", "Recreation", "joviality")])
# Check the correlation matrix
correlation_matrix
ExpP <- ggplot(Joined_data, aes(x = Expense_PropCat, y = joviality, fill = Expense_PropCat)) +
geom_boxplot() +
facet_grid(haveKids~Income_Level) +
theme_bw() +
scale_y_continuous(breaks = scales::pretty_breaks(n=3)) +
theme(panel.spacing = unit(1, 'lines'),
axis.text.x = element_blank(),
axis.ticks.x = element_blank()) +
labs(x = " ",
y = "Joviality",
fill = "Expense Proportion \n Category")
# Make into interactive diagram to show Statistics
ggplotly(ExpP)
ExpP <- ggplot(Joined_data, aes(x = Expense_PropCat, y = joviality, fill = Expense_PropCat)) +
geom_boxplot() +
facet_grid(haveKids~educationLevel) +
theme_bw() +
scale_y_continuous(breaks = scales::pretty_breaks(n=3)) +
theme(panel.spacing = unit(1, 'lines'),
axis.text.x = element_blank(),
axis.ticks.x = element_blank()) +
labs(x = " ",
y = "Joviality",
fill = "Expense Proportion \n Category")
# Make into interactive diagram to show Statistics
ggplotly(ExpP)
pacman::p_load('plotly', 'tidyverse', 'corrplot', 'ggstatsplot', 'ggcorrplot')
require(devtools)
install_version("ggtern", version = "3.4.1", repos = "http://cran.us.r-project.org")
pacman::p_load('plotly', 'tidyverse', 'corrplot', 'ggstatsplot', 'ggcorrplot')
require(devtools)
install_version("ggtern", version = "3.4.1", repos = "http://cran.us.r-project.org")
install.packages(c("fastmap", "htmltools", "xfun"))
install.packages(c("fastmap", "htmltools", "xfun"))
install.packages(c("fastmap", "htmltools", "xfun"))
remove.packages("fastmap")
library(htmltools)
remove.packages("htmltools")
library(xfun)
remove.packages("xfun")
install.packages(c("xfun", "htmltools", "fastmap"))
