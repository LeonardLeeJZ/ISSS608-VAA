---
title: "Take-Home Exercise 1"
author: "Leonard Lee"
format:
  html:
    code-fold: true
    code-summary: "Show me the good stuff"
execute:
  warning: false
date: "5 May 2023"
date-modified: "`r Sys.Date()`"
---

# Setting

City of Engagement, with a total population of 50,000, is a small city located at Country of Nowhere. The city serves as a service centre of an agriculture region surrounding the city. The main agriculture of the region is fruit farms and vineyards. The local council of the city is in the process of preparing the Local Plan 2023. A sample survey of 1000 representative residents had been conducted to collect data related to their household demographic and spending patterns, among other things. The city aims to use the data to assist with their major community revitalization efforts, including how to allocate a very large city renewal grant they have recently received.

# The Task

In this take-home exercise, you are required to apply the concepts and methods you had learned in Lesson 1-4 to reveal the demographic and financial characteristics of the city of Engagement byusing appropriate static and interactive statistical graphics methods. This exercise requires a user-friendly and interactive solution that helps city managers and planners to explore the complex data in an engaging way and reveal hidden patterns.

# The Data

For the purpose of this study, two data sets are provided. They are:

Participants.csv Financial.csv

# 1 Load Packages

```{r}
pacman::p_load(readr, ggrepel, patchwork, Hmisc, ggthemes, hrbrthemes, ggstatsplot, ggiraph, plotly, dplyr, patchwork, DT, tidyverse, ggplot2, stats, ggridges, viridis, scales, cowplot, ggdist, tidyquant, ggthemes, gt, rstatix, performance, see, gganimate)

```

```{r}

devtools::install_github("wilkelab/ungeviz")
```

```{r}

library(ungeviz)

```

# 2 Import the Data

```{r}

Fdata <- read_csv("data/FinancialJournal.csv")
Jdata <- read_csv("data/Participants.csv")


```

# 3 Cleaning and Preparing the Data

## 3.1 Financial Dataset Summary

```{r}

Hmisc::describe(Fdata)
```

## 3.2 Joviality Dataset Summary

```{r}

Hmisc::describe(Jdata)
```

## 3.3 Correcting Demographic Data Format \[Jdata\]

::: {.callout-note collapse="true"}
-   ***participantId*** is currently classified as <dbl> instead of nominal, and is cast to <chr> class using as.character().

-   ***educationLevel*** is currently classified as <chr> categorical data, and is cast as factor type using the ordered() function, in accordance to its inherent hierarchy.

-   ***householdSize*** and ***interestGroup*** are classified as <dbl> and <chr> respectively despite being categorical in nature. The two variables are cast as factors using as.factor()
:::

```{r}
Jdata_new <- Jdata %>%
  #change PariticipantId to <chr>
  mutate(participantId = as.character(Jdata$participantId),
         
  #update educationaLevel with ordinal scale
  educationLevel = ordered(Jdata$educationLevel, levels = c("Graduate", "Bachelors", "HighSchoolOrCollege", "Low")),
  
  # Cast householdSize and interestGroup as factors
  householdSize = as.factor(Jdata$householdSize),
  interestGroup = as.factor(Jdata$interestGroup)
  )

```

## 3.4.1 Correcting Financial Data Format \[Fdata\]

::: {.callout-note collapse="true"}
-   ***participantId*** is currently classified as <dbl> instead of nominal, and is cast to <chr> class using as.character().

-   ***category*** is classified as <dbl>, and is cast as factor using as.factor()
:::

```{r}
Fdata_new <- Fdata %>%
  #change PariticipantId to <chr>
  mutate(participantId = as.character(Fdata$participantId),
         
  #Extract Year-Month from timestamp
  YMDate = paste0(year(timestamp), "-", sprintf("%02d", month(timestamp))),
         
  # Cast householdSize and interestGroup as factors
  category = as.factor(Fdata$category),
  
  # Round amount to 2dp
  amount = as.integer(round(amount, digits = 2))
  ) %>%
  
  # remove original timestamp column
  select(-timestamp) %>%
  
  #sort by ParticipantId
  arrange(participantId)
  
```

## 3.4.2 Pivoting Financial Data \[Fdata_new\]

```{r}

Pivot_Fdata <- Fdata_new %>%
               #Define row groups
               group_by(participantId, YMDate) %>%
  
               # Sum total amount per category for each month
               summarise(Education = sum(amount[category == "Education"]),
                         Food = sum(amount[category == "Food"]),
                         Shelter = sum(amount[category == "Shelter"]),
                         Recreation = sum(amount[category == "Recreation"]),
                         RentAdjmt = sum(amount[category == "RentAdjustment"]),
                         Wage = sum(amount[category == "Wage"])) %>%
                ungroup()
  
head(Pivot_Fdata, n = 3)
```

# 4 Data Wrangling and Evaluation

```{r}
Pivot_Fdata <- Pivot_Fdata %>%
               #create new column with financial outflow (expenses)
               mutate(Total_Expense = Education + Food + Shelter + Recreation) %>%
               #calculate proportion of expense wrt wage
               mutate (Expense_Prop = (abs(Total_Expense)/Wage)*100)


Pivot_Avg_Fdata <- Pivot_Fdata %>%
               # Group by Participant ID to get average values
               group_by(participantId) %>%
               summarise(NumT = n(),
                         Education = (sum(Education)/NumT),
                         Food = (sum(Food)/NumT),
                         Shelter = (sum(Shelter)/NumT),
                         Recreation = (sum(Recreation)/NumT),
                         RentAdjmt = (sum(RentAdjmt)/NumT),
                         Wage = (sum(Wage)/NumT),
                         Total_Expense = (sum(Total_Expense)/NumT),
                         Expense_Prop = (sum(Expense_Prop)/NumT))
               

Joined_data <- merge(Pivot_Avg_Fdata, Jdata_new, by = "participantId") %>%
               select(unique(colnames(.))) %>%
               arrange(as.numeric(participantId))

head(Joined_data, n= 3)
```

## 4.1 Examining Demographic Data Groups

### 4.1.1 Age Groups

Through a dotplot, we see that age distribution across the participants is spread between 18 to 60, with minor fluctuations.

```{r}
# Computing min and max age to annotate plot
min_age <- min(Joined_data$age)
max_age <- max(Joined_data$age)


dem_age <- ggplot(Joined_data, aes(x = age)) +
  geom_dotplot(binwidth = 1,
               stackratio = 1.2,
               stackdir = "up",
               fill = "#00BF7D", #< Fill colour same as bar charts
               color = NA,
               dotsize = 0.6) +
  labs(title = "Age",
       x = NULL,
       y = NULL)

dem_age2 <-dem_age + 
            annotate(geom = "text", x = min_age, y = 0.83,
            label = paste0("Youngest:\n", min_age)) + #< add text annotation to show age range
            annotate(geom = "text", x = max_age, y = 0.83,
            label = paste0("Oldest:\n", max_age)) +
            theme(axis.text.y = element_blank(), #< remove unnecessary elements from plot
            panel.grid.major = element_blank())
dem_age2

```

::: {.cushbox .cushicon}
Participants are further grouped by age into **four categories**, each encompassing approximately 10 years of age range:

**18-29, 30-39, 40-49, 50-60**
:::

### 4.1.2 Grouping Participants by Age

::: panel-tabset
## Code

```{r}
Joined_data$ageGroup <- as.factor(cut(Joined_data$age,
                                        breaks = c(0,29,39,49,60),
                                        labels = c("18-29", "30-39", "40-49", "50-60")))

```

## Distribution Barchart

```{r}

# Barchart of ageGroup
dem_agegrp<- ggplot(Joined_data, aes(x = ageGroup, fill = ageGroup)) +
            geom_bar() +
            labs(title = "Even Distribution of Participants across Age Groups", #< Linebreak added to title so it does not get truncated
                  x = "Age Group",
                  y = NULL) +
            geom_text(stat = "count",
                      aes(label = after_stat(count)),
                      vjust = -1) +
            ylim(0,400) + #< Same y-axis limits for both age and wage plots to standardise
            theme(text = element_text(size = 12))

dem_agegrp
```
:::

### 4.1.3 Household Size

```{r}


# Calculate proportion of household sizes
proportion <- Joined_data %>%
  count(householdSize) %>%
  mutate(prop = n / sum(n))

# Create pie chart
pie_chart <- ggplot(proportion, aes(x = "", y = prop, fill = householdSize)) +
  geom_bar(stat = "identity", color = "black") +
  coord_polar("y", start = 0) +
  geom_text(aes(label = percent(prop)), position = position_stack(vjust = 0.5)) +
  scale_y_continuous(labels = percent_format()) +
  labs(fill = "Household Size") +
  ggtitle("Proportion of Household Sizes") +
  theme_void() +
  theme(legend.position = "right")

# Display pie chart
pie_chart

```

::: {.bubblebox .bubbleicon}
Here, we see that there is a relatively even proportion of household sizes throughout the surveyed participants, with household size of 2 being slightly more prevalent.
:::

# 5 Exploratory Data Analysis

## 5.1 Joviality

The survey returned a range of Joviality scores between 0 and 1, and it is assumed that 1 is the maximum score to which one is most Jovial (or happy), and 0 is conversely the minimum score to which indicates the lowest possible state of happiness at the time of survey.

### Normality Testing and Distribution

::: panel-tabset
## Normality Testing

```{r}
qq <- ggplot(Joined_data, 
       aes(sample=joviality)) +
  stat_qq() +
  stat_qq_line()

sw_t <- Joined_data %>%
  shapiro_test(joviality) %>%
  gt()

tmp <- tempfile(fileext = '.png')
gtsave(sw_t, tmp)
table_png <- png::readPNG(tmp, native = TRUE)

qq + table_png

```

The qqplot compares the distribution of the data against the expected normal distribution. As the points deviate significantly from the line, the qqplot suggests that the data is not normally distributed.

The Shapiro-Wilk test is a widely used method to test for normality. As p \< 0.05, there is sufficient statistical power to reject the null hypothesis that the data is normally distributed.

## Distribution

```{r}
mean_j <- mean(Joined_data$joviality)
med_j <- median(Joined_data$joviality)
std_j <- sd(Joined_data$joviality)

ggplot(Joined_data, aes(x = joviality)) + 
      geom_histogram(aes(y = ..density..),
                    binwidth = 0.05, 
                    fill = "#CCFF99",
                    color = "grey") +
      stat_function(fun = dnorm,
                args = list(mean = mean_j,
                            sd = std_j),
                col = "skyblue",
                linewidth = 1) +
      geom_vline(aes(xintercept = mean_j),
                colour="#4d5887", linewidth = 0.8, linetype = "dashed") +
      annotate(geom = "text", x = mean_j + 0.12, y = 1.4,
                  label = paste0("Mean Joviality: ", round((mean_j),2)),
                  color = "#4d5887") +
      geom_vline(aes(xintercept = med_j),
                colour="grey20", linewidth = 0.8, linetype = "dashed") +
      annotate(geom = "text", x = med_j - 0.13, y = 1.5,
                  label = paste0("Median Joviality: ", round((med_j),2)),
                  color = "grey20") +
      scale_x_continuous(breaks = scales::pretty_breaks(n = 10)) +
      labs(title = "Distribution of Participants' Joviality Scores") +
      theme(axis.text.y = element_blank(),
            axis.title.y = element_blank(),
            panel.grid.major = element_blank())

```
:::

## Collinearity Check

::: {.cushbox .cushicon}
The variables **householdSize** and **haveKids** cause aliasing when run together, therefore two separate collinearity checks are run using each at a time.
:::

::: panel-tabset
### householdSize

```{r}

# Load the car package
library(car)

# Fit the linear regression model
model <- lm(joviality ~ Education + Food + Recreation + 
              Shelter + Wage + RentAdjmt + householdSize + age + educationLevel + interestGroup, data = Joined_data)

summary(model)

# Calculate the VIFs using the vif() function
vif_values <- vif(model)

# Print the VIFs
print(vif_values)



```

### haveKids

```{r}


# Load the car package
library(car)

# Fit the linear regression model
model2 <- lm(joviality ~ Education + Food + Recreation + 
              Shelter + Wage + RentAdjmt + haveKids + age + educationLevel + interestGroup, data = Joined_data)

summary(model2)

# Calculate the VIFs using the vif() function
vif_values2 <- vif(model)

# Print the VIFs
print(vif_values2)
```

### Model 1 Visualisation

```{r}
# create plot
model1V <- lm(joviality ~ Education + Food + Recreation + 
              Shelter + Wage + RentAdjmt + householdSize + haveKids + age + educationLevel + interestGroup, data = Joined_data)

check_c <- check_collinearity(model1V)
plot(check_c)

# rotate x-axis labels
par(las=2) #doesn't work to rotate labels


```
:::

::: {.bubblebox .bubbleicon}
Based on the collinearity checks, we observe that the highest scoring variable (householdSize) scored at 5.69, suggesting moderate correlation between householdSize and joviality, which means they may share some common variance but are not highly correlated to cause multicollinearity. 
:::

## 5.2 Financial Variables

### Cut Wage and Expense Proportion into Categories based on Quantiles

For insights involving Financial Variables, the participants will be grouped by income level, as well as the proportion of their income (Wage) being spent (Expense_Prop).

```{r}
describe(Joined_data$Wage) #to assess best cut points for income levels

```

```{r}
describe(Joined_data$Expense_Prop) #to assess best cut points for income levels

```

::: {.cushbox .cushicon}
Based on the distribution described above, the cut points values matching **25th, 50th and 90th percentile** are used to group participants by income level and expense proportion:

**Bottom 25th Percentile -\> Low Income** **26th to 50th Percentile -\> Low-Middle Income** **50th to 90th Percentile -\> Middle-High Income** **Top 10th Percentile -\> High Income**

**Bottom 25th Percentile -\> Low Proportion** **26th to 50th Percentile -\> Low-Middle Proportion** **50th to 90th Percentile -\> Middle-High Proportion** **Top 10th Percentile -\> High Proportion**
:::

### 5.2.1 Grouping Participants by Income Levels

::: panel-tabset
### Code

```{r}

# Define the breaks for the three bins
breaks <- c(0, 2551, 3388, 6574, Inf)

# Bin the Wage variable into three categories using cut()
income_levels <- cut(Joined_data$Wage, breaks, labels = c("Low", "Low-Middle", "Middle-High", "High"))

# Add the income levels as a new column in the dataset
Joined_data$Income_Level <- income_levels
```

### Distribution Barchart

```{r}
# Barchart of Income Level
dem_incomelvl<- ggplot(Joined_data, aes(x = Income_Level, fill = Income_Level)) +
            geom_bar() +
            labs(title = "High Distribution of \nParticipants in Middle-High Income Level", #< Linebreak added 
                  x = "Income Level",
                  y = NULL) +
            geom_text(stat = "count",
                      aes(label = after_stat(count)),
                      vjust = -1) +
            ylim(0,500) + 
            theme(text = element_text(size = 12))

dem_incomelvl
```
:::

### 5.2.2 Grouping Participants by Expense Proportion Category

::: panel-tabset
### Code

```{r}

# Define the breaks for the three bins
breaks <- c(0, 18.854, 33.714, 69.468, Inf)

# Bin the Wage variable into three categories using cut()
Expense_PropC <- cut(Joined_data$Expense_Prop, breaks, labels = c("Low", "Low-Middle", "Middle-High", "High"))

# Add the income levels as a new column in the dataset
Joined_data$Expense_PropCat <- Expense_PropC
```

### Distribution Barchart

```{r}
# Barchart of Income Level
dem_Exp_PropC<- ggplot(Joined_data, aes(x = Expense_PropCat, fill = Expense_PropCat)) +
            geom_bar() +
            labs(title = "High Distribution of \nParticipants in Middle-High Expense Proportion Cat", #< Linebreak added 
                  x = "Expense Prop Cat",
                  y = NULL) +
            geom_text(stat = "count",
                      aes(label = after_stat(count)),
                      vjust = -1) +
            ylim(0,500) + 
            theme(text = element_text(size = 12))

dem_Exp_PropC
```
:::

## 5.3 Association Testing (Chi-Squared Test)

::: {.bubblebox .bubbleicon}
Of the variables tested, only Education Level is significantly associated with Expense Proportion Category (p <0.05).

We therefore reject the null hypothesis that there is no association between the variables.
:::

::: panel-tabset
## Children

```{r}
set.seed(1234)
test_kids <- ggbarstats(Joined_data,
                          x = haveKids, y = Expense_PropCat, 
                        bf.message = FALSE)+
            labs(title = "Constant Proportion of Children Across Expense Proportion Categories",
                 x = "Expense Proportion Category") +
            theme(plot.background = element_rect(fill="#F8F3E6",colour="#F8F3E6"))
test_kids
```

## Education Levels

```{r}
set.seed(1234)
test_edlvl <- ggbarstats(Joined_data,
                          x = educationLevel, y = Expense_PropCat,
                          bf.message = FALSE) +
            labs(title = "Large Proportion of Low Expense Proportion Category are Higher Educated",
                 x = "Expense Proportion Category") +
            theme(plot.background = element_rect(fill="#F8F3E6",colour="#F8F3E6"))
test_edlvl

```

## Interest Group

```{r}
set.seed(1234)
test_age <- ggbarstats(Joined_data,
                          x = ageGroup, y = Expense_PropCat,
                          bf.message = FALSE) +
            labs(title = "Even Proportion of Expense Proportion Category Across Age Groups",
                 x = "Expense Proportion Category") +
            theme(plot.background = element_rect(fill="#F8F3E6",colour="#F8F3E6"))
test_age

```

## Income Level

```{r}
set.seed(1234)
test_inclvl <- ggbarstats(Joined_data,
                          x = Income_Level, y = Expense_PropCat,
                          bf.message = FALSE) +
            labs(title = "High Income Level Earners Exclusively Within Low and Low Middle \n Expense Proportion Categories",
                 x = "Expense Proportion Category") +
            theme(plot.background = element_rect(fill="#F8F3E6",colour="#F8F3E6"))
test_inclvl

```
:::

### 5.4 Comparison of mean Joviality Scores (ANOVA)

A non-parametric Kruskal-Wallis one-way ANOVA test is conducted to determine if there is a significant difference in mean joviality score between the following factors. We test for the null hypothesis that there is no difference in mean between the variable factors, at confidence level of 0.05.

::: panel-tabset
## Income Levels

```{r}
ggbetweenstats(Joined_data, x= Income_Level, y= joviality) +
  labs(x = "Income Level", y = "Joviality Score")

```

As p is less than 0.05, we reject the null hypothesis that there is no significant difference in means across income groups.

## Age Groups

```{r}

ggbetweenstats(Joined_data, x= ageGroup, y= joviality) +
  labs(x = "Age Group", y = "Joviality Score")

```

An interesting insight can be gleaned from this comparison of means- as a significantly higher mean joviality score is observed in both Middle and Lower income groups, while the lowest mean score is observed in the High income group.

## Education Levels

```{r}
ggbetweenstats(Joined_data, x= educationLevel, y= joviality) +
  labs(x = "Education Level", y = "Joviality Score")

```

Through comparison of mean joviality scores across education levels, the null hypothesis is that there is no difference between means. As p \> 0.05, we accept the null hypothesis.

## Household Size

```{r}
ggbetweenstats(Joined_data, x= householdSize, y= joviality) +
  labs(x = "Household Size", y = "Joviality Score")

```

## Interest Groups

```{r}


ggbetweenstats(Joined_data, x = interestGroup, y = joviality) +
  scale_color_manual(values = viridis(length(levels(Joined_data$interestGroup)))) +
  labs(x = "Interest Group", y = "Joviality Score")



```
:::

::: {.bubblebox .bubbleicon}
**Insights**

1)  A significantly higher mean joviality score is observed in both Middle and Lower income groups, while the lowest mean score is observed in the High income group.

2)  P-value is >0.05 for all variables except for Income Group, with marginal difference between means within the variables.

:::


## 5.5 Wage across Education Levels

::: panel-tabset
## Interactive Density Plot

```{r}
# prepare the data
Joined_data$education_group <- factor(Joined_data$educationLevel, 
                                 levels = c("Low", "HighSchoolOrCollege", "Bachelors", "Graduate"), 
                                 labels = c("Low education", "High School or College", "Bachelor's Degree", "Graduate Degree"))


# create the ggplot object

p <- ggplot(Joined_data, aes(x = Wage, fill = education_group)) +
  geom_density(alpha = 0.6) +
  labs(x = "Wage ($)") +
  labs(title = 'Wage Distribution across Education Levels', fill = 'Education Level') +
  theme(axis.text.y = element_blank(), axis.title.y = element_blank())



# convert to interactive plot
ggplotly(p)

```

## Ridgeplot

```{r}


p2 <- ggplot(Joined_data, aes(y = education_group, x = Wage, fill = education_group)) +
  geom_density_ridges(alpha = 0.6, scale = 0.9) +
  scale_x_continuous(limits = c(0, 20000)) +
  labs(x = "Wage ($)", y = "", fill = 'Education Level') +
  labs(title = 'Wage Distribution across Education Levels') +
  theme(axis.text.y = element_blank(), axis.title.y = element_blank())

p2


```

## Raincloud Plot (sans dotplot)

```{r}

Joined_data %>%
  ggplot(aes(x = education_group, y = Wage, fill = education_group)) +
  stat_halfeye(adjust = 0.5, justification = -0.2, .width = 0, point_colour = NA) +
  geom_boxplot(position = position_nudge(x = 0.3), width = 0.2, outlier.color = NA, alpha = 0.5) +
  stat_dots(side = "left", justification = 1.1, binwidth = 0.25, size = 0.5) +
  scale_fill_manual(values = c("#F8766D", "#00BFC4", "#FFC200", "#C77CFF")) +
  theme_minimal() +
  theme(axis.text.y = element_blank(), axis.title.y = element_blank(), legend.position = "top") +
  labs(title = 'Wage Distribution across Education Levels', x = "Education Level", y = "", fill = "Education Level") +
  coord_flip() +
  lims(y = c(0, 10000))



```

For Visualisation ease, values \> 10,000 for Wage have been obscured through limiting of the graph's axis.
:::

::: {.bubblebox .bubbleicon}

It is observed that the mean wage/income for participants is higher when they have been educated to a further extent, as observed in Visualisation, where the boxplot depicts increasing mean values as education level increases.


:::

## 5.6 Have Kids/Joviality


::: panel-tabeset
### Animated Plot Depicting Uncertainty

```{r}


ggplot(data = Joined_data, 
       aes(x = factor(haveKids), y = joviality)) +
  geom_point(position = position_jitter(
    height = 0.3, width = 0.05), 
    size = 0.4, color = "#0072B2", alpha = 1/2) +
  geom_hpline(data = sampler(25, group = haveKids), height = 0.6, color = "#D55E00") +
  theme_bw() + 
  # `.draw` is a generated column indicating the sample draw
  transition_states(.draw, 1, 3) +
  labs(x = "Have Children?",
       y = "Joviality",
       title = "Joviality by Having Children")



```

### Boxplot Comparison

```{r}

p <- ggplot(Joined_data, aes(x = haveKids, y = joviality, fill = haveKids)) +
  geom_boxplot() +
  labs(x = "Have Kids",
       y = "Joviality",
       title = "Comparison of Joviality Scores by whether Participant has Children")

ggplotly(p, tooltip = c("y", "group_mean", "group_median", "lower", "upper")) %>%
  layout(xaxis = list(title = "Have Children"),
         yaxis = list(title = "Joviality Score"),
         showlegend = FALSE)


```
:::

::: {.bubblebox .bubbleicon}

The plot highlights the uncertainty associated with comparing joviality with the variable of having children, this is supported by the boxplot, which depicts relatively equal mean scores for joviality between participants with and without children. This indicates that there is no significant inclination observed between the two different states (having children or not).

:::



### 5.7 EPC/Have Kids/Education Level/Joviality

```{r}
ExpP <- ggplot(Joined_data, aes(x = Expense_PropCat, y = joviality, fill = Expense_PropCat)) + 
  geom_boxplot() + 
  facet_grid(haveKids~educationLevel) +
  theme_bw() + 
  scale_y_continuous(breaks = scales::pretty_breaks(n=3)) + 
  theme(panel.spacing = unit(1, 'lines'),
        axis.text.x = element_blank(),
        axis.ticks.x = element_blank()) +
  labs(x = " ",
       y = "Joviality",
       fill = "Expense Proportion \n Category")

# Make into interactive diagram to show Statistics  
ggplotly(ExpP)



```

::: {.bubblebox .bubbleicon}

1) Participants who spent a high proportion of their income record the highest mean joviality score across all categories observed in the plot. 

2) However, in less educated groups (High School or College, Low Education), joviality scores are higher when participants spend a low proportion of their income. 

:::

## Spending Streams and Joviality
```{r}

# Calculate the correlation coefficients between joviality and the types of expenses
correlation_matrix <- cor(Joined_data[c("Shelter", "Education", "Food", "Recreation", "joviality")])

# Check the correlation matrix
correlation_matrix
```
::: {.bubblebox .bubbleicon}

Correlation Analysis tells us that of all the types of expenditure, Recreation has the largest correlation coeffiecient (-0.25), but is still considered a weak negative association. 

The results suggest that while slight shifts in joviality might be observed with reductions in Food and Recreation spending, it may not be significant enough to justify the town's spendings.

:::

## 6 Recommendations

::: {.bubblebox .bubbleicon}

1) Based on the analyses performed thus far, Income Level and Expense Proportion Category comparisons seem to draw the most difference in joviality scores.

Specifically, proportion of spending between education levels seems to suggest that despite the relatively higher mean income associated with better education, those who spend less actually feel less happy than those who have a high expense proportion. 

This suggests there is a population of Graduates and High School/College Graduants who may benefit from new sources of expenditure. Despite weak positive correlation between Shelter spending and joviality, it is suggested that the town explore developing a small number of high quality residences for this group of people.

2) The town can also look into affordability schemes for middle to low income earners, so as to reduce the number of people within the Low-Middle and Middle-High Expense Proportion Categories.

::: 

## Data Limitations and Further Analysis

::: {.bubblebox .bubbleicon}

1) Sample selection method does not assure us of accurate representation, as there is no information on demographic distribution and survey methods.

2) Correlation does not equate causation. While there are indicative signs of some association between joviality scores and select variables, the data collected may not be holistic enough to completely capture the nuance of all factors involved. This can be mitigated through conducting several rounds of survey and to ensure the population is well-accounted for.

:::