---
title: "Take-Home Exercise 3"
author: "Leonard Lee"

format:
  html:
    code-fold: true
    code-summary: "Show me the good stuff"
execute:
  warning: false
date: "03 June 2023"
date-modified: "`r Sys.Date()`"
---

## Loading the Packages

```{r}
pacman::p_load(jsonlite, tidygraph, ggraph, 
               visNetwork, graphlayouts, ggforce, 
               skimr, tidytext, tidyverse)
```

## Importing the data


```{r}
mc3_data <- fromJSON("data/MC3.json")

```

## Data Preparation

### Extracting the Edges

```{r}

mc3_edges <- as_tibble(mc3_data$links) %>% 
  distinct() %>%
  mutate(source = as.character(source),
         target = as.character(target),
         type = as.character(type)) %>%
  group_by(source, target, type) %>%
    summarise(weights = n()) %>%
  filter(source!=target) %>%
  ungroup()

```

### Extracting the Nodes
```{r, warning= FALSE}

mc3_nodes <- as_tibble(mc3_data$nodes) %>%
  mutate(country = as.character(country),
         id = as.character(id),
         product_services = as.character(product_services),
         revenue_omu = as.numeric(as.character(revenue_omu)),
         type = as.character(type)) %>%
  select(id, country, type, revenue_omu, product_services)

```

## Initial Data Exploration

### Exploring the Edges data frame

```{r}

skim(mc3_edges)


```
::: {.cushbox .cushicon}

The data summary shows that there are no missing values in all fields. 

:::


```{r, warning = FALSE}
DT::datatable(mc3_edges)

```

```{r}
ggplot(data = mc3_edges,
       aes(x = type)) +
  geom_bar()

```


## Initial Network Visualisation and Analysis

### Network Model (Tidygraph)
```{r, warning = FALSE}
id1 <- mc3_edges %>%
  select(source) %>%
  rename(id = source)
id2 <- mc3_edges %>%
  select(target) %>%
  rename(id = target)
mc3_nodes1 <- rbind(id1, id2) %>%
  distinct() %>%
  left_join(mc3_nodes,
            unmatched = "drop")

mc3_graph <- tbl_graph(nodes = mc3_nodes1,
                       edges = mc3_edges,
                       directed = FALSE) %>%
  mutate(betweenness_centrality = centrality_betweenness(),
         closeness_centrality = centrality_closeness())

mc3_graph %>%
  filter(betweenness_centrality >= 100000) %>%
ggraph(layout = "fr") +
  geom_edge_link(aes(alpha=0.5)) +
  geom_node_point(aes(
    size = betweenness_centrality,
    colors = "lightblue",
    alpha = 0.5)) +
  scale_size_continuous(range=c(1,10))+
  theme_graph()

```
## Exploring Nodes data frame

```{r}

skim(mc3_nodes)

```

::: {.cushbox .cushicon}

The data summary shows that there are no missing values for all character-variables, while there are 21515 missing values in the numeric-variable __value_omu__. 

:::

```{r, warning = FALSE}
DT::datatable(mc3_nodes)
```

## Tokenisation

```{r}
token_nodes <- mc3_nodes %>%
  unnest_tokens(word, 
                product_services)

```

```{r}
token_nodes %>%
  count(word, sort = TRUE) %>%
  top_n(15) %>%
  mutate(word = reorder(word, n)) %>%
  ggplot(aes(x = word, y = n)) +
  geom_col() +
  xlab(NULL) +
  coord_flip() +
      labs(x = "Count",
      y = "Unique words",
      title = "Count of unique words found in product_services field")

```
### Removing stopwords

```{r}

stopwords_removed <- token_nodes %>% 
  anti_join(stop_words)

stopwords_removed %>%
  count(word, sort = TRUE) %>%
  top_n(15) %>%
  mutate(word = reorder(word, n)) %>%
  ggplot(aes(x = word, y = n)) +
  geom_col() +
  xlab(NULL) +
  coord_flip() +
      labs(x = "Count",
      y = "Unique words",
      title = "Count of unique words found in product_services field")
```
```{r}


```

